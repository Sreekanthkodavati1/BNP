<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Brierley.FrameWork</name>
    </assembly>
    <members>
        <member name="T:Brierley.FrameWork.bScript.Attribute">
            <summary>
            The attribute class encapsulates the row.attribute syntax in the expression engine. row.attribute is neither
            an operator or a function although it does inherit from expression. It represent a special case in the syntax
            parsing logic to handle the ability to address attributes in a row of data. In the future this could be re-worked
            into a function of the form Row("AttributeName") where the function would return the value of the named attribute.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Attribute.#ctor(System.String)">
            <summary>
            Internal constructor
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Attribute.Name">
            <summary>
            The Name of the attribute being addressed.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Attribute.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.BinaryOperation">
            <summary>
            BinaryOperation is an abstract class that provides all the basic functionality required by an
            expression of the form x operator y.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.BinaryOperation.#ctor(System.String,Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Default constructor
            </summary>
            <param name="op">The string representation of the operation</param>
            <param name="lhs">An expression object representing the left sub-tree</param>
            <param name="rhs">An expression object representing the right sub-tree</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.BinaryOperation.#ctor">
            <summary>
            Public constructor for UI purposes.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.BinaryOperation.ToString">
            <summary>
            A string representation of the operation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.BinaryOperation.GetLeft">
            <summary>
            Returns the left subtree of the operation
            </summary>
            <returns>An expression</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.BinaryOperation.GetRight">
            <summary>
            Returns the right subtree of the operation
            </summary>
            <returns>An expression</returns>
        </member>
        <member name="P:Brierley.FrameWork.bScript.BinaryOperation.Operator">
            <summary>
            Returns the string representation of the operator
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.BinaryOperation.parseMetaData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Constant">
            <summary>
            The Constant class is a form of expression. It simply defines a numeric value that is acting as a constant 
            in an expression.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Constant.#ctor(System.Decimal)">
            <summary>
            Internal constructor
            </summary>
            <param name="value">The Constant Value</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Constant.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Evaluates and returns the value of the constant at runtime.
            </summary>
            <param name="contextObject">The evaluation context. Not used by this class.</param>
            <returns>An object representing the value of the constant. The bScript expression engine
            deals in decimal numbers. So, if the constant is 10 you will get a type decimal object back with
            a value of 10.
            </returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Constant.ToString">
            <summary>
            The string representation of the operation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.EnvironmentKeys">
            <summary>
            Contains constants representing the known list of keys passed to ContextObject's Environment dictionary.
            </summary>
            <remarks>
            The creation of this class was driven mainly by the need to put the GetEnvironmentString bScript function into the
            expression builder. The function works better if a known list of values are shown in the suggestion list.
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.AddHour">
            <summary>
            Add the specified number of hours to the specified date.
            </summary>
            <example>
                Usage : AddHour(date, offset)
            </example>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.CachedResult">
            <summary>
            Retrieves an expression's result from cache, if previously evaluated using CachedResult. Otherwise, caches the result for later retrieval.
            </summary>
            <example>
                Usage : CachedResult(GetPoints('type', from, to))
            </example>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.Ceiling">
            <summary>
            Performs a ceiling function on its operand.
            </summary>
            <example>
                Usage : Ceiling(number)
            </example>
            <remarks>The parameter value supplied to the ceiling function must be numeric</remarks>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.Floor">
            <summary>
            Performs a floor function on its operand.
            </summary>
            <example>
                Usage : Floor(number)
            </example>
            <remarks>The parameter value supplied to the Floor function must be numeric</remarks>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetCurrencyMonetaryValue">
            <summary>
            Returns the current member's point balance as expressed in the given (or default) currency's value
            </summary>
            <example>
                Usage : GetCurrencyMonetaryValue([Currency])
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetCurrencyMonetaryValue.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrencyMonetaryValue.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrencyMonetaryValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrencyMonetaryValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetFrameworkConfigValue">
            <summary>
            The GetFWConfigValue function return the string value from the framework configuration store that has the key
            value matching the value supplied by ConfigurationKeyName.
            </summary>
            <example>
                Usage : GetFWConfigValue('ConfigurationKeyName')
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFrameworkConfigValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFrameworkConfigValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetFrameworkConfigValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFrameworkConfigValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetHour">
            <summary>
            Get the hour component of the specified date.
            </summary>
            <example>
                Usage : GetHour(date)
            </example>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetMemberRewardCount">
            <summary>
            The GetPoints function the members points value for the given date range and point type.
            </summary>
            <example>
                Usage : GetPoints(['PointType'],Start Date, End Date)
            </example>
            <remarks>
                PointType is optional.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetNextAvailableReward">
            <summary>
            
            </summary>
            <remarks>
            LW-5543
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetPointsSummary">
            <summary>
            The GetPointsSummary function gets the members points sumamry for the given point event and point type.
            </summary>
            <example>
                Usage : GetPointsSunmmary('Type',['PointType'],['PointEvent'])
            </example>
            <remarks>
                Type - Balance | Earned
                PointType is a semi colon delimeted list of point types
                PointEvent is a semi colon delimeted list of point events
               
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsSummary.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsSummary.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetPointsSummary.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsSummary.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetTierProperty">
             <summary>
             The GetTierProperty function returns the property value of a specified tier
             </summary>
             <example>
                 Usage : GetTierProperty('TierName','PropertyName')
             </example>
             <remarks>
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetTierProperty.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetTierProperty.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetTierProperty.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.HasReward">
            <summary>
            Determines if a Member has earned a specific reward.
            </summary>
            <example>
                Usage : HasReward('RewardName'[,'StartDate','EndDate'])
            </example>
            <remarks>
            RewardName must be a valid reward name
            StartDate 
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HasReward.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal constructor
            this will initialize any parameters sent
            </summary>
            <param name="rhs"></param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.HasReward.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HasReward.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            This is the main method for the bscript, all the main logic is done here
            This bscript function will return either true or false depending if the meber has earned a specific reward or not
            There are two ways of calling this function, one only requires the reward name, the second will look a a specific date range.
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsEmailSuppressed">
            <summary>
            The IsEmailSuppressed function will return true if the specified email address is currently being suppressed.
            </summary>
            <example>
                Usage : IsEmailSuppressed(emailAddress)
            </example>
            <remarks>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Brierley.FrameWork.bScript.Functions.IsItemIssued" -->
        <member name="M:Brierley.FrameWork.bScript.Functions.IsItemIssued.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsItemIssued.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="expression">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsItemIssued.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsItemIssued.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.PointsToRewardChoice">
            <summary>
            The PointsToRewardChoice function gets the points needed to get to the next chosen reward.
            </summary>
            <example>
            PointsToRewardChoice()
            </example>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.QueryString">
            <summary>
            Retrieves a query string value, when executed in a web page.
            </summary>
            <example>
                Usage : QueryStringValue(parameter)
            </example>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.RewardChoice">
            <summary>
            This function will return the name of the member's reward choice. If the member has not made a choice or their current choice is invalid, this function 
            will return the name of the tier's default reward choice. The member must be in a tier and the tier must have rewards associated with it. In the event 
            that the required conditions are not met, this method will return null.
            </summary>
            <example>
            RewardChoice()
            </example>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.StrCompare">
            <summary>
            The StrCompare function compares two strings and returns an integer indicating their relative sort order
            the second string parameter.
            </summary>
            <example>
                Case sensitive comparison:
            			StrCompare('a', 'b', true) : Returns -1, a is sorted before b
            			StrCompare('b', 'b', true) : Returns 0, both strings are equal
            			StrCompare('c', 'b', true) : Returns 1, c is sorted after b
            	Case insensitive comparison:
            			StrCompare('a', 'A', false) : Returns -1
            			StrCompare('a', 'a', false) : Returns 0
            			StrCompare('A', 'a', false) : Returns 1
            </example>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.CampaignStepResultCount">
             <summary>
             Returns the last record count for the specified campaign step.
             </summary>
             <example>
                 Usage : CampaignStepResultCount(['Campaign Name'],'Step Name')
             </example>
             <remarks>
             Campaign Name must be the name of an existing campaign.
             Step Name must be the name of an existing step in the campaign.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.CampaignStepResultCount.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.CampaignStepResultCount.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.CampaignStepResultCount.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.CampaignStepResultCount.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetCampaignAttributeValue">
             <summary>
             Returns the current value of the specified campaign attribute.
             </summary>
             <example>
                 Usage : GetCampaignAttributeValue(['Campaign Name'],'Attribute Name')
             </example>
             <remarks>
             Campaign Name must be the name of an existing campaign.
             Step Name must be the name of an existing step in the campaign.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCampaignAttributeValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCampaignAttributeValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetCampaignAttributeValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCampaignAttributeValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.MakeDate">
            <summary>
            Creates a date object based on the parameters.
            </summary>
            <example>
                Usage : MakeDate(Year, Month, Day, [Hour], [Minutes], [Seconds])
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MakeDate.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.MakeDate.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MakeDate.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetSocialDataProperty">
             <summary>
             The GetSocialDataProperty function returns the property value of the social data
             </summary>
             <example>
                 Usage : GetSocialDataProperty('PropertyName')
             </example>
             <remarks>
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetSocialDataProperty.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetSocialDataProperty.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetSocialDataProperty.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetSocialDataProperty.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsSocialSentiment">
             <summary>
             The IsSocialSentiment function returns true or false if the social sentiment matches the parameter
             </summary>
             <example>
                 Usage : IsSocialSentiment('Sentiment')
             </example>
             <remarks>
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsSocialSentiment.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsSocialSentiment.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsSocialSentiment.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsSocialSentiment.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsSocialPublisher">
             <summary>
             The IsSocialPublisher function returns true or false if the publisher matches the parameter
             </summary>
             <example>
                 Usage : IsSocialPublisher('PublisherName')
             </example>
             <remarks>
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsSocialPublisher.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsSocialPublisher.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsSocialPublisher.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsSocialPublisher.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetPointTransactionCount">
            <summary>
            The GetPointTransactionCount function counts the number of point transactions for the memberfor the given parameters.
            </summary>
            <example>
                Usage : GetPointTransactionCount('PointTypes','PointEvents', Start Date, End Date,[Include Expired Points])
            </example>
            <remarks>
                PointType names delimeted by ;.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointTransactionCount.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointTransactionCount.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetPointTransactionCount.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointTransactionCount.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetTotalPointsAwarded">
            <summary>
            The GetTotalPointsAwarded function the members points value for the given date range and the set of point types.
            </summary>
            <example>
                Usage : GetTotalPointsAwarded('PointTypes','PointEvents', Start Date, End Date,[Include Expired Points])
            </example>
            <remarks>
                PointType names delimeted by ;.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetTotalPointsAwarded.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetTotalPointsAwarded.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetTotalPointsAwarded.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetTotalPointsAwarded.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetPointsByOwnerType">
            <summary>
            The GetPointsByOwnerType function the members points value for the given owner type and owner id.
            </summary>
            <example>
                Usage : GetPointsByOwnerType([OwnerType], [OwnerId], [RowKey] ,[Start Date], [End Date])
            </example>
            <remarks>
                RowKey is optional.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsByOwnerType.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsByOwnerType.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetPointsByOwnerType.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsByOwnerType.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetViewedConceptForState">
            <summary>
            Used to get the content for a viewed concept for a particular state in a survey.
            
            The method arguments are as follows:
            StateName - a string that matches a state name for the current survey.
            
            </summary>
            <example>
                Usage: GetViewedConceptForState('StateName')
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetViewedConceptForState.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetViewedConceptForState.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor used internally.
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetViewedConceptForState.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetViewedConceptForState.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A context object used for evaluating argument expressions</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetViewedConceptForState.parseMetaData">
            <summary>
            Parse the expression for meta data.  Used in LoyaltyNavigator to determine which attributes need
            to be provided in order to render a page during preview.
            </summary>
            <returns>semicolon separated list of attributes or empty string if no metadata</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.HasBonus">
            <summary>
            The HasBonus function will return true if the member is in the named bonus.
            </summary>
            <example>
                Usage : HasBonus('bonus name')
            </example>
            <remarks>
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HasBonus.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HasBonus.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.HasBonus.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HasBonus.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.HasCompletedBonus">
            <summary>
            The HasCompletedBonus function will return true if the member has completed the named bonus.
            </summary>
            <example>
                Usage : HasCompletedBonus('bonus name')
            </example>
            <remarks>
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HasCompletedBonus.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HasCompletedBonus.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.HasCompletedBonus.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HasCompletedBonus.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsMemberLoggedIn">
            <summary>
            Used to determine if the member is currently logged in.
            </summary>
            <example>
                Usage: IsMemberLoggedIn()
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsMemberLoggedIn.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsMemberLoggedIn.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsMemberLoggedIn.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.RefAttrValueByRowKey">
             <summary>
             The RefAttrValueByRowKey function returns the value for the named attribute of the global 
             attribute set by its rowkey.
             </summary>
             <example>
                 Usage : RefAttrValueByRowKey('GlobalAttributeSetName',RowKey, 'attrName')
             </example>
             <remarks>
             Global Attribute Set Name must be the name of a valid attribute set.
             RowKey is the primay key of the attribute set.
             attrName must be the name of a valid attribute in the named attribute set.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RefAttrValueByRowKey.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RefAttrValueByRowKey.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.RefAttrValueByRowKey.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RefAttrValueByRowKey.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RefAttrValueByRowKey.parseMetaData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.SetCampaignAttributeValue">
             <summary>
             Sets an in-memory override of the specified attribute for the currently executing campaign.
             </summary>
             <example>
                 Usage : SetCampaignAttributeValue('Attribute Name', 'Attribute Value')
             </example>
             <remarks>
             This function only works against an executing campaign. The new attribute value is only set in memory as an override and is not persisted.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SetCampaignAttributeValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SetCampaignAttributeValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.SetCampaignAttributeValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SetCampaignAttributeValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.SurveyReviewConcept">
            <summary>
            Used to allow the user to review a concept that had been seen on a particular state in the current survey.
            
            The method arguments are as follows:
            StateName - The state name (for a question or message).
            Prompt - (optional) If the concept is to be seen in a dialog box, then this is the prompt for the link.  If not 
                         provided, then the concept will be shown inline.
            
            The result of this method is a string, which represents HTML to be injected to review the concept.
            </summary>
            <example>
                Usage: SurveyReviewConcept('StateName'[,'Prompt'])
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyReviewConcept.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyReviewConcept.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor used internally.
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.SurveyReviewConcept.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyReviewConcept.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A context object used for evaluating argument expressions</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyReviewConcept.parseMetaData">
            <summary>
            Parse the expression for meta data.  Used in LoyaltyNavigator to determine which attributes need
            to be provided in order to render a page during preview.
            </summary>
            <returns>semicolon separated list of attributes or empty string if no metadata</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.TodayName">
            <summary>
            TodayName is a function that will return the name of the day of the week
            on which the supplied date falls.
            </summary>
            <example>
                Usage : TodayName('date')
                Usage : TodayName(Member.AccountOpenDate)
            </example>
            <remarks>Function names are not case sensative.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.TodayName.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Public constructor used by UI components
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.TodayName.#ctor">
            <summary>
            Public constructor used primarily by UI components.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.TodayName.Syntax">
            <summary>
            This method will return the function syntax definition
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.TodayName.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.CouponLink">
            <summary>
            Used to create a clickable html link (anchor tag) to a generic URL with an MTouch for getting a user's 
            coupon as a passbook pass.  Method returns a string which is the html rendering of the link.
            
            The method arguments are as follows (all are optional):
            linkText - a string that will be embedded in the link.  (default = 'Please click here for coupon.')
            mtouchFieldName - a string that indicates the name of the template field which contains the encoded mtouch values.
               (default = 'mtouch')
            baseUrl - a string that is the base URL for the href part of the link.  
               E.g., "<a href="baseUrl?MTouch=fieldName">LinkText</a>".  (default = value of LWCouponPassGeneratorURL)
            </summary>
            <example>
                Usage: CouponLink(['linkText', ['mtouchFieldName', ['baseUrl']]])
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.CouponLink.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.CouponLink.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.CouponLink.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.CouponLink.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.HtmlImageLink">
            <summary>
            Used to create a clickable html link (anchor tag) to a generic URL.  Method returns a string 
            which is the html rendering of the link.
            
            The method arguments are as follows:
            targetURL - a string that is the target URL for the href part of the link.  
            imageURL - a string that is the URL of the image that will be embedded in the link.	
            
            E.g., "<a href="targetURL"><img src="imageURL" /></a>"
            </summary>
            <example>
                Usage: HtmlImageLink('targetURL', 'imageURL')
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HtmlImageLink.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HtmlImageLink.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.HtmlImageLink.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HtmlImageLink.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.LoyaltyCardLink">
            <summary>
            Used to create a clickable html link (anchor tag) to a generic URL with an MTouch for getting a user's 
            loyalty card as a passbook pass.  Method returns a string which is the html rendering of the link.
            
            The method arguments are as follows (all are optional):
            linkText - a string that will be embedded in the link.  (default = 'Please click here for loyalty card.')
            mtouchFieldName - a string that indicates the name of the template field which contains the encoded mtouch values.
               (default = 'mtouch')
            baseURL - a string that is the base URL for the href part of the link.  
               (default = value of LoyaltyCardPassGeneratorURL)
            imageURL - a string that is the URL for the image part of the link.  
               (default: Apple's image from the content root at LWContentRootURL/orgname/Add_to_Passbook_US_UK.png)
            
            E.g., "<a href="baseURL?MTouch=fieldName"><img src="imageURL" alt="LinkText" /></a>".
            </summary>
            <example>
                Usage: LoyaltyCardLink(['linkText' [, 'mtouchFieldName' [, 'baseURL' [, 'imageURL']]]])
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.LoyaltyCardLink.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.LoyaltyCardLink.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.LoyaltyCardLink.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.LoyaltyCardLink.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetCookieValue">
            <summary>
            Get the value of a cookie.
            </summary>
            <example>
                Usage : GetCurrentUILanguage()
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetCookieValue.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCookieValue.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCookieValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCookieValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetCurrentUILanguage">
            <summary>
            Get the current UI language.
            </summary>
            <example>
                Usage : GetCurrentUILanguage()
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetCurrentUILanguage.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrentUILanguage.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrentUILanguage.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrentUILanguage.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetCurrentUICulture">
            <summary>
            Get the current UI culture.
            </summary>
            <example>
                Usage : GetCurrentUICulture()
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetCurrentUICulture.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrentUICulture.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrentUICulture.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrentUICulture.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetCurrentTierProperty">
             <summary>
             The GetCurrentTierProperty function returns the property value of the member's current tier
             </summary>
             <example>
                 Usage : GetCurrentTierProperty('PropertyName')
             </example>
             <remarks>
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrentTierProperty.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrentTierProperty.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetCurrentTierProperty.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrentTierProperty.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Brierley.FrameWork.bScript.Functions.HtmlLink" -->
        <member name="M:Brierley.FrameWork.bScript.Functions.HtmlLink.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HtmlLink.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.HtmlLink.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HtmlLink.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsNull">
            <summary>
            The IsNull function returns true if the result of the expression evalues to a null object.
            </summary>
            <example>
                Usage : IsNull('test') : Return bool
            </example>
            <remarks>Function names are not case sensative.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsNull.#ctor">
            <summary>
            Public constructor used by UI components
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsNull.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsNull.Syntax">
            <summary>
            This method returns a string of the functions syntax definition.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsNull.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.ToString">
            <summary>
            The ToString function returns the result of ToStrign on the object.
            </summary>
            <example>
                Usage : ToString('test') : Return string
            </example>
            <remarks>Function names are not case sensative.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ToString.#ctor">
            <summary>
            Public constructor used by UI components
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ToString.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.ToString.Syntax">
            <summary>
            This method returns a string of the functions syntax definition.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ToString.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsPromotionValid">
            <summary>
            The IsPromotionValid function will return true if the named promotion is valid.
            </summary>
            <example>
                Usage : IsPromotionValid('promotion code')
            </example>
            <remarks>
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsPromotionValid.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsPromotionValid.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsPromotionValid.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsPromotionValid.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.StoreByIdAttrValue">
             <summary>
             The StoreByIdAttrValue function returns the property value of the store identified by its id
             </summary>
             <example>
                 Usage : StoreByIdAttrValue('id','PropertyName')
             </example>
             <remarks>
             The id must be the identifier of the store.  The property must be a valid property of the store.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.StoreByIdAttrValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.StoreByIdAttrValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.StoreByIdAttrValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.StoreByIdAttrValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.ProductByPartNumberAttrValue">
             <summary>
             The ProductByPartNumberAttrValue function returns the property value of the product identified by its part number
             </summary>
             <example>
                 Usage : ProductByPartNumberAttrValue('part number','PropertyName', ['language'], ['channel'])
             </example>
             <remarks>
             The property must be a valid property of the product.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ProductByPartNumberAttrValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ProductByPartNumberAttrValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.ProductByPartNumberAttrValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ProductByPartNumberAttrValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.ProductByIdAttrValue">
             <summary>
             The ProductByIdAttrValue function returns the property value of the product identified by its id
             </summary>
             <example>
                 Usage : ProductByIdAttrValue('id','PropertyName', ['language'], ['channel'])
             </example>
             <remarks>
             The id must be the identifier of the product.  The property must be a valid property of the product.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ProductByIdAttrValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ProductByIdAttrValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.ProductByIdAttrValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ProductByIdAttrValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetEarnedPointsInSet">
            <summary>
            The GetEarnedPointsInSet function the members points value for the given date range and the set of point types.
            </summary>
            <example>
                Usage : GetEarnedPointsInSet('PointTypes','PointEvents', Start Date, End Date,[Include Expired Points])
            </example>
            <remarks>
                PointType names delimeted by ;.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEarnedPointsInSet.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEarnedPointsInSet.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetEarnedPointsInSet.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEarnedPointsInSet.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsQuotaMetForConcept">
            <summary>
            Used to determine if the quota has been met for a concept in a survey for a particular segment.
            
            The method arguments are as follows:
            ConceptName - a string that matches a concept name for the current survey.
            RespondentPropName - a string that matches a respondent property name (e.g., 'gender').
            RespondentPropValue - a string that matches a respondent property value (e.g., 'male').
            
            </summary>
            <example>
                Usage: IsQuotaMetForConcept('ConceptName', 'RespondentPropName', 'RespondentPropValue')
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsQuotaMetForConcept.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsQuotaMetForConcept.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor used internally.
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsQuotaMetForConcept.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsQuotaMetForConcept.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A context object used for evaluating argument expressions</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsQuotaMetForConcept.parseMetaData">
            <summary>
            Parse the expression for meta data.  Used in LoyaltyNavigator to determine which attributes need
            to be provided in order to render a page during preview.
            </summary>
            <returns>semicolon separated list of attributes or empty string if no metadata</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.DidRespondentViewConcept">
            <summary>
            Used to determine if the current respondent saw a concept in a survey.
            
            The method arguments are as follows:
            ConceptName - a string that matches a concept name for the current survey.
            
            </summary>
            <example>
                Usage: DidRespondentViewConcept('ConceptName')
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.DidRespondentViewConcept.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.DidRespondentViewConcept.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor used internally.
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.DidRespondentViewConcept.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.DidRespondentViewConcept.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A context object used for evaluating argument expressions</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.DidRespondentViewConcept.parseMetaData">
            <summary>
            Parse the expression for meta data.  Used in LoyaltyNavigator to determine which attributes need
            to be provided in order to render a page during preview.
            </summary>
            <returns>semicolon separated list of attributes or empty string if no metadata</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetRespondentProperty">
            <summary>
            Used to return the value of a survey respondent property.
            
            The method arguments are as follows:
            PropertyName - a string that matches a property name for the current survey respondent.
            
            Since the properties are stored in a textual format in the database, this method attempts to 
            parse the property value as a DateTime, then as a real/integer value, then simply as the 
            string itself.  The parsed value is then returned by the method as the appropriate type.
            </summary>
            <example>
                Usage: GetRespondentProperty('PropertyName')
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetRespondentProperty.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetRespondentProperty.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor used internally.
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetRespondentProperty.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetRespondentProperty.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A context object used for evaluating argument expressions</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetRespondentProperty.parseMetaData">
            <summary>
            Parse the expression for meta data.  Used in LoyaltyNavigator to determine which attributes need
            to be provided in order to render a page during preview.
            </summary>
            <returns>semicolon separated list of attributes or empty string if no metadata</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.PasswordResetLink">
            <summary>
            Used to create a clickable html link (anchor tag) to a generic URL with a single use code ("suid").  Method returns a string 
            which is the html rendering of the link.
            
            The method arguments are as follows:
            baseURL - a string that is the base URL for the href part of the link.  E.g., "<a href="baseURL?id=fieldName">LinkText</a>"
            linkText - a string that will be embedded in the link.
            suidFieldName - a string that indicates the name of the template field which contains the encoded suid value(s)
            </summary>
            <example>
                Usage: PasswordResetLink('baseURL', 'linkText', 'suidFieldName'])
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.PasswordResetLink.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.PasswordResetLink.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.PasswordResetLink.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.PasswordResetLink.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetPointsToNextReward">
            <summary>
            The GetPointsToNextReward function gets the points needed to get to the next reward.
            </summary>
            <example>
                Usage : GetPointsToNextReward(['PointType'])
            </example>
            <remarks>
                PointType is optional.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsToNextReward.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsToNextReward.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetPointsToNextReward.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsToNextReward.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetEarnedPoints">
            <summary>
            The GetEarnedPoints function the members points value for the given date range.
            </summary>
            <example>
                Usage : GetEarnedPoints([Start Date],[End Date],[Include Expired Points])
            </example>
            <remarks>
                PointType is optional.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEarnedPoints.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEarnedPoints.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetEarnedPoints.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEarnedPoints.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetPointsToNextTier">
            <summary>
            The GetPointsToNextTier function gets the points needed to get to the next tier.
            </summary>
            <example>
                Usage : GetPointsToNextTier([Include Expired Points])
            </example>
            <remarks>
                PointType is optional.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsToNextTier.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsToNextTier.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetPointsToNextTier.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsToNextTier.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.MTouchLink">
            <summary>
            Used to create a clickable html link (anchor tag) to a generic URL with an MTouch.  Method returns a string 
            which is the html rendering of the link.
            
            The method arguments are as follows:
            baseURL - a string that is the base URL for the href part of the link.  E.g., "<a href="baseURL?MTouch=fieldName">LinkText</a>"
            linkText - a string that will be embedded in the link.
            mtouchFieldName - a string that indicates the name of the template field which contains the encoded mtouch values
            </summary>
            <example>
                Usage: MTouchLink('baseURL', 'linkText', 'mtouchFieldName'])
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MTouchLink.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MTouchLink.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.MTouchLink.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MTouchLink.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetEnvironmentString">
            <summary>
            Gets the value of the provided key from ContextObject.Environment.
            </summary>
            <example>
                Usage : GetEnvironmentString(key)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetEnvironmentString.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEnvironmentString.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEnvironmentString.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEnvironmentString.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetPointsByEvent">
            <summary>
            The GetPointsByEvent function the members points value for the given date range and point event.
            </summary>
            <example>
                Usage : GetPointsByEvent('PointEvent',Start Date, End Date)
            </example>
            <remarks>
                PointEvent must be a valid point event.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsByEvent.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsByEvent.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetPointsByEvent.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsByEvent.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetBeginningOfDay">
            <summary>
            Returns the date corresponding to the beginning of the specified date.
            </summary>
            <example>
                Usage : GetBeginningOfDay('date')     
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetBeginningOfDay.Syntax">
            <summary>
            Syntax definition for the function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetBeginningOfDay.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetBeginningOfDay.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetBeginningOfDay.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. This function expectes its parameter to be a date.
            The function will make every effort to convert the value to a date. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an illegal expression exception if
            its operand is not a date or cannot be converted to a valid date. </exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.SetRespondentProperty">
            <summary>
            Used to set the value of a survey respondent property.
            
            The method arguments are as follows:
            PropertyName - a property name for the current survey respondent.
            PropertyValue - a property value for the current survey respondent.
            </summary>
            <example>
                Usage: SetRespondentProperty('PropertyName', 'PropertyValue')
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SetRespondentProperty.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SetRespondentProperty.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor used internally.
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.SetRespondentProperty.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SetRespondentProperty.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A context object used for evaluating argument expressions</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SetRespondentProperty.parseMetaData">
            <summary>
            Parse the expression for meta data.  Used in LoyaltyNavigator to determine which attributes need
            to be provided in order to render a page during preview.
            </summary>
            <returns>semicolon separated list of attributes or empty string if no metadata</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.SurveyConcept">
            <summary>
            Used to return the value of a concept within the content of a particular survey question.
            
            The method arguments are as follows:
            ConceptName - (optional) a string that matches a concept name in the list of concepts for the current survey.
               If multiple concept names are provided as arguments, then a random one is selected.  If no arguments are 
               provided, then a random concept is selected from the entire list of concepts for the survey.
            
            The result of this method is a string, which represents HTML of the concept to be injected.
            </summary>
            <example>
                Usage: SurveyConcept(['ConceptName1'[,ConceptName2[,...,ConceptNameN]]])
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyConcept.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyConcept.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor used internally.
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.SurveyConcept.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyConcept.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A context object used for evaluating argument expressions</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyConcept.parseMetaData">
            <summary>
            Parse the expression for meta data.  Used in LoyaltyNavigator to determine which attributes need
            to be provided in order to render a page during preview.
            </summary>
            <returns>semicolon separated list of attributes or empty string if no metadata</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.SurveyLink">
            <summary>
            Used to create a clickable html link (anchor tag) to a survey.  Method returns a string which 
            is the html rendering of the link.
            
            The method arguments are as follows:
            linkText - a string that will be embedded in the link.  E.g., "<a href="...">LinkText</a>"
            fieldName - a string that indicates the name of the template field which contains the encoded mtouch values
            pageName - a string that indicates the name of the page which contains the survey
            </summary>
            <example>
                Usage: SurveyLink('linkText', 'fieldName'])
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyLink.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyLink.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.SurveyLink.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyLink.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.SurveyResponse">
            <summary>
            Used to return the value of the user's response to a particular survey question.
            
            The method arguments are as follows:
            QuestionName - a string that matches the question name in the current survey's state diagram.
            
            QuestionIndex - (optional) an integer value that indicates the desired zero-based index of the 
            question for matrix questions, and that is ignored for non-matrix questions.  If this argument 
            is omitted, then index value of zero will be assumed.
            
            Since the responses are stored in a textual format in the database, this method attempts to 
            parse the response value as a DateTime, then as a real/integer value, then simply as the 
            string itself.  The parsed value is then returned by the method as the appropriate type.
            </summary>
            <example>
                Usage: SurveyResponse('QuestionName'[,QuestionIndex])
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponse.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor used internally.
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.SurveyResponse.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponse.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A context object used for evaluating argument expressions</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponse.parseMetaData">
            <summary>
            Parse the expression for meta data.  Used in LoyaltyNavigator to determine which attributes need
            to be provided in order to render a page during preview.
            </summary>
            <returns>semicolon separated list of attributes or empty string if no metadata</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.SurveyResponseByAnswer">
            <summary>
            Used to return the value of the user's response to a particular survey question.
            
            The method arguments are as follows:
            QuestionName - a string that matches the question name in the current survey's state diagram.
            
            AnswerName - a string that matches the desired answer name in the specified question.
            
            Since the responses are stored in a textual format in the database, this method attempts to 
            parse the response value as a DateTime, then as a real/integer value, then simply as the 
            string itself.  The parsed value is then returned by the method as the appropriate type.
            </summary>
            <example>
                Usage: SurveyResponseByAnswer('QuestionName','AnswerName')
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponseByAnswer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponseByAnswer.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor used internally.
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.SurveyResponseByAnswer.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponseByAnswer.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A context object used for evaluating argument expressions</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponseByAnswer.parseMetaData">
            <summary>
            Parse the expression for meta data.  Used in LoyaltyNavigator to determine which attributes need
            to be provided in order to render a page during preview.
            </summary>
            <returns>semicolon separated list of attributes or empty string if no metadata</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.SurveyResponseContains">
            <summary>
            Used to determine if the user's responses contain specific values for a particular survey 
            question.  Method return boolean based on the rules specified by the Criteria argument.
            
            The method arguments are as follows:
            QuestionName - a string that matches the question name in the current survey's state diagram.
            
            Criteria - a string value from the following that determines the set criteria to use:
               'Any' - true result if any of the responseValues are contained in the set of responses
               'All' - true result if all of the responseValues are contained in the set of responses
               'Exact' - true result if the entire set of responseValues exactly equals the set of responses
            
            ResponseValue1[,...[,ResponseValueN]]] - (2..N optional) a list of values that indicates the 
            set of candidate responses to be matched to the actual user responses.
            
            Since the responses are stored in a textual format in the database, this method attempts to 
            convert each response value as a DateTime, then as a real/integer value, then simply as the 
            string itself, before using it for comparison.
            </summary>
            <example>
                Usage: SurveyResponseContains('QuestionName', 'Criteria', ResponseValue1[, ...[, ResponseValueN]]])
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponseContains.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponseContains.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor used internally.
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.SurveyResponseContains.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponseContains.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A context object used for evaluating argument expressions</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyResponseContains.parseMetaData">
            <summary>
            Parse the expression for meta data.  Used in LoyaltyNavigator to determine which attributes need
            to be provided in order to render a page during preview.
            </summary>
            <returns>semicolon separated list of attributes or empty string if no metadata</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyURL.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyURL.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.SurveyURL.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SurveyURL.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.AddDay">
            <summary>
            Add the specified number of days to the specified date.
            </summary>
            <example>
                Usage : AddDay(date, offset)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.AddDay.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AddDay.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AddDay.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AddDay.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.AddMonth">
            <summary>
            Add the specified number of months to the specified date.
            </summary>
            <example>
                Usage : AddMonth(date, offset)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.AddMonth.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AddMonth.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AddMonth.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AddMonth.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.AddYear">
            <summary>
            Add the specified number of years to the specified date.
            </summary>
            <example>
                Usage : AddYear(date, offset)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.AddYear.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AddYear.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AddYear.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AddYear.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.AttrValueByRowKey">
             <summary>
             The AttrValue function returns the value for the named attribute with the provided rowkey
             from the named attribute set.
             </summary>
             <example>
                 Usage : AttrValue('AttributeSetName',RowKey, 'attrName')
             </example>
             <remarks>
             Attribute Set Name must be the name of a valid attribute set.
             RowKey is the primay key of the attribute set.
             attrName must be the name of a valid attribute in the named attribute set.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AttrValueByRowKey.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AttrValueByRowKey.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.AttrValueByRowKey.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AttrValueByRowKey.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AttrValueByRowKey.parseMetaData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetEndOfDay">
            <summary>
            Returns the date corresponding to the end of the specified date.
            </summary>
            <example>
                Usage : GetEndOfDay('date')     
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetEndOfDay.Syntax">
            <summary>
            Syntax definition for the function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEndOfDay.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEndOfDay.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEndOfDay.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. This function expectes its parameter to be a date.
            The function will make every effort to convert the value to a date. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an illegal expression exception if
            its operand is not a date or cannot be converted to a valid date. </exception>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetImageUrl.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetImageUrl.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetImageUrl.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetImageUrl.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsVirtualCardOfType">
            <summary>
            This function determines if the provided virtual card is of a certain type.
            This method is only invoked on a loyalty card.
            </summary>
            <example>
                Usage : IsVirtualCardOfType()
            </example>   
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsVirtualCardOfType.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsVirtualCardOfType.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsVirtualCardOfType.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.FormatDate">
            <summary>
            Formats a date string according to the specified format.
            </summary>
            <example>
                Usage : FormatDate(date, format)
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.FormatDate.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.FormatDate.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.FormatDate.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetEnumName">
            <summary>
            Gets the string name of the provided enum value.
            </summary>
            <example>
                Usage : GetEnumName(enumType, value)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetEnumName.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEnumName.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEnumName.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEnumName.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetEnumValue">
            <summary>
            Gets the value of the provided enum name.
            </summary>
            <example>
                Usage : GetEnumValue(enumType, name)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetEnumValue.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEnumValue.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEnumValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetEnumValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetPointsExpired">
            <summary>
            The GetPointsExpired function returns points that are expired at a certain date.
            </summary>
            <example>
                Usage : GetPointsExpired(['PointType'],Start Date,Expiry Date)
            </example>
            <remarks>
                Expiry date must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsExpired.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsExpired.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetPointsExpired.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsExpired.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.MemberTierAttrValue">
             <summary>
             The MemberTierAttrValue function returns the property value of the tier at given by RowIndex
             </summary>
             <example>
                 Usage : MemberTierAttrValue('PropertyName','RowIndex')
             </example>
             <remarks>
             PropertyName must be a property of the member tier.
             RowIndex must be the index of the tier.  An index of 0 will return property valu of the current tier.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MemberTierAttrValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MemberTierAttrValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.MemberTierAttrValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MemberTierAttrValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.DateDiffInDays">
            <summary>
            The DateDiffInDays function returns the difference in days between 2 dates
            </summary>
            <example>
                Usage : DateDiffInDays()
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.DateDiffInDays.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.DateDiffInDays.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.DateDiffInDays.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetActiveLoyaltyId">
            <summary>
            Gets the member's current primary Loyalty ID Number from VirtualCard.
            </summary>
            <example>
                Usage : GetActiveLoyaltyId()
            </example>   
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetActiveLoyaltyId.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetActiveLoyaltyId.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetActiveLoyaltyId.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetDay">
            <summary>
            Get the day component of the specified date.
            </summary>
            <example>
                Usage : GetDay(date)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetDay.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetDay.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetDay.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetDay.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetFirstDateOfMonth">
            <summary>
            Returns the date corresponding to the first day of the month for the specified date.
            </summary>
            <example>
                Usage : GetFirstDateOfMonth('date')
                Usage : GetFirstDateOfMonth(Member.AccountOpenDate)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetFirstDateOfMonth.Syntax">
            <summary>
            Syntax definition for the function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfMonth.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfMonth.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfMonth.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. This function expectes its parameter to be a date.
            The function will make every effort to convert the value to a date. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an illegal expression exception if
            its operand is not a date or cannot be converted to a valid date. </exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetFirstDateOfQuarter">
            <summary>
            Returns the date corresponding to the first day of the quarter for the specified date.
            </summary>
            <example>
                Usage : GetFirstDateOfQuarter('date')
                Usage : GetFirstDateOfQuarter(Member.AccountOpenDate)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetFirstDateOfQuarter.Syntax">
            <summary>
            Syntax definition for the function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfQuarter.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfQuarter.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfQuarter.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. This function expectes its parameter to be a date.
            The function will make every effort to convert the value to a date. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an illegal expression exception if
            its operand is not a date or cannot be converted to a valid date. </exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetFirstDateOfWeek">
            <summary>
            GetFirstDateOfWeek is a function that will compute the date for the starting day of the week in which
            the supplied date falls based on a Monday - Sunday week span.
            </summary>
            <example>
                Usage : GetFirstDateOfWeek('date')
                Usage : GetFirstDateOfWeek(Member.AccountOpenDate)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetFirstDateOfWeek.Syntax">
            <summary>
            Syntax definition for the function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfWeek.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfWeek.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfWeek.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. This function expectes its parameter to be a date.
            The function will make every effort to convert the value to a date. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an illegal expression exception if
            its operand is not a date or cannot be converted to a valid date. </exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetFirstDateOfYear">
            <summary>
            Returns the date corresponding to the first day of the year for the specified date.
            </summary>
            <example>
                Usage : GetFirstDateOfYear('date')
                Usage : GetFirstDateOfYear(Member.AccountOpenDate)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetFirstDateOfYear.Syntax">
            <summary>
            Syntax definition for the function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfYear.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfYear.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetFirstDateOfYear.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. This function expectes its parameter to be a date.
            The function will make every effort to convert the value to a date. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an illegal expression exception if
            its operand is not a date or cannot be converted to a valid date. </exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetLastDateOfMonth">
            <summary>
            Returns the date corresponding to the last day of the month for the specified date.
            </summary>
            <example>
                Usage : GetLastDateOfMonth('date')
                Usage : GetLastDateOfMonth(Member.AccountOpenDate)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetLastDateOfMonth.Syntax">
            <summary>
            Syntax definition for the function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfMonth.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfMonth.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfMonth.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. This function expectes its parameter to be a date.
            The function will make every effort to convert the value to a date. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an illegal expression exception if
            its operand is not a date or cannot be converted to a valid date. </exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetLastDateOfQuarter">
            <summary>
            Returns the date corresponding to the last day of the quarter for the specified date.
            </summary>
            <example>
                Usage : GetLastDateOfQuarter('date')
                Usage : GetLastDateOfQuarter(Member.AccountOpenDate)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetLastDateOfQuarter.Syntax">
            <summary>
            Syntax definition for the function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfQuarter.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfQuarter.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfQuarter.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. This function expectes its parameter to be a date.
            The function will make every effort to convert the value to a date. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an illegal expression exception if
            its operand is not a date or cannot be converted to a valid date. </exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetLastDateOfWeek">
            <summary>
            GetLastDateOfWeek is a function that will compute the date for the ending day of the week in which
            the supplied date falls based on a Monday - Sunday week span.
            </summary>
            <example>
                Usage : GetLastDateOfWeek('date')
                Usage : GetLastDateOfWeek(Member.AccountOpenDate)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetLastDateOfWeek.Syntax">
            <summary>
            This method will return the functions syntax defintion.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfWeek.#ctor">
            <summary>
            Public constructor used primarily by UI components.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfWeek.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfWeek.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function.
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an ellegal expression exception if
            its operand is not a date.</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetLastDateOfYear">
            <summary>
            Returns the date corresponding to the last day of the year for the specified date.
            </summary>
            <example>
                Usage : GetLastDateOfYear('date')
                Usage : GetLastDateOfYear(Member.AccountOpenDate)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetLastDateOfYear.Syntax">
            <summary>
            Syntax definition for the function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfYear.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfYear.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetLastDateOfYear.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. This function expectes its parameter to be a date.
            The function will make every effort to convert the value to a date. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an illegal expression exception if
            its operand is not a date or cannot be converted to a valid date. </exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetMonth">
            <summary>
            Get the month component of the specified date.
            </summary>
            <example>
                Usage : GetMonth(date)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetMonth.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetMonth.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetMonth.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetMonth.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetPointsExcludingSet">
            <summary>
            The GetPointsExcludingSet function gets the members' points value for the given date range and excluding the point types in the provided set.
            </summary>
            <example>
                Usage : GetPointsExcludingSet('Excluding PointTypes',Start Date, End Date)
            </example>
            <remarks>
                PointType names delimeted by ;.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsExcludingSet.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsExcludingSet.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetPointsExcludingSet.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsExcludingSet.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetPointsInSet">
            <summary>
            The GetPointsInSet function the members points value for the given date range and the set of point types.
            </summary>
            <example>
                Usage : GetPointsInSet('PointTypes',Start Date, End Date)
            </example>
            <remarks>
                PointType names delimeted by ;.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsInSet.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsInSet.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetPointsInSet.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPointsInSet.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetYear">
            <summary>
            Get the year component of the specified date.
            </summary>
            <example>
                Usage : GetYear(date)
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetYear.Syntax">
            <summary>
            Syntax definition for this function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetYear.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetYear.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetYear.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">thrown for illegal arguments</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsInPromotion">
            <summary>
            The IsInPromotion function will return true if the member is in the named promotion.
            </summary>
            <example>
                Usage : IsInPromotion('promotion code', CheckEnrollment)
            </example>
            <remarks>
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsInPromotion.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsInPromotion.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsInPromotion.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsInPromotion.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetContentAttributeDataValueSet">
             <summary>
             The GetContentAttributeDataValueSet function returns an XSLT block of if statements
             that have condition on all the possible values of a particular field.  The function first retrieves all
             the values from the template for the named field.  Then it iterates over the dataset and for each value
             of the value set, it generates an if block.
             </summary>
             <example>
                 Usage : GetContentAttributeDataValueSet('AttributeName','TestAttributeName','ListFieldName',Repeat)
             </example>
             <remarks>
             AttributeName must be the name of a valid attribute in the specified structured element.
             TestAttributeName is the name of an attribute in the data set whose value is to be tested.
             ListFieldName must be the name of a template field.
             Repeat - If set to true then all will be repeated.  Otherwise only the first value.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetContentAttributeDataValueSet.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetContentAttributeDataValueSet.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetContentAttributeDataValueSet.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetContentAttributeDataValueSet.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetContentAttributeDataValueSet.parseMetaData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HtmlImage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HtmlImage.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.HtmlImage.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.HtmlImage.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetListFileValue">
             <summary>
             GetListfileValue is used to instruct the email engine that it should use a value from a list file rather than try to evaluate 
             a member attribute to retrieve structured content data.
             </summary>
             <example>
                 Usage : GetListFileValue('FieldName')
             </example>
             <remarks>
             In order to evaluate structured content data, a data filter may exist that filters the data based on member attributes. In the email
             system, not all clients have a loyalty member database, and instead the system may be completely list based. In this scenario, instructing
             the content system to filter based on a member attribute (i.e., AttrValue('MemberDetails', 'HomeCenterID', 0)) would not work. Instead, 
             GetListFileValue may be used to instruct the email system that a member attribute does not exist, but the value will be present in the 
             list file.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetListFileValue.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetListFileValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetListFileValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetListFileValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetListFileValue.parseMetaData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetRowIndexByAttributeValue">
             <summary>
             The GetRowIndexByAttributeValue function returns the index of the first row that has the 
             requested attribuute value. 
             </summary>
             <example>
                 Usage : GetRowIndexByAttributeValue('AttributeName',AttributeValue)
             </example>
             <remarks>
             AttributeName must be the name of a valid attribute in the specified structured element.
             AttributeValue - must be bScript expression that evaluates to a string.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetRowIndexByAttributeValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetRowIndexByAttributeValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetRowIndexByAttributeValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetRowIndexByAttributeValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetStructuredAttributeData">
             <summary>
             The GetStructuredAttributeData function returns an attribute from the the provided row. 
             </summary>
             <example>
                 Usage : GetStructuredAttributeData('StructuredElementName','AttributeName',RowIndex)
             </example>
             <remarks>
             StructuredElementName is the name of the structured element to which the rows belong.
             AttributeName must be the name of a valid attribute in the specified structured element.
             RowIndex - must be either a number or a bScript expression that evaluates to a number.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetStructuredAttributeData.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetStructuredAttributeData.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetStructuredAttributeData.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetStructuredAttributeData.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetStructuredAttributeData.parseMetaData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetStructuredElementData">
             <summary>
             The GetStructuredElementData function returns one or more rows of content element data that matches the 
             provided criteria.  This function supports comparison on one attribute field only.
             </summary>
             <example>
                 Usage: GetStructuredElementData('StructuredElementName','AttributeName',AttributeValue,UseDateConstraint,RowIndex)
             </example>
             <remarks>
             StructuredElementName must be the name of a valid structured content element.
             AttributeName must be the name of a valid attribute in the specified structured element.  It can also be a global attribute.
             AttributeValue must be a valid bScript expression that evaluates to a string that can be compared to the value of the specified attribute.
             UseDateConstraint is a boolean that when true only returns non-expired content.
             RowIndex must be either a number or a bScript expression that evaluates to a number.  The number indicates the zero-based index 
             of which row of data to return, or when -1 all rows will be returned.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetStructuredElementData.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetStructuredElementData.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetStructuredElementData.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetStructuredElementData.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A context object used for evaluating argument expressions</param>
            <returns>A StructuredDataRows object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetStructuredElementData.parseMetaData">
            <summary>
            Parse the expression for meta data.  Used in LoyaltyNavigator to determine which attributes need
            to be provided in order to render a page during preview.
            </summary>
            <returns>semicolon separated list of attributes or empty string if no metadata</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.ABS">
            <summary>
            Performs an absolute value operation on its operand.
            </summary>
            <example>
                Usage : ABS(number)
            </example>
            <remarks>The parameter value supplied to the ABS function must be numeric</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ABS.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ABS.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.ABS.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ABS.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function.
            </summary>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="T:Brierley.FrameWork.Common.Exceptions.CRMException">evaulate will throw an ellegal expression exception if
            its operand is non numeric.</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.AdvanceDataRowIndex">
            <summary>
            This function advances the current index int the context object.  This function is designed to be used in 
            conjunction with the InitializeDataIterator function and GetCurrentDataRowIndex.
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AdvanceDataRowIndex.#ctor">
            <summary>
            Internal Constructor
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.AdvanceDataRowIndex.Syntax">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AdvanceDataRowIndex.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.AttrValue">
             <summary>
             The AttrValue function returns the value for the named attribute at the index given by RowIndex
             from the named attribute set.
             </summary>
             <example>
                 Usage : AttrValue('AttributeSetName','attrName','Parent', RowIndex)
             </example>
             <remarks>
             Attribute Set Name must be the name of a valid attribute set.
             attrName must be the name of a valid attribute in the named attribute set.
             Parent must be an expression that resolves to a parent object.
             RowIndex must be either a number or a bScript expression that evaluates to a number.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AttrValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AttrValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.AttrValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AttrValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.AttrValue.parseMetaData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.Avg">
            <summary>
            The Average function compute the average value for the named attribute from the named attribute set where
            the row being examined matches the expression given in bScriptExpression. 
            </summary>
            <example>
                Useage : AVG('attrSetName','attrName',bScriptExpression,UseChildren)
            </example>
            <remarks>
            attrSetName must be the name of a valid attribute set
            attrName must be the name of a valid attribute on that set.
            bScriptExpression must be a valid bScript Expression
            UseChildren is a boolean value indicating whether or not the function should only consider children of the
            row invoking the rule.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Avg.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Avg.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.Avg.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Avg.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.Date">
            <summary>
            The DATE function returns the current date as a string
            </summary>
            <example>
                Usage : Date()
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Date.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.Date.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Date.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Day.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.Day.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.FirstIndexOf">
            <summary>
            The First Index of function will return the index number of the first row in an attribute set that
            matches the expression given by bScriptExpression
            </summary>
            <example>
                Usage : FirstIndexOf('AttributeSetName',bScriptExpression,UseChildren)
            </example>
            <remarks>
            AttributeSetName must be the name of a valid attribute set.
            bScriptExpression must be a valid bScript Expression
            UseChildren is a boolean value indicating whether or not the function should consider only valid child rows
            of the row in the evaluation context.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.FirstIndexOf.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.FirstIndexOf.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.FirstIndexOf.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.FirstIndexOf.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.FunctionFactory">
            <summary>
            The Function Factory class manages the library's internal function implementation strategy. The class is based on the factory design pattern and uses
            information passed by the parsing engine to determine which function to create and how to supply that function with it's parameter list.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.FunctionFactory.GetFunction(System.String,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Static method to create a function. Used internally by the expression parsing engine.
            </summary>
            <param name="function">The Name of the function to create</param>
            <param name="fExpr">An expression object. This object may be of type <see cref="T:Brierley.FrameWork.bScript.Expression"/> or of type <see cref="T:Brierley.FrameWork.bScript.ParameterList"/> depending upon
            the Function being asked for.</param>
            <returns></returns>        
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetConfigValue">
            <summary>
            The GetConfigValue function return the string value from the client configuration store that has the key
            value matching the value supplied by ConfigurationKeyName.
            </summary>
            <example>
                Usage : GetConfigValue('ConfigurationKeyName')
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetConfigValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetConfigValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetConfigValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetConfigValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetCurrentDataRowIndex">
            <summary>
            This function gets the current index from the context object.  This function is designed to be used in 
            conjunction with the InitializeDataIterator function and AdvanceDataRowIndex.
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrentDataRowIndex.#ctor">
            <summary>
            Internal Constructor
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetCurrentDataRowIndex.Syntax">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetCurrentDataRowIndex.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.GetPoints">
            <summary>
            The GetPoints function the members points value for the given date range and point type.
            </summary>
            <example>
                Usage : GetPoints(['PointType'],Start Date, End Date)
            </example>
            <remarks>
                PointType is optional.
                Start and End dates must be valid date formated strings.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPoints.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPoints.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.GetPoints.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.GetPoints.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.If">
            <summary>
            The If function evaluates expression expr1 and if true will then return the value of expr2. If false the
            if function will return the value of expr3
            </summary>
            <example>
                Usage : If(expr1,expr2,expr3)
            </example>
            <remarks>
            All three parameters must be valid bScript expression.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.If.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.If.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.If.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.If.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.InitializeDataIterator">
            <summary>
            This function intializes an iterator for content data element so that loops can be performed over 
            multiple content rows.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.InitializeDataIterator.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.InitializeDataIterator.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.InitializeDataIterator.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.InitializeDataIterator.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function.  If the EndIndex is omitted, then the 
            ContextObject argument should contain a StructuredDataRows object in it's Environment 
            attribute so that EndIndex can be determined.
            </summary>
            <param name="contextObject">context object used for evaluating argument expressions</param>
            <returns>integer indicating number of rows remaining to process</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsInSet">
            <summary>
            The IsInSet function evaluates a list of items and returns true if value is found in the list.
            </summary>
            <example>
                Usage : IsInSet('Value','item1;item2;item3...')
            </example>
            <remarks>
            Both parameter values are string values. The second parameter is a list of items seperated by the
            ";" character.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsInSet.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsInSet.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsInSet.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsInSet.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context provided at runtime</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsInTier">
            <summary>
            The IsInTier function will return true if the member belongs to the named group.
            </summary>
            <example>
                Usage : IsInTier('TierName',['Date'])
            </example>
            <remarks>
            Tier Name must be a valid group name. This function does not support custom tier implementations.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsInTier.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsInTier.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsInTier.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsInTier.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsNullOrEmpty">
            <summary>
            The IsNullOrEmpty takes an expression that should evaluate to a string and returns boolean.
            </summary>
            <example>
                Usage : IsNullOrEmpty(TestExpression)
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsNullOrEmpty.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsNullOrEmpty.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsNullOrEmpty.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsNullOrEmpty.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An instance of ContextObject</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.LastIndexOf">
            <summary>
            The Last Index Of function returns the index number of the last row in an attribute set that matches
            the expression specified by bScriptExpression.
            </summary>
            <example>
                Usage : LastIndexOf('AttributeSetName',bScriptExpression,UseChildren)
            </example>
            <remarks>
            AttributeSetName must be the name of an attribute set.
            UseChildren is a boolean value indicating whether only valid child rows of the row invoking the rule will be included.
            bScriptExpression used to match or filter rows.
            The function will return 0 if no rows are found matching the expression.
            To find the highest row index in a set use RowCount().
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.LastIndexOf.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.LastIndexOf.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.LastIndexOf.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.LastIndexOf.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.MAX">
            <summary>
            The MAX function evaluates two numbers and returns the larger.
            </summary>
            <example>
                Usage : Max(number, number)
            </example>
            <exception cref="T:Brierley.FrameWork.Common.Exceptions.CRMException">Illegal Expression exception if both operands are not numeric</exception>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MAX.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MAX.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.MAX.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MAX.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.MemberRewardAttrValue">
             <summary>
             The MemberRewardAttrValue function returns the property value of the reward at given by RowIndex
             </summary>
             <example>
                 Usage : MemberRewardAttrValue('PropertyName','RowIndex')
             </example>
             <remarks>
             Attribute Set Name must be the name of a valid global attribute set.
             attrName must be the name of a valid attribute in the named attribute set.
             WhereClause must be a valid where clause of an SQL statement that would result in one row.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MemberRewardAttrValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MemberRewardAttrValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.MemberRewardAttrValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MemberRewardAttrValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.MIN">
            <summary>
            The MIN function evaluates two numbers and returns the smaller of the two.
            </summary>
            <example>
                Usage : Min(number, number)
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MIN.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MIN.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.MIN.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.MIN.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Month.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.Month.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.NextWholeNumber">
            <summary>
            The NextWholeNumber function returns the next whole number up from the supplied number.
            </summary>
            <example>
                Usage : NextWholeNumber(number)
            </example>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.NextWholeNumber.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.NextWholeNumber.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.NextWholeNumber.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.NextWholeNumber.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function.
            </summary>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="T:Brierley.FrameWork.Common.Exceptions.CRMException">evaulate will throw an ellegal expression exception if
            its operand is non numeric.</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.RefAttrValue">
             <summary>
             The RefAttrValue function returns the value for the named attribute at the index given by RowIndex
             from the named global attribute set.
             </summary>
             <example>
                 Usage : RefAttrValue('Global AttributeSetName','attrName','WhereClause')
             </example>
             <remarks>
             Attribute Set Name must be the name of a valid global attribute set.
             attrName must be the name of a valid attribute in the named attribute set.
             WhereClause must be a valid where clause of an SQL statement that would result in one row.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RefAttrValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RefAttrValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.RefAttrValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RefAttrValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RefAttrValue.parseMetaData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.ResolveAttributeSet">
             <summary>
             The ResolveAttributeSet function returns the the attribute set using the provided criteria.
             </summary>
             <example>
                 Usage : ResolveAttributeSet('AttributeSetName','criteria',RowIndex)
             </example>
             <remarks>
             Attribute Set Name must be the name of a valid attribute set.
             criteria is an expression that can be applied to the objects in that attribute set.
             RowIndex must be either a number or a bScript expression that evaluates to a number.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ResolveAttributeSet.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ResolveAttributeSet.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.ResolveAttributeSet.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.ResolveAttributeSet.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.RewardCertificateCount">
            <summary>
            The RewardCertificateCount function returns the count of available certificates for a rule
            definition.
            </summary>
            <example>
                Usage : RewardCertificateCount('Rule Name')
            </example>    
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RewardCertificateCount.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RewardCertificateCount.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.RewardCertificateCount.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RewardCertificateCount.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.RewardDefAttrValue">
            <summary>
            The RewardDefAttrValue function returns the value for the named property of the reward
            definition.
            </summary>
            <example>
                Usage : RewardDefAttrValue('Reward Name','Property Name')
            </example>    
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RewardDefAttrValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RewardDefAttrValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.RewardDefAttrValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RewardDefAttrValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RewardDefAttrValue.parseMetaData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.Round">
            <summary>
            The Round function returns the rounded value of a given number.
            </summary>
            <example>
                Usage : Round(number)
            </example>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Functions.Round.roundUp">
            <summary>
            Normaly, 6.5 will be rounded to 6.  If this variable is tru then it will be rounded to 7.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Round.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Round.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.Round.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Round.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function.
            </summary>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="T:Brierley.FrameWork.Common.Exceptions.CRMException">evaulate will throw an ellegal expression exception if
            its operand is non numeric.</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.RowCount">
            <summary>
            The RowCount functions returns the count of rows in the named attribute set that match the given bScript Expression.
            </summary>
            <example>
                Usage : RowCount('AttributeSetName',bScriptExpression,UseChildren)
            </example>
            <remarks>
            AttributeSetName must be the name of a valid attribute set
            bScript expression must evaluate to true or false. If true the row is counted.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RowCount.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.RowCount.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RowCount.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.RowCount.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.RowCountWithCriteria.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.SetAttrValue">
             <summary>
             Sets a new value into an attribute.
             </summary>
             <example>
                 Usage : SetAttrValue('attrName',NewValue)
             </example>
             <remarks>
             The attrName parameter must be the name of an attribute on the row of data invoking the rule.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SetAttrValue.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SetAttrValue.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.SetAttrValue.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.SetAttrValue.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.StrConcat">
            <summary>
            The StrConcat function takes two strings as concatenates them together end to end.
            </summary>
            <example>
                Usage : STRConcat('string1','string2')
            </example>
            <remarks>The parameters supplied to STRConcat must both be string values.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.StrConcat.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.StrConcat.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal constructor
            </summary>
            <param name="rhs">an object of type <see cref="!:Brierley.Framework.bScript.Expression"/> contining the first first function parameter.</param>
            <param name="lhs">an object of type <see cref="!:Brierley.Framework.bScript.Expression"/> contining the first second function parameter.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.StrConcat.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.StrConcat.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.STRContains">
            <summary>
            The StrContains function returns a boolean value indicating whether the first string parameter contains
            the second string parameter.
            </summary>
            <example>
                Usage : StrContains('mytest','test') : Return true
            </example>
            <remarks>Both parameters to StrContains must be string values.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.STRContains.#ctor">
            <summary>
            public constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.STRContains.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            internal constructor
            </summary>
            <param name="rhs">an object of type <see cref="!:Brierley.Framework.bScript.Expression"/> contining the first first function parameter.</param>
            <param name="lhs">an object of type <see cref="!:Brierley.Framework.bScript.Expression"/> contining the first second function parameter.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.STRContains.Syntax">
            <summary>
            This method returns a string of the functions syntax definition
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.STRContains.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <param name="contextObject">The context used by the function at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.STRLength">
            <summary>
            The StrLength function returns lenght of the supplied string.
            </summary>
            <example>
                Usage : StrLength('test') : Return 4
            </example>
            <remarks>Function names are not case sensative.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.STRLength.#ctor">
            <summary>
            Public constructor used by UI components
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.STRLength.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.STRLength.Syntax">
            <summary>
            This method returns a string of the functions syntax definition.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.STRLength.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.STRSubstring">
            <summary>
            The STRSubstring function takes two expressions that provide a start and index.
            </summary>
            <example>
                Usage : STRSubstring('start','end')
            </example>
            <remarks>The parameters supplied to STRConcat must both be string values.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.STRSubstring.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.STRSubstring.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal constructor
            </summary>
            <param name="expr">an object of type <see cref="!:Brierley.Framework.bScript.Expression"/> contining the first first function parameter.</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.STRSubstring.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.STRSubstring.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.Sum">
            <summary>
            First, care should be taken not to confuse this class (The Sum Function) with the Sum(+) Operator. The
            two are not the same thing. The sum function provides the ability to iterate over a set of rows in an
            attribute set and return the sum of a field or attribute in that set.
            </summary>
            <example>
                Usage : SUM('attrSetName','attrName',bScript Expression,UseChildren)
            </example>
            <remarks>The attrSetName paramater must be the name of an existing attribute set.
            The attrName parameter must be the name of an attribute that exists in the named attribute set.
            bScript expression is an expression that if supplied will be evaluated against every row being examined.
            If the bScript expression returns true that rows attribute value is included in the sum. If this expression
            returns false, that rows attribute value is not included in the sum.
            The UseChildren parameter value is a boolean value that determines wheather or not the function should only consider
            rows of the named attribute set that are formal children of the row that has invoked the rule.
            Function names are not case sensative.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Sum.#ctor">
            <summary>
            public constructor used primarily by UI components. 
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Sum.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal constructor.
            </summary>
            <param name="rhs">An object of Type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.Sum.Syntax">
            <summary>
            This method will return a string containing the functions syntax definition
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Sum.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.Time">
            <summary>
            The Time function returns the current system time.
            </summary>
            <example>
                Usage : Time()
            </example>
            <remarks>Function names are not case sensative.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Time.#ctor">
            <summary>
            Public constructor primarily used by UI components.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.Time.Syntax">
            <summary>
            This method will retun the syntax definition for the function.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Time.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">An object containing context data used for evaluation</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.IsDateWithinRange">
            <summary>
            Returns a boolean indicating if the specified date is within the specified date range.
            </summary>
            <example>
                Usage : IsDateWithinRange('date','startdate','enddate', 'true')
                Usage : IsDateWithinRange(Member.AccountOpenDate,'startdate','enddate','true')
            </example>
            <remarks>Function names are not case sensitive.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsDateWithinRange.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Public constructor used by UI components
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsDateWithinRange.#ctor">
            <summary>
            Public constructor used primarily by UI components.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.IsDateWithinRange.Syntax">
            <summary>
            This method will return the function syntax definition
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.IsDateWithinRange.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.WeekEnd">
            <summary>
            WeekEnd is a function that will compute the date for the ending day of the week in which
            the supplied date falls based on a Monday - Sunday week span.
            </summary>
            <example>
                Usage : WeekEnd('date')
                Usage : WeekEnd(Member.AccountOpenDate)
            </example>
            <remarks>Function names are not case sensative.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.WeekEnd.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.WeekEnd.#ctor">
            <summary>
            Public constructor used primarily by UI components.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.WeekEnd.Syntax">
            <summary>
            This method will return the functions syntax defintion.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.WeekEnd.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an ellegal expression exception if
            its operand is not a date.</exception>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Functions.WeekStart">
            <summary>
            WeekStart is a function that will compute the date for the starting day of the week in which
            the supplied date falls based on a Monday - Sunday week span.
            </summary>
            <example>
                Usage : WeekStart('date')
                Usage : WeekStart(Member.AccountOpenDate)
            </example>
            <remarks>Function names are not case sensative.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.WeekStart.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            The internal constructor for the function.
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/> containing the functions parameters.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.WeekStart.#ctor">
            <summary>
            External constructor, primarily used for UI implementations of drag and drop and getting syntax.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.WeekStart.Syntax">
            <summary>
            This method will return a string containing the functions syntax definition.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.WeekStart.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this function. This function expectes its parameter to be a date.
            The function will make every effort to convert the value to a date. 
            </summary>
            <param name="contextObject">A container object used to pass context at runtime.</param>
            <returns>An object representing the result of the evaluation</returns>
            <exception cref="!:Brierley.Framework.Common.Exceptions.CRMException">evaulate will throw an illegal expression exception if
            its operand is not a date or cannot be converted to a valid date. </exception>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Year.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Year.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Functions.Year.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Functions.Year.Syntax">
            <summary>
            Returns the syntax definition for this function
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.bScript.CurrentMember">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.CurrentMember.#ctor">
            <summary>
            Internal constructor
            </summary>        
        </member>
        <member name="M:Brierley.FrameWork.bScript.CurrentMember.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.ParentAttribute">
            <summary>
            The attribute class encapsulates the row.Parent.attribute syntax in the expression engine. row.Parent.attribute is neither
            an operator or a function although it does inherit from expression. It represent a special case in the syntax
            parsing logic to handle the ability to address attributes of  the parent in a row of data. In the future this could be re-worked
            into a function of the form Parent() where the function would return the value of the named attribute.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.ParentAttribute.#ctor(System.String)">
            <summary>
            Internal constructor
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ParentAttribute.Name">
            <summary>
            The Name of the attribute being addressed.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.ParentAttribute.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.ParameterHelpers">
            <summary>
            defines popup helpers for building scripts...
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.bScript.ExpressionContextAttribute">
            <summary>
            Attribute class used to provide information on bScript expression classes and enums.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionContextAttribute.ExpressionType">
            <summary>
            Type of bScript entity, e.g., constant, function, operator, etc.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionContextAttribute.DisplayName">
            <summary>
            Friendly name of this bScript entity.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionContextAttribute.Description">
            <summary>
            Friendly description of this bScript entity.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionContextAttribute.ExcludeContext">
            <summary>
            Contexts in which this bScript function is not applicable.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionContextAttribute.ExpressionApplication">
            <summary>
            Applications to which this bScript entity applies.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionContextAttribute.ExpressionReturns">
            <summary>
            Return values for this bScript entity type.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionContextAttribute.WizardDescription">
            <summary>
            The description of the expression for the expression wizard
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionContextAttribute.AdvancedWizard">
            <summary>
            If true, the function is only shown when using the "Advanced" wizard
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionContextAttribute.EvalRequiresMember">
            <summary>
            If true, a member is required in the ContentObject.Owner when the function is evaluated.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionParameterAttribute.AllowMultiple">
            <summary>
            Allow a semicolon separated list for the parameter value?
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.bScript.ExpressionAssemblyAttribute">
            <summary>
            Attribute class used to define the assmebly name the bScript expression resides in, when the expression
            resides outside of Brierley.FrameWork.dll.
            </summary>
            <remarks>
            The bScript expression builder can reflect over an expression class and obtain its <see cref="!:ExpressionContextAttribute">ExpressionContextAttribute</see>, 
            if it exists. This attribute should be used on <see cref="T:Brierley.FrameWork.bScript.FunctionNames">Brierley.FrameWork.bScript.FunctionNames</see> to describe
            the name of the assembly the expression resides in, in order for the expression builder to locate and reflect over its attributes.
            </remarks>
            <example>
            [ExpressionAssemblyAttribute("Brierley.MyLib.dll", "Brierley.MyLib.bScript.FooBar")]
            FOOBAR,
            </example>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionAssemblyAttribute.AssemblyFileName">
            <summary>
            The assembly file name where the expression resides, if outside of the framework assembly.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionAssemblyAttribute.TypeName">
            <summary>
            The type name of the expression.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.bScript.DateConstant">
            <summary>
            The date constant class is similar in nature to the constant class except that it is designed specifically
            to handle date values. Strings that appear in an expression of the form 'mm/dd/yy' will be converted into
            date constant objects so that date operations such as subtract and add on the date object will function
            properly.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.DateConstant.#ctor(System.DateTime)">
            <summary>
            Internal constructor
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.DateConstant.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the evaluation at runtime
            </summary>
            <param name="contextObject">The runtime context</param>
            <returns>A date object</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.DateConstant.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.FunctionNames">
            <summary>
            The function names supported by bScript
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ISNULL">
            <summary>
            IsNull
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.MIN">
            <summary>
            The Min Function Min(x,y)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.MAX">
            <summary>
            The Max Function Max(x,y)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ABS">
            <summary>
            Absolute Value Abs(x)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.TODAYNAME">
            <summary>
            Today Name function TodayName()
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.DATE">
            <summary>
            The Date Function Date()
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.FORMATDATE">
            <summary>
            The date formating function()
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.MAKEDATE">
            <summary>
            The date creation function()
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.TIME">
            <summary>
            The Time function Time()
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.WEEKEND">
            <summary>
            The WeekEnd Function WeekEnd('date')
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.WEEKSTART">
            <summary>
            The WeekStart function WeekStart('date')
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ISDATEWITHINRANGE">
            <summary>
            The IsDateWithinRange function 
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.STRCOMPARE">
            <summary>
            The StrCompare function
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.STRCONTAINS">
            <summary>
            The String Contains Function StrContains('string','string')
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.STRLENGTH">
            <summary>
            The string Length Function StrLength('string')
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.TOSTRING">
            <summary>
            The string Length Function ToString('string')
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.STRCONCAT">
            <summary>
            concatenates two strings.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.STRSUBSTRING">
            <summary>
            gets a substring given index.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ISNULLOREMPTY">
            <summary>
            Returns true if the string that this expression evaluates to is null or empty.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETCONFIGVALUE">
            <summary>
            Returns the named configuration value from client configuration
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETFRAMEWORKCONFIGVALUE">
            <summary>
            Returns the named configuration value from framework configuration
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ROUND">
            <summary>
            Rounds a number using Math.Round
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.NEXTWHOLENUMBER">
            <summary>
            Returns the next whole number given a given a fraction of the x.y (5.2 = 6)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETPOINTS">
            <summary>
            Returns the point value for a given date range and point type if supplied
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETPOINTSSUMMARY">
            <summary>
            Returns the point value for a given date range and point type if supplied
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETPOINTSBYOWNERTYPE">
            <summary>
            Returns the point value for a given owner type
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETPOINTSBYEVENT">
            <summary>
            Returns the point value for a given date range and point event
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETPOINTSINSET">
            <summary>
            Returns the point value for a given date range and a set of point types
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETPOINTSEXCLUDINGSET">
            <summary>
            Returns the point value for a given date range and excluding set of point types
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETPOINTSEXPIRED">
            <summary>
            Returns the point value for a given date range and point type if supplied
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETPOINTTRANSACTIONCOUNT">
            <summary>
            Returns the number of point transactions
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETTOTALPOINTSAWARDED">
            <summary>
            Returns the total awrded points
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETEARNEDPOINTS">
            <summary>
            Returns the earned points
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETEARNEDPOINTSINSET">
            <summary>
            Returns the earned points
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETPOINTSTONEXTTIER">
            <summary>
            Returns the point required to move to the next tier
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETPOINTSTONEXTREWARD">
            <summary>
            Returns the point required to move to the next tier
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.POINTSTOREWARDCHOICE">
            <summary>
            Returns the number of points required to earn the next chosen reward
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ISINTIER">
            <summary>
            Returns true if the member is in the named tier. False otherwise.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ISITEMISSUED">
            <summary>
            returns true if a specified item has been issued within the current rule execution context
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETCURRENTTIERPROPERTY">
            <summary>
            Returns the count of Rows that match a given expression from an attribute set.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETTIERPROPERTY">
            <summary>
            Returns the property value of a specified tier
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.CREATECRITERIA">
            <summary>
            Creates a criteria string.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ROWCOUNT">
            <summary>
            Returns the current tier of the member.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ROWCOUNTWITHCRITERIA">
            <summary>
            Returns the number of rows that match a criteria.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ATTRVALUE">
            <summary>
            Returns the value of the named attribute from the named attribute set.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ATTRVALUEBYROWKEY">
            <summary>
            Returns the value of the named attribute from the named attribute set.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.RESOLVEATTRIBUTESET">
            <summary>
            Returns the sum of a named attribute from the named attribute set
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.SUM">
            <summary>
            Returns the sum of a named attribute from the named attribute set
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.AVG">
            <summary>
            Returns the average of a named attribute from the named attribute set.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.FIRSTINDEXOF">
            <summary>
            Returns the row index number for the first row in a set that matches the expression.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.LASTINDEXOF">
            <summary>
            Returns the row index number for the last row in a set that matches the expression.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.IF">
            <summary>
            Evaluates the first expression and if true returns the value of the second expression
            otherwise it returns the value of the third expression.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ISINSET">
            <summary>
            Returns true if the value of the first expression is contained within the set given by
            expression two.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ISPROMOTIONVALID">
            <summary>
            Returns true if the promotion is valid
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ISINPROMOTION">
            <summary>
            Returns true if the member is in the specified promotion list
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.SETATTRVALUE">
            <summary>
            Sets the value of an attribute within an attribute set.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.YEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.MONTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.DAY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.REFATTRVALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.REFATTRVALUEBYROWKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.EXPRWIZSET">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.PRODUCTBYIDATTRvALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.PRODUCTBYPARTNUMBERATTRvALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.REWARDDEFATTRVALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.REWARDCERTIFICATECOUNT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.MEMBERREWARDATTRVALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.MEMBERTIERATTRVALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.INITIALIZEDATAITERATOR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ADVANCEDATAROWINDEX">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETCURRENTDATAROWINDEX">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETSTRUCTUREDELEMENTDATA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETSTRUCTUREDATTRIBUTEDATA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETLISTFILEVALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETIMAGEURL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.HTMLIMAGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETROWINDEXBYATTRIBUTEVALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETCONTENTATTRIBUTEDATAVALUESET">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.SURVEYRESPONSE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.SURVEYURL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.SURVEYLINK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.SURVEYRESPONSEBYANSWER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.SURVEYRESPONSECONTAINS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.SURVEYCONCEPT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETRESPONDENTPROPERTY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.SETRESPONDENTPROPERTY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.DIDRESPONDENTVIEWCONCEPT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ISQUOTAMETFORCONCEPT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.HTMLLINK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.HTMLIMAGELINK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.MTOUCHLINK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.LOYALTYCARDLINK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.COUPONLINK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.PASSWORDRESETLINK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETENUMNAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETENUMVALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ADDMONTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ADDDAY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ADDYEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETMONTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETDAY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETYEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETBEGINNINGOFDAY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETENDOFDAY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETFIRSTDATEOFWEEK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETLASTDATEOFWEEK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETFIRSTDATEOFMONTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETENVIRONMENTSTRING">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETLASTDATEOFMONTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETFIRSTDATEOFQUARTER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETLASTDATEOFQUARTER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETFIRSTDATEOFYEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETLASTDATEOFYEAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.DATEDIFFINDAYS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETACTIVELOYALTYID">
            <summary>
            Gets the member's current active Loyalty ID Number from VirtualCard.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ISVIRTUALCARDOFTYPE">
            <summary>
            Determines if the loyalty card is of a certain type.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.STOREBYIDATTRVALUE">
            <summary>
            Current store name
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.STORENAME">
            <summary>
            Current store name
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.STORENUMBER">
            <summary>
            Store number of current store
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.STOREADDRESS">
            <summary>
            Address of current store
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.STORECITYSTATEZIP">
            <summary>
            City/State/Zip of current store
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETSOCIALMEDIAPROFILEIMAGEURL">
            <summary>
            Get SocialMedia Profile Image URL
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.CSAGENTHASFUNCTION">
            <summary>
            Get CSAgentHasFunction Profile Image URL
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.CSAGENTINROLE">
            <summary>
            Get CSAgentInRole Profile Image URL
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETCURRENTUICULTURE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETCURRENTUILANGUAGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.GETCOOKIEVALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.FunctionNames.ISMEMBERLOGGEDIN">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Symbols">
            <summary>
            Supported symbols used to represent the basic math logical operations.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.AND">
            <summary>
            Logical AND &#40;&#38;#41;
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.OR">
            <summary>
            Logical OR (|)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.NOT">
            <summary>
            Logical NOT (!)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.SUM">
            <summary>
            Sum (+)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.DIFFERENCE">
            <summary>
            Difference (-)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.QUOTIENT">
            <summary>
            Quotient (/)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.PRODUCT">
            <summary>
            Product (*)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.GREATER">
            <summary>
            Greater than (&gt;)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.LESS">
            <summary>
            Less Than (&lt;)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.GREATEREQUAL">
            <summary>
            Greater than or equal (&gt;=)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.LESSEQUAL">
            <summary>
            Less then or equal (&lt;=)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.EQUALS">
            <summary>
            Is Equal (==)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.NOTEQUAL">
            <summary>
            Is not equal (&lt;&gt;)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.PARAMETERSEPERATOR">
            <summary>
            Parameter seperator (,)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.Symbols.ASSIGNMENT">
            <summary>
            Assignment operator (:=) NOT YET IMPLEMENTED
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.bScript.XSLTSymbols">
            <summary>
            Symbols used in XSLT/XPath expressions
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.AND">
            <summary>
            Logical AND (and)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.OR">
            <summary>
            Logical OR (or)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.NOT">
            <summary>
            Logical NOT (!)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.SUM">
            <summary>
            Sum (+)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.DIFFERENCE">
            <summary>
            Difference (-)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.QUOTIENT">
            <summary>
            Quotient (/)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.PRODUCT">
            <summary>
            Product (*)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.GREATER">
            <summary>
            Greater than (&gt;)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.LESS">
            <summary>
            Less Than (&lt;)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.GREATEREQUAL">
            <summary>
            Greater than or equal (&gt;=)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.LESSEQUAL">
            <summary>
            Less then or equal (&lt;=)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.EQUALS">
            <summary>
            Is Equal (=)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.NOTEQUAL">
            <summary>
            Is not equal (!=)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.PARAMETERSEPERATOR">
            <summary>
            Parameter seperator (,)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.XSLTSymbols.ASSIGNMENT">
            <summary>
            Assignment operator (:=) NOT YET IMPLEMENTED
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Expression">
            <summary>
            The Expression class is an abstract class that represents the foundation of the entire system. It defines the basic characteristics
            of any expression contained in the system including an abstract evaluate definition.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Expression.Id">
            <summary>
            Returns the ID assigned to this instance.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Expression.Syntax">
            <summary>
            Returns the syntax string implemented by this class.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Expression.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs an evaluation on the expression tree.
            </summary>
            <param name="contextObject">The current execution context of the expression</param>
            <returns>An object</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Expression.parseMetaData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Expression.ResolveMember(Brierley.FrameWork.Data.IAttributeSetContainer)">
            <summary>
            This method resolves a member from the context object.
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.ExpressionFactory">
            <summary>
            The ExpressionFactory class is used to obtain a Binary Expression tree capable of being evaluated by
            supplying a string representation of the expression.
            <remarks>
            Using bScript expressions is a relatively simple task. The expressions used by bScript are standard text
            expressions written in the common form (In Fix Notation) that we are all familiar with. For example the string
            '1 + 1' is a valid expression. Expressions are used throughout the framework to externalize required calculated,
            derived, or conditional information allowing us to design more generic types to accomplish common goals and
            significantly reduce the coding requirements to implement and then maitain a system. Consider the use of rules.
            In many cases there are conditions upon with the rule is based that determine whether or not the rule should do
            its work. A date range for example where the client might want to grant double points during a particular week.
            If the code to determine whether the current date falls within the range has to compiled directly into the
            code then we significantly reduce the re-use of that class. We also have a number of examples where calulated values
            for points accrued or redeemed can be externalized out of the class itself in the form of an expression. The bScript
            expression engine supports the following operations, functions, and conditionals;
            <b>Basic math operators</b>
            Sum (+)
            Difference (-)
            Product (*)
            Quotient (/)
            <b>Conditional/Logical Operators</b>
            Is Equal (==)
            Logical AND 
            Logical OR (|)
            Logical NOT (!)
            </remarks>
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.ExpressionFactory.Create(System.String)">
            <summary>
            Creates a binary expression tree based on the string expression supplied
            </summary>
            <param name="expr">The string representation of the expression</param>
            <returns>An binary tree expression object</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.ExpressionFactory.ParseExpression(System.String)">
            <summary>
            Parses an expression string, and returns an expression object.
            The approach taken to parse an expression is recursive and done in stages. This method will call itself a number of times to 
            deal with ever smaller expressions, until the expression itself has been reduced to just a series of expression pointers. We must
            take into account operator precedence when parsing. The only thing we know about expr at this point is that it contains no 
            parenthetical groups, thanks to our regular expression. We cannot however, assume that it only has two operands.
            It could be b*x+y+z > 50. At this point we do not have parentheses to guide the order. So operator precedence takes over.
            We will allways reduce the expression to the form x operator y
            </summary>
            <param name="expr">The string to parse</param>
            <returns>An instance of Expression</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.ExpressionFactory.GetFunctionNames">
            <summary>
            This method combines the builtin function names with the custom defined functions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.ExpressionFactory.Split(System.String,System.String)">
            <summary>
            The Split method is used here to split an expression at the first occurrance of a specified character. It will result in exactly
            two array elements, as opposed to the normal string.split method, that splits a string at all occurrances of the character. The
            normal string.split methodology will break expression parsing. Consider the expression 1+1+1+1. We recursively deal with each
            operator in turn by splitting the string into pairs. Thus the expression above becomes 1+(1+(1+1)). The only place this implementation
            of split is NOT used by the parsing engine is when dealing with a Functions parameter list. In that case, the normal behavior of split
            is preferable.
            </summary>
            <param name="theString">The string to split</param>
            <param name="theCharacter">The character to split at</param>
            <returns>A 2 element string array</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.ExpressionFactory.EnsurematchingParenth(System.String)">
            <summary>
            Does a very simple check, based on count to make sure that the expressions pararenthetical groups are balanced. Basically the same
            number of opening and closing parenthases are present. This function does NOT check to make sure the grouping makes any sense logically
            or mathematically
            </summary>
            <param name="expr">The expression to check</param>
            <returns>A boolean value, true if the expression is balanced false otherwise</returns>
        </member>
        <member name="P:Brierley.FrameWork.bScript.ExpressionFactory.Item(System.String)">
            <summary>
            A string indexer on the class, used to return a parsed expression based on expression id.
            </summary>
            <param name="ExpressionId">The ID of the desired expression</param>
            <returns>An instance of Expression</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.LogicalOperators.Equals">
            <summary>
            The Equality operator <see cref="!:Brierley.Framework.bScript.Symbols.EQUALS"/> functions a little different then most others. In order to handle string equality correctly we cannot simply
            compare the objects returned by evaluate. Two objects even if they contain the same string are not equal to each other. The equality
            operator will examine the type of arguments contained in it's left and right sub-trees. If the type is string then it will assume your asking for a 
            string comparison of equality and it will convert the left tree and right tree to strings and perform the equality test. It will follow the same
            pattern for numbers. Thus 1=1 and '1' = '1' but 1 is not equal to '1'
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.Equals.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.Equals.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.LogicalOperators.GreaterEqual">
            <summary>
            The Greater Than or equal to operator <see cref="!:Brierley.Framework.bScript.Symbols.GREATEREQUAL"/> will attempt a comparison to determine whether or not the value of the left tree is Greater than or equal to
            the value of the right tree. To accomplish this task the operation will attempt to convert both sub-trees to double. An attempt to perform a Greater than
            or equal to operation on anything other than two numbers will return false.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.GreaterEqual.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.GreaterEqual.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.LogicalOperators.GreaterThan">
            <summary>
            The Greater Than operator <see cref="!:Brierley.Framework.bScript.Symbols.GREATER"/> will attempt a comparison to determine whether or not the value of the left tree is Greater than the value of the
            right tree. The operation will attempt to convert both sub-trees to double. An attempt to perform a Greater than
            operation on anything other than two numbers will return false.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.GreaterThan.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.GreaterThan.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.LogicalOperators.LessEqual">
            <summary>
            The Less Than or Equal to operator <see cref="!:Brierley.Framework.bScript.Symbols.LESSEQUAL"/> will attempt a comparison to determine whether or not the value of the left tree is less than or equal to the value of the
            right tree. The operation will attempt to convert both sub-trees to double. An attempt to perform a less than or equal to
            operation on anything other than two numbers will return false.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.LessEqual.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.LessEqual.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.LogicalOperators.LessThan">
            <summary>
            The Less Than operator <see cref="!:Brierley.Framework.bScript.Symbols.LESS"/> will attempt a comparison to determine whether or not the value of the left tree is less than the value of the
            right tree. The operation will attempt to convert both sub-trees to double. An attempt to perform a less than
            operation on anything other than two numbers will return false.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.LessThan.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.LessThan.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.LogicalOperators.LogicalAND">
            <summary>
            Performs a logical "AND" <see cref="!:Brierley.Framework.bScript.Symbols.AND"/> operation on the values of its left and right subtrees.
            To accomplish this task the operation will attempt to convert both sub-trees to Boolean values. It both subtrees
            do not evaluate to a boolean value the operator will throw an exception
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.LogicalAND.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.LogicalAND.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.LogicalOperators.LogicalNOT">
            <summary>
            Performs a logical "NOT" <see cref="!:Brierley.Framework.bScript.Symbols.NOT"/> operation on its operand. 
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.LogicalNOT.#ctor(Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.LogicalNOT.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.LogicalOperators.LogicalOR">
            <summary>
            Performs a logical "OR" <see cref="!:Brierley.Framework.bScript.Symbols.OR"/> operation on its left and right subtrees.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.LogicalOR.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.LogicalOR.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.LogicalOperators.NotEqual">
            <summary>
            The Not Equal operator <see cref="!:Brierley.Framework.bScript.Symbols.NOTEQUAL"/> will return true if it's operands are not equal to each other. False otherwise.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.NotEqual.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.LogicalOperators.NotEqual.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.MathOperators.Difference">
            <summary>
            The difference class implements the subtraction operator. "-"
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.MathOperators.Difference.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.MathOperators.Difference.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.MathOperators.Product">
            <summary>
            The Product class implements the multiplication operator. "*"
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.MathOperators.Product.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.MathOperators.Product.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.MathOperators.Quotient">
            <summary>
            The Quotient class implements the division operator. "/"
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.MathOperators.Quotient.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.MathOperators.Quotient.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.MathOperators.Sum">
            <summary>
            The Sum class implements the addition operator. "+"
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.MathOperators.Sum.#ctor(Brierley.FrameWork.bScript.Expression,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal Constructor
            </summary>
            <param name="lhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
            <param name="rhs">An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.MathOperators.Sum.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the operation defined by this operator
            </summary>
            <returns>An object representing the result of the evaluation</returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.ParameterList">
            <summary>
            The Parameter list class is a type of expression that contains other expressions to be consumed by a 
            function. The expressions contained in this class will be arranged in the order they were encountered
            in the functions parameter list.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.bScript.ParameterList.Expressions">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.ParameterList.#ctor(Brierley.FrameWork.bScript.Expression[])">
            <summary>
            Internal constructor
            </summary>
            <param name="expressions">An array of expression objects</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.ParameterList.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs the evaluation. Returns 0 for the parameter list class.
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.ParameterList.ToString">
            <summary>
            Returns the string name of this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.Property">
            <summary>
            Property place holder in the expression. Of the form Member.PropertyName
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Property.#ctor(System.String)">
            <summary>
            Internal constructor
            </summary>
            <param name="Name">The name of the <see cref="!:Brierley.Framework.Member"/> property</param>
        </member>
        <member name="P:Brierley.FrameWork.bScript.Property.Name">
            <summary>
            returns the name of the property.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.Property.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="contextObject"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.StringConstant">
            <summary>
            The string constant class works much like the Constant class except its value is a string
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.StringConstant.#ctor(System.String)">
            <summary>
            Internal constructor
            </summary>
            <param name="value">The string value to hold</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.StringConstant.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            returns the string value being held by the container.
            </summary>
            <param name="contextObject">the current evaluation context</param>
            <returns>The string</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.StringConstant.ToString">
            <summary>
            returns the string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.bScript.UnaryOperation">
            <summary>
            The Unary Operation class is an abstract class that underpins all the supported unary operators 
            such as the ! (NOT) operator.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.UnaryOperation.#ctor">
            <summary>
            Public Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.UnaryOperation.#ctor(System.String,Brierley.FrameWork.bScript.Expression)">
            <summary>
            Internal constructor
            </summary>
            <param name="op">The string representation of the operation</param>
            <param name="operand">The expression upon which the Unary operation will act.</param>
        </member>
        <member name="M:Brierley.FrameWork.bScript.UnaryOperation.ToString">
            <summary>
            returns a string representation of the operation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.UnaryOperation.GetLeft">
            <summary>
            returns the objects left subtree
            </summary>
            <returns>An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.UnaryOperation.GetRight">
            <summary>
            Returns the objects right subtree
            </summary>
            <returns>An object of type <see cref="!:Brierley.Framework.bScript.Expression"/></returns>
        </member>
        <member name="P:Brierley.FrameWork.bScript.UnaryOperation.Operator">
            <summary>
            return the string representsion of the operator.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.WizardItem.EnsureQuotes(System.String,System.String)">
            <summary>
            Ensure quotes on string only if the operator is not a math operation and the value is not a numeric value
            </summary>
            <param name="op"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="P:Brierley.FrameWork.bScript.IExpression.Syntax">
            <summary>
            Returns the syntax string implemented by this class.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.bScript.IExpression.evaluate(Brierley.FrameWork.ContextObject)">
            <summary>
            Performs an evaluation on the expression tree.
            </summary>
            <param name="contextObject">The current execution context of the expression</param>
            <returns>An object</returns>
        </member>
        <member name="M:Brierley.FrameWork.bScript.IExpression.parseMetaData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DataProvider.CampaignDataProvider.GetCaseRows(System.Collections.Generic.List{Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn})">
            <summary>
            returns a list of all rows to be used in building case statements
            </summary>
            <param name="columns"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.CampaignManagement.DataProvider.SqlQuery">
            <summary>
            Contains all information necessary for a provider class to construct a sql query from.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DataProvider.SqlQuery.MergeFields">
            <summary>
            The fields to include as part of the initial merge statement. 
            </summary>
            <remarks>
            Fields not included will be brought in by additional update statements following the merge. For example, the input tables contain
            ipcode, firstname and lastname, and the user selects ipcode and first name to merge with
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.CampaignManager.ExecutionType">
            <summary>
            gets or sets the default mode for executing campaigns (foreground or via job scheduler)
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.CampaignManager.SendExecutionEmail">
            <summary>
            gets or sets whether scheduled immediate jobs will send an email to the user who initiated execution.
            </summary>
            <remarks>
            this value is global to each client and must be set through the DBConfig screen. It will only cause an email
            to be sent if campaing execution mode is set to scheduled.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.CampaignManager.DeleteCampaign(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Deletes a campaign
            </summary>
            <param name="CampaignID">The ID of the campaign to delete.</param>
            <param name="DropRelatedTables">
            Drop all tables related to the campaign.
            	"Related Tables" refers to any tables created behind the scenes - table type 2 (Step) 
            	in CLTableType - as part of a campaign step.
            </param>
            <param name="DropOutputTables">
            Drop all tables created using output steps.
            	Refers to any table specifically created and named by the user for use as an output.
            </param>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.CampaignManager.AddCollectionToCampaign(System.Int64,System.Int64,System.Int32,System.Int32)">
            <summary>
            Adds a collection of steps to a campaign
            </summary>
            <param name="campaignId"></param>
            <param name="collectionId"></param>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.CampaignManager.CreateCollection(System.String,System.Int64,System.Collections.Generic.List{System.Int64})">
            <summary>
            Creates a new collection from a selection of steps in a campaign
            </summary>
            <param name="name"></param>
            <param name="steps"></param>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.CampaignManager.RefreshFieldValues(System.Int64)">
            <summary>
            refreshes a field's list of values.
            </summary>
            <remarks>
            Distinct values can be retrieved on the fly, stored manually as a list or retrieved and stored in a table.
            </remarks>
            <param name="fieldId"></param>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.StepType.Select">
            <summary>
            Selects rows with either a framework/data warehouse table or a table created as the ouput of a step and inserts 
            the results into its output table.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.StepType.SplitProcess">
            <summary>
            Step which splits the campaign processing between two or more steps based on the selection criteria of each step.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.StepType.Assignment">
            <summary>
            Appends new fields with assigned values to the step's output table. Will pull all records from the input table and 
            output to the output table (i.e., either a catch-all value exists or null is assigned to the new column).
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.StepType.Merge">
            <summary>
            Merges rows from 2 or more input steps.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.StepType.Output">
            <summary>
            Selects rows with either a framework/data warehouse table
            or a table created as the ouput of a step. This type only applies to output queries, because
            all other queries feed results into an output table.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.StepType.Sql">
            <summary>
            A query that uses SQL input by the user. No columns, no conditions, just straight SQL text.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.StepType.ControlGroup">
            <summary>
            One to N queries that perform selections with either a row or percentage limit, meant to separate records into "test" and "control" groups.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.ExecutionTypes.Foreground">
            <summary>
            camapign or step is being executed by a user in the foreground
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.ExecutionTypes.Background">
            <summary>
            campaign or step is being executed by a user in the background
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.ExecutionTypes.Schedule">
            <summary>
            campaign is being executed by the job scheduler
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.CampaignManagement.ValueGenerationType">
            <summary>
            Enum to determine how unique values of a column are gathered and stored.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.ValueGenerationType.NotGenerated">
            <summary>
            The column does not contain a computable list of unique values, therefore no list will be generated.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.ValueGenerationType.OnTheFly">
            <summary>
            The column belongs to a lookup table small enough to compute unique values on the fly, as needed.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.ValueGenerationType.Cached">
            <summary>
            The column belongs to a table too large to calculate unique values on the fly, therefore the values are 
            calculated when the campaign manager chooses to refreshe the list, and the unique values are stored in a 
            table for retrieval.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.ValueGenerationType.Manual">
            <summary>
            A list of unique values are provided by the campaign manager
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.ValueGenerationType.SqlCached">
            <summary>
            Sql statement is provided to obtain a value list from either a separate table or from the same table using a 
            display field as a helper (e.g., supply tier code in LW_MemberTiers with a list of tier id and name from LW_Tiers)
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.ValueGenerationType.SqlOnTheFly">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.MergeType.Top">
            <summary>
            Treat the table as the top level table of the union statement
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.MergeType.Union">
            <summary>
            Union select, exclude duplicates
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.MergeType.UnionAll">
            <summary>
            Include duplicates
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.MergeType.Intersect">
            <summary>
            Returns any distinct values that are returned by both the query on the left and right sides of the INTERSECT operand.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.MergeType.ExceptOrMinus">
            <summary>
            All rows from top table, minus those rows that exist in the bottom table
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.CampaignManagement.Constants.DistinctValueMaxLength">
            <summary>
            The maximum allowable length for a field where distinct values may be computed
            </summary>
            <remarks>
            Unless provided by the campaign manager in a manual list, no string database field may have its distinct values
            computed by campaign management if the maximum length of the field exceeds this constant. Values that are cached
            in the database are stored in a table with the same maximum length as this constant, therefore any fields that
            exceed this length would be truncated and the values could not be guaranteed accurate.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Attribute.VisibleInGrid">
            <summary>
            Gets or sets grid visibility for the attribute.
            </summary>
            <remarks>
            This currently only applies to Offer and Segment attributes shown in the offer and segment grid, not the campaign grid.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Audience.Id">
            <summary>
            Gets or sets the ID for the current Audience
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Audience.Name">
            <summary>
            Gets or sets the Name for the current Audience
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Audience.Description">
            <summary>
            Gets or sets the Description for the current Audience
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Audience.#ctor">
            <summary>
            Initializes a new instance of the Audience class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Audience.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Audience class
            </summary>
            <param name="name">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.Audience.Name" /> value</param>
            <param name="description">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.Audience.Description" /> value</param>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.Id">
            <summary>
            The unique ID of the campaign
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.CampaignType">
            <summary>
            The type of the campaign.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.Name">
            <summary>
            The name of the campaign
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.Description">
            <summary>
            The description of the campaign
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.FolderId">
            <summary>
            Id of the folder the campaign is stored in
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.IsTemplate">
            <summary>
            Is the campaign a template for other campaigns?
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.ExecutionType">
            <summary>
            describes how the campaign is being executed
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.ExecutionUserId">
            <summary>
            The id of the user who is currently executing the campaign.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.IsExecuting">
            <summary>
            Is the campaign - or a step in the campaign - currently being executed?
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.ExecutionCancelled">
            <summary>
            Has a cancellation request been made for the campaign?
            </summary>
            <remarks>
            This is used to determine if the state manager should halt execution of the campaign. Initially, campaigns running in the background
            will not use a windows service and will instead be executed on a separate thread in asp.net. This property will be set by a campaign 
            manager to request that the campaign executing in the background halt execution.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.Config">
            <summary>
            Gets or sets the configuration xml for the campagin. Today, this value houses campaign builder state (zoom, canvas position etc.), 
            but may eventually contain step and query data.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.#ctor">
            <summary>
            Initializes a new instance of the Campaign class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.#ctor(System.String,System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the Campaign class
            </summary>
            <param name="name">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.Name" /> value</param>
            <param name="description">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.Description" /> value</param>
            <param name="createDate">Initial <see cref="!:Campaign.CreateDate" /> value</param>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Campaign.Validate(System.Collections.Generic.List{Brierley.FrameWork.CampaignManagement.ValidationMessage}@,System.Boolean)">
            <summary>
            Validates the campaign.
            </summary>
            <remarks>
            
            </remarks>
            <param name="warnings"></param>
            <param name="validateSql"></param>
            <returns></returns>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignAttribute.Id">
            <summary>
            gets or sets the id of the attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignAttribute.CampaignId">
            <summary>
            Gets or sets the campaign id of the attribute.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignAttribute.OfferId">
            <summary>
            Gets or sets the offer id of the attribute
            </summary>
            <remarks>
            Unless the attribute is an offer type, then this will be null. Otherwise, it points to 
            the offer that the attribute value belongs to.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignAttribute.SegmentId">
            <summary>
            Gets or sets the segment id of the attribute
            </summary>
            <remarks>
            Unless the attribute is a segment type, then this will be null. Otherwise, it points to 
            the segment that the attribute value belongs to.
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable">
            <summary>
            POCO for CampaignTable.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable.Id">
            <summary>
            Gets or sets the ID for the current CampaignTable
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable.Name">
            <summary>
            Gets or sets the Name for the current CampaignTable
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable.Alias">
            <summary>
            Gets or sets the Alias name for the current CampaignTable
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable.TableType">
            <summary>
            Gets or sets the TableType for the current CampaignTable
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable.IsCampaignSchema">
            <summary>
            Gets or sets whether the configured table resides in the default schema.
            </summary>
            <remarks>
            This property only applies to clients that are configured to use separate campaign and data schemas (campaign schema = the 
            schema/database where data is written, including output tables. data schema = the schema/database where the bulk of the data 
            resides - i.e., the data warehouse). If a data schema is used, then tables could be mapped from either schema. This property
            helps to identify which schema the mapped table resides in.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable.Fields">
            <summary>
            Gets or sets the transient list of fields belonging to this table. Used when mapping joins for execution.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable.#ctor">
            <summary>
            Initializes a new instance of the CampaignTable class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable.#ctor(System.String,Brierley.FrameWork.CampaignManagement.TableType)">
            <summary>
            Initializes a new instance of the CampaignTable class
            </summary>
            <param name="name">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable.Name" /> value</param>
            <param name="tableType">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable.TableType" /> value</param>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.RowOrder">
            <summary>
            Gets or sets the RowOrder for the current ColumnCondition
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.Operator">
            <summary>
            Gets or sets the operator for the current ColumnCondition
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.FieldFunction">
            <summary>
            Gets or sets the field function for the current ColumnCondition
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.DatePart">
            <summary>
            Gets or sets the date part for the current ColumnCondition
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.AssignmentTableId">
            <summary>
            Gets or sets the assignment table id for the current ColumnCondition
            <remarks>
            Used by assignment steps to assign a field values to output rows 
            e.g., assign each member's tier name to a column that will be carried
            throughout the rest of the campaign.
            This property is deprecated in 4.4, held in place for backward compatability 
            with older campaigns, and will be removed in 4.5. LoyaltyWare 4.4 adds the 
            formula builder control, which will be used in place of the assignment box, 
            so it will now be possible to assign using a formula potentially consisting of
            multiple fields from multiple tables. There's no way to track it all with a 
            single table id.
            </remarks>
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.AssignmentFieldName">
            <summary>
            Gets or sets the assignment field name for the current ColumnCondition
            <remarks>
            Used by assignment steps to assign a field values to output rows 
            e.g., assign each member's tier name to a column that will be carried
            throughout the rest of the campaign.
            This property is also deprecated in 4.4 (see AssignmentTableId)
            </remarks>
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.ConditionExpression">
            <summary>
            Gets or sets the ConditionExpression for the current ColumnCondition
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.NonAliasedConditionExpression">
            <summary>
            Gets or sets the transient non-aliased column expression
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.AssignmentTableName">
            <summary>
            sets or sets the name of the table the for the current ColumnCondition
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.#ctor">
            <summary>
            Initializes a new instance of the ColumnCondition class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the ColumnCondition class
            </summary>
            <param name="rowOrder">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.RowOrder" /> value</param>
            <param name="conditionExpression">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.ColumnCondition.ConditionExpression" /> value</param>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.OutputOption.EmailName">
            <summary>
            Gets or sets the EmailName for the current OutputOption
            </summary>
            <remarks>
            This is used in two ways:
            1. To assist the user in the mail file creation by showing the template field names. 
               User selects an email and a server request gathers the email's fields and populates the grid with the names of the fields.
            2. A process may expect a campaign to create a mail file before a step sends an email using the file. In this case, we want
               to verify that the email file was created for the same email.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.OutputOption.SendEmail">
            <summary>
            Gets or sets whether the email should be sent on commit/verify. This only applies to mail file output
            where the user as selected an email to tie the generated file to.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn">
            <summary>
            POCO for QueryColumn.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn.#ctor">
            <summary>
            Initializes a new instance of the QueryColumn class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn.ColumnType">
            <summary>
            Gets or sets the ColumnType for the current QueryColumn
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn.TableId">
            <summary>
            Gets or sets the TableID for the current QueryColumn
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn.FieldName">
            <summary>
            Gets or sets the FieldName for the current QueryColumn
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn.ColumnExpression">
            <summary>
            Gets or sets the ColumnExpression for the current QueryColumn
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn.NonAliasedColumnExpression">
            <summary>
            Gets or sets the transient non-aliased column expression
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn.AggregateExpression">
            <summary>
            Gets or sets the AggregateExpression for the current QueryColumn
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn.HavingExpression">
            <summary>
            Gets or sets the HavingExpression for the current QueryColumn
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn.IncludeInOutput">
            <summary>
            Gets or sets the IncludeInOutput for the current QueryColumn
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn.OutputAs">
            <summary>
            Gets or sets the OutputAs for the current QueryColumn
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn.Width">
            <summary>
            Gets or sets the with in the query builder
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignQuery.Parameter.Name">
            <summary>
            Gets or sets the name of the parameter (campaign attribute name)
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignQuery.Parameter.Value">
            <summary>
            Gets or sets the value of the parameter.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.CampaignQuery.Parameter.UseCampaignValue">
            <summary>
            Gets or sets whether or not the campaign's value should be overridden.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.OutputQuery.GetVerifySqlStatement">
            <summary>
            Assembles the SQL statement for the verification (commit) process of the step
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.CampaignManagement.DomainModel.Query">
            <summary>
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Query.IsGlobal">
            <summary>
            Gets or sets the IsGlobal for the current Query
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Query.#ctor">
            <summary>
            Initializes a new instance of the Query class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Query.GetSqlStatement(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Assembles the SQL statement based on the parameters of the query.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Query.GetVerifySqlStatement">
            <summary>
            Assembles the SQL statement for the verification (commit) process of the step
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Query.MapTableJoins(Brierley.FrameWork.CampaignManagement.DataProvider.SqlQuery,System.Collections.Generic.List{Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn})">
            <summary>
            Maps necessary table joins to the query's root table.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Query.GetTableJoinRouteFast(System.Int64)">
            <summary>
            Attempts to find a join route between two tables that do not share a common key by locating a third
            table containing two keys that can used to join as the middle table between the two. For example, if
            a query is attempting to use LW_LoyaltyMember as the root table and the query lists criteria on LW_Tiers, 
            this method would locate LW_MemberTiers and join the tables as:
            SELECT ...
            FROM
            	LW_LoyaltyMember 
            	LEFT JOIN LW_MemberTiers ON LW_MemberTiers.MemberId = LW_LoyaltyMember.IPCODE 
            	LEFT JOIN LW_Tiers ON LW_Tiers.TierId = LW_MemberTiers.TierId
            
            This is the faster of the two table mapping methods and is therefore always called first.
            </summary>
            <param name="tableId"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Query.GetTableJoinRouteTree(System.Int64)">
            <summary>
            Builds a tree of all framework tables from the root table in an attempt to map the provided table id back 
            to the query's root table.
            </summary>
            <remarks>
            This method should only be called in cases where a table is linked more than 2 joins away from the root 
            table. In most cases, the join will be picked up either directly (the root table and the joined table each
            have a key that matches the other's on audience id) or with a single table between them (handled by 
            GetTableJoinRouteFast).
            </remarks>
            <param name="tableID"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Query.EvaluateFields(System.Collections.Generic.IList{Brierley.FrameWork.CampaignManagement.DomainModel.CampaignTable},System.Collections.Generic.IList{Brierley.FrameWork.CampaignManagement.DomainModel.Attribute},Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn)">
            <summary>
            Returns a list showing which fields and parameters are in use by the QueryColumn.
            </summary>
            <param name="tables"></param>
            <param name="parameters"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Query.ConvertFromAliases(Brierley.FrameWork.CampaignManagement.DomainModel.Query.FieldEvaluation,Brierley.FrameWork.CampaignManagement.DomainModel.QueryColumn,System.String,System.String)">
            <summary>
            Converts any aliased table or field names in the expression to their actual name, then stores in 
            </summary>
            <param name="tables"></param>
            <param name="parameters"></param>
            <param name="column"></param>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.RealTimeInputQuery.GetVerifySqlStatement">
            <summary>
            Assembles the SQL statement for the verification (commit) process of the step
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.RealTimeOutputQuery.GetVerifySqlStatement">
            <summary>
            Assembles the SQL statement for the verification (commit) process of the step
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.CampaignManagement.DomainModel.SelectQuery">
            <summary>
            The query mapped to both the select step and the change audience step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.SqlTextQuery.SqlText">
            <summary>
            Gets or sets the SqlText for the current Query
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.WaitQuery.WaitType">
            <summary>
            Gets or sets the wait type for the step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.WaitQuery.WaitInterval">
            <summary>
            Gets or sets the interval to wait for
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.WaitQuery.WaitAmount">
            <summary>
            Gets or sets the wait amount for the selected interval
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.WaitQuery.WaitUntil">
            <summary>
            Gets or sets the exact date and time to wait until.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.CampaignManagement.DomainModel.Step">
            <summary>
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.Id">
            <summary>
            Gets or sets the ID for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.StepType">
            <summary>
            Gets or sets the StepType for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.UIPositionX">
            <summary>
            Gets or sets the UIPositionX for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.UIPositionY">
            <summary>
            Gets or sets the UIPositionY for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.UIName">
            <summary>
            Gets or sets the UIName for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.UIDescription">
            <summary>
            Gets or sets the UIDescription for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.LastError">
            <summary>
            Gets or sets the LastError for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.InputCount">
            <summary>
            Gets the number of input steps that are connected to this step. Used by campaign builder to determine if the step
            is a starter step or if it is being fed data from another step.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.ExecutionPriority">
            <summary>
            gets or sets the execution priority for the step.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.VerificationState">
            <summary>
            Gets or sets the VerificationState for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.CampaignId">
            <summary>
            Gets or sets the CampaignID for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.KeyId">
            <summary>
            Gets or sets the KeyID for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.UILastRecordCount">
            <summary>
            Gets or sets the UILastRecordCount for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.LastRunDate">
            <summary>
            Gets or sets the LastRunDate for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.UILastStatus">
            <summary>
            Gets or sets the UILastStatus for the step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.IsExecuting">
            <summary>
            Is the step currently executing?
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.OutputTableId">
            <summary>
            Gets or sets the OutputTableID for the current Step
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.Step.ExecutionStart">
            <summary>
            The datetime that the step began execution.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.Step.#ctor">
            <summary>
            Initializes a new instance of the Step class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey">
            <summary>
            POCO for TableKey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.Id">
            <summary>
            Gets or sets the ID for the current TableKey
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.TableId">
            <summary>
            Gets or sets the TableID for the current TableKey
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.AudienceId">
            <summary>
            Gets or sets the AudienceID for the current TableKey
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.FieldName">
            <summary>
            Gets or sets the FieldName for the current TableKey
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.IsAudienceLevel">
            <summary>
            Gets or sets whether the field is advertised as a selectable audience level
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.FieldType">
            <summary>
            Gets or sets the FieldType for the current TableKey
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.#ctor">
            <summary>
            Initializes a new instance of the TableKey class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.#ctor(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Initializes a new instance of the TableKey class
            </summary>
            <param name="tableID">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.TableId" /> value</param>
            <param name="audienceID">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.AudienceId" /> value</param>
            <param name="fieldName">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.FieldName" /> value</param>
            <param name="fieldType">Initial <see cref="P:Brierley.FrameWork.CampaignManagement.DomainModel.TableKey.FieldType" /> value</param>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.CampaignConfiguration.MaxValueList">
            <summary>
            Gets or sets the maximum number of distinct values that will appear in a list in campaign builder.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.SqlStatement.Statement">
            <summary>
            Gets or sets the SQL text
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.CampaignManagement.SqlStatement.ApplyToResults">
            <summary>
            Gets or sets whether or not the results of the statement should count toward the result count of the query
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.CreatesCircularReference(System.Int64,System.Int64)">
            <summary>
            Determines whether linking two steps creates a circular reference anywhere in the campaign.
            </summary>
            <remarks>
            Linking a chain of steps together in a way that causes the ouput of a step to feed back into the
            input of the same step will cause infinite loops. This method adds the proposed step link to the 
            execution plan and checks to see if steps end up in the execution chain muiltiple times. If so, 
            the steps should not be allowed to be linked.
            For the simplest types of loops (step a connects to step b which then connects to step a), the UI 
            will handle error messaging to the user, but this is needed in more complex cases:
            a
              -> b
              -> c
                   -> e
                       -> i
                       -> j
                   -> f
                       -> g
                            -> h
                                 -> a
              -> d
              -> e
            </remarks>
            <param name="StepID"></param>
            <param name="OutputStepID"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.ExecuteRealTimeCampaign(Brierley.FrameWork.ContextObject,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Runs a real-time campaign
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.ExecuteCampaign(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Runs the entire campaign, start to finish
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.ResumeCampaign(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Runs the campaign, starting at the last point of execution
            </summary>
            <remarks>
            This method is primarily for campaign plans. A long running plan may be interrupted if the scheduler service is restarted, 
            and will need to recover and continue execution. This will restart execution at whatever step was last executing.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.ExecuteCampaign(System.Object)">
            <summary>
            Runs the entire campaign, start to finish
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.ExecuteCampaign(System.Collections.Generic.List{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Int64},System.Nullable{Brierley.FrameWork.CampaignManagement.ExecutionTypes})">
            <summary>
            Runs the provided list of steps in a campaign.
            </summary>
            <param name="steps"></param>
            <param name="continueAtStep">If supplied, execution will continue at the step, without changing the execution date.</param>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.PurgeCampaign">
            <summary>
            Purges temp tables for the entire campaign, start to finish
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.PurgeCampaign(System.Object)">
            <summary>
            Purges specified tables for the campaign
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.PurgeCampaign(System.Collections.Generic.List{System.Int64})">
            <summary>
            Purges the provided list of steps in a campaign.
            </summary>
            <param name="steps"></param>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.ExecuteRealTimeCampaign(Brierley.FrameWork.ContextObject,System.Collections.Generic.List{System.Int64},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Runs the provided list of steps in a campaign.
            </summary>
            <param name="steps"></param>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.Abort">
            <summary>
            Abort the current campaign execution
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.CampaignManagement.StateManager.GetExecutionPlan">
            <summary>
            Builds an execution plan for the campaign.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.CodeGen.ClientDataModel.StringResourceLoader">
            <author>  MAX
            
            To change the template for this generated type comment go to
            Window - Preferences - Java - Code Generation - Code and Comments
            </author>
        </member>
        <member name="T:Brierley.FrameWork.Common.Logging.LWAsyncJobLogger">
            <summary>
            LW-3792 New logger class to add the asynjob properties to the log4net thread context, this will allow us to use a log4net appender instead of writing directly to the table. 
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWAsyncJobLogger.ProcessRequest(System.Object)">
            <summary>
            This method will add all of the asynjob properties to a log4net thread context.
            </summary>
            <param name="jobMessage">This will be an AsyncJob object</param>
        </member>
        <member name="T:Brierley.FrameWork.Common.Logging.LWAsyncJobProcessedObjectsLogger">
            <summary>
            LW-3792 New logger that will be used to log table entries by using a log4net appender
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Logging.LWAsyncJobProcessedObjectsLogger.RequestQueue">
            <summary>
            This is the RequestQ where this logger receives messages to log.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWAsyncJobProcessedObjectsLogger.Run">
            <summary>
            Main method, this is adding all of the object properties to the the log4net thread context 
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.Logging.LWProcessedObjectsLogManager">
            <summary>
            LW-3792 This class will manage all log entries that use the AsyncJobProcessedObjectsLogger, this was class was devloped by using the LWFailedMessageLogManager as a template
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWProcessedObjectsLogManager.Initialize(Brierley.FrameWork.Common.Config.LWConfiguration)">
            <summary>
            Initializes the logger
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWProcessedObjectsLogManager.LogMessages(Brierley.FrameWork.Common.Config.LWConfiguration,System.Collections.Generic.List{Brierley.FrameWork.Data.DomainModel.AsyncJobProcessedObjects})">
            <summary>
            Process a list of objects that need to be logged to the table
            </summary>
            <param name="config"></param>
            <param name="message"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWProcessedObjectsLogManager.Shutdown">
            <summary>
            Shutdowns the logger
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.Logging.LWRuleExecutionLogger">
            <summary>
            LW-3792 Logs entries to the rule exectuion log table, this doesn't write directly to the table instead uses log4net appenders. 
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWRuleExecutionLogger.ProcessRequest(Brierley.FrameWork.Data.DomainModel.RuleExecutionLog)">
            <summary>
            Process the request by adding to the Log4net global context properties
            </summary>
            <param name="jobMessage"></param>
        </member>
        <member name="T:Brierley.FrameWork.Common.Logging.LWFailedMessageLogger">
            <summary>
            This class logs failed messages.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Logging.LWFailedMessageLogger.RequestQueue">
            <summary>
            This is the RequestQ where this logger receives messages to log.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWFailedMessageLogger.TransformMessage(Brierley.FrameWork.Data.DomainModel.LIBMessageLog)">
            <summary>
            This was logic that was being done prior to insterting to the table so I've moved it here so that we can keep the same fucntionallity as before. 
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.Logging.LWFailedMessageLogManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWFailedMessageLogManager.LogFailedMessage(Brierley.FrameWork.Common.Config.LWConfiguration,Brierley.FrameWork.Data.DomainModel.LIBMessageLog)">
            <summary>
            
            </summary>
            <param name="config"></param>
            <param name="message"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWFailedMessageLogManager.Shutdown">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.Logging.LWLogger">
            <summary>
            This class uses  Microsoft.Enterprise.Library Logging Application Block to log messages to 
            a variety of message targets.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.IsCriticalEnabled">
            <summary>
            Is "Critical" log level enabled?
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.IsErrorEnabled">
            <summary>
            Is "Error" log level enabled?
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.IsTraceEnabled">
            <summary>
            Is "Trace" log level enabled?
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.IsDebugEnabled">
            <summary>
            Is "Debug" log level enabled?
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Critical(System.String)">
            <summary>
            Log a message at "Critical" level
            </summary>
            <param name="msg">the message</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Critical(System.String,System.Exception)">
            <summary>
            Log a message at "Critical" level
            </summary>
            <param name="msg">the message</param>
            <param name="exception">source exception</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Critical(System.String,System.String,System.String)">
            <summary>
            Log a message at "Critical" level
            </summary>
            <param name="className">source class name</param>
            <param name="methodName">source method name</param>
            <param name="msg">the message</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Critical(System.String,System.String,System.String,System.Exception)">
            <summary>
            Log a message at "Critical" level
            </summary>
            <param name="className">source class name</param>
            <param name="methodName">source method name</param>
            <param name="msg">the message</param>
            <param name="exception">source exception</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Critical(System.String,System.String,System.String,System.Exception,System.Boolean)">
            <summary>
            Log a message at "Error" level
            </summary>
            <param name="className">source class name</param>
            <param name="methodName">source method name</param>
            <param name="msg">the message</param>
            <param name="exception">source exception</param>
            <param name="logInner">If true then log the inner exceptions</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Error(System.String)">
            <summary>
            Log a message at "Error" level
            </summary>
            <param name="msg">the message</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Error(System.String,System.Exception)">
            <summary>
            Log a message at "Error" level
            </summary>
            <param name="msg">the message</param>
            <param name="exception">source exception</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Error(System.String,System.String,System.String)">
            <summary>
            Log a message at "Error" level
            </summary>
            <param name="className">source class name</param>
            <param name="methodName">source method name</param>
            <param name="msg">the message</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Error(System.String,System.String,System.String,System.Exception)">
            <summary>
            Log a message at "Error" level
            </summary>
            <param name="className">source class name</param>
            <param name="methodName">source method name</param>
            <param name="msg">the message</param>
            <param name="exception">source exception</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Error(System.String,System.String,System.String,System.Exception,System.Boolean)">
            <summary>
            Log a message at "Error" level
            </summary>
            <param name="className">source class name</param>
            <param name="methodName">source method name</param>
            <param name="msg">the message</param>
            <param name="exception">source exception</param>
            <param name="logInner">If true then log the inner exceptions</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Warning(System.String)">
            <summary>
            Log a message at "Warning" level
            </summary>
            <param name="msg">the message</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Warning(System.String,System.Exception)">
            <summary>
            Log a message at "Warning" level
            </summary>
            <param name="msg">the message</param>
            <param name="exception">source exception</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Warning(System.String,System.String,System.String)">
            <summary>
            Log a message at "Warning" level
            </summary>
            <param name="className">source class name</param>
            <param name="methodName">source method name</param>
            <param name="msg">the message</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Warning(System.String,System.String,System.String,System.Exception)">
            <summary>
            Log a message at "Warning" level
            </summary>
            <param name="className">source class name</param>
            <param name="methodName">source method name</param>
            <param name="msg">the message</param>
            <param name="exception">source exception</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Trace(System.String)">
            <summary>
            Log a message at "Trace" level
            </summary>
            <param name="msg">the message</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Trace(System.String,System.String,System.String)">
            <summary>
            Log a message at "Trace" level
            </summary>
            <param name="className">source class name</param>
            <param name="methodName">source method name</param>
            <param name="msg">the message</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Debug(System.String)">
            <summary>
            Log a message at "Debug" level
            </summary>
            <param name="msg">the message</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLogger.Debug(System.String,System.String,System.String)">
            <summary>
            Log a message at "Debug" level
            </summary>
            <param name="className">source class name</param>
            <param name="methodName">source method name</param>
            <param name="msg">the message</param>
        </member>
        <member name="T:Brierley.FrameWork.Common.Logging.LWLoggerManager">
            <summary>
            This class manages LWLogger instances.  Use this pattern to log:
            <code>
            private const string _className = "MyClass";
            private static LWLogger _logger = LWLoggerManager.GetLogger(LWConstants.LW_FRAMEWORK);
            _logger.Error(_className, ...);
            </code>
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.LWLoggerManager.GetLogger(System.String)">
            <summary>
            Get the logger for the named application.
            </summary>
            <param name="applicationName">The application name.</param>
            <returns>LWLogger</returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.Logging.ICommunicationLogger">
            <summary>
            Interface for logging Email and SMS communications.
            </summary>
            <remarks>
            This interface is intended to be used for logging failed communications (e.g., DMC's CreateUser, UpdateProfile and SendSingle calls; AWS and other triggered emails). 
            These failed calls would typically need to be queued for retry. 
            
            The original EmailQueue had the ability to log successful calls, therefore DMCService will pass all calls, failure or otherwise, through to 
            the class implementing this interface. It is up to the implementation to determine how/whether to log the message.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.ICommunicationLogger.LogMessage(Brierley.FrameWork.Common.Logging.CommunicationLogData)">
            <summary>
            Logs a message.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Logging.ICommunicationLogger.LogMessage(Brierley.FrameWork.Common.Logging.CommunicationLogData,System.Boolean@)">
            <summary>
            Logs a DMC message.
            </summary>
            <param name="data"></param>
            <param name="queuedForRetry">
            boolean indicating whether or not the message was logged. A true value indicates that the caller may consider the message 
            "handled", meaning that a failed message attempt has been queued for retry and the exception should not be re-thrown.
            </param>
        </member>
        <member name="T:Brierley.FrameWork.Common.Config.DBConfig">
            <summary>
            Database configuration.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.DBConfig.DBConnectionConfig.IsValid">
            <summary>
            Returns true if UserId, EncodedPassword, and Database are provided
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.DBConfig.DBType">
            <summary>
            The type of database.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.DBConfig.UserID">
            <summary>
            The user ID for logging into the database.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.DBConfig.DefaultSchema">
            <summary>
            The default schema to use when connecting to the database (if different than the UserID).
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.DBConfig.Server">
            <summary>
            The server name on which the database resides.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.DBConfig.Database">
            <summary>
            The database or schema name.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.DBConfig.#ctor">
            <summary>
            Construct a database configuration.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.DBConfig.#ctor(Brierley.FrameWork.Common.Config.LWKeystore,System.String)">
            <summary>
            Construct a database configuration based on the encrypted serialized data.
            The data must have been created using the Serialize() method with the same
            LWKeystore as specified here.
            </summary>
            <param name="lwkeystore">a LWKeystore to be used for decryption</param>
            <param name="serializedDBConfig">encrypted serialized data</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.DBConfig.Serialize(Brierley.FrameWork.Common.Config.LWKeystore)">
            <summary>
            Serialize a database configuration.  This is used to store the configuration
            in a database.  The resulting data is encrypted using the specified LWKeystore.
            </summary>
            <param name="keystore">a LWKeystore to be used for encryption</param>
            <returns>encrypted serialized data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.DBConfig.GetEncodedPassword">
            <summary>
            Gets the encoded database password.
            </summary>
            <returns>encoded database password</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.DBConfig.GetEncodedPassword(System.String)">
            <summary>
            Gets the encoded database password
            </summary>
            <param name="connectionName">name of the connection</param>
            <returns>encoded database password for the named connection</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.DBConfig.SetPassword(System.String)">
            <summary>
            Sets the database password using the specified encoded value
            </summary>
            <param name="encodedPassword">encoded password</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.DBConfig.SetPassword(System.String,System.String)">
            <summary>
            Sets the database password for the named connection using the specified encoded value
            </summary>
            <param name="connectionName">name of the connection</param>
            <param name="encodedPassword">encoded password</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.DBConfig.GetEncodedConnectionString">
            <summary>
            Get the encoded connection string.
            </summary>
            <returns>encoded connection string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.DBConfig.GetEncodedConnectionString(System.String)">
            <summary>
            Get the encoded connection string for the named connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.DBConfig.GetConnectionProperties(System.String)">
            <summary>
            Get a dictionary containing the collection of database connection properties.
            </summary>
            <returns>dictionary of connection properties</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.DBConfig.HasCredentials">
            <summary>
            Delete the specified database connection property.
            </summary>
            <param name="propertyName">property name</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfiguration.#ctor(System.String,System.String)">
            <summary>
            Constructs a LWConfiguration based on config files on the disk
            </summary>
            <param name="orgName">organization name</param>
            <param name="envName">environment name</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfiguration.#ctor(System.String,System.String,Brierley.FrameWork.Common.Config.FWConfig,Brierley.FrameWork.Common.Config.LWKeystore,Brierley.FrameWork.Common.Config.DBConfig)">
            <summary>
            Constructs a LWConfiguration dynamically
            </summary>
            <param name="orgName">organization name</param>
            <param name="envName">environment name</param>
            <param name="fwconfig">framework configuration</param>
            <param name="lwkeystore">keystore</param>
            <param name="dbconfig">database configuration</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfiguration.GetEntityKey(System.String,System.String)">
            <summary>
            Gets a unique name for the given entity.  This is used by 
            LWConfigurationUtil as a key for its collection of LWConfigurations.
            </summary>
            <param name="orgName">organization name</param>
            <param name="envName">environment name</param>
            <returns>the unique key for the given entity</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfiguration.ContainsConfigName(System.String)">
            <summary>
            Does the framework configuration contain the specified config name?
            </summary>
            <param name="configName">config name</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfiguration.GetConfigValue(System.String)">
            <summary>
            Get the value associated with the specified framework config name.
            </summary>
            <param name="configName">config name</param>
            <returns>config value</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfiguration.SetConfigValue(System.String,System.String)">
            <summary>
            Set the specified value for the specified framework config name.
            </summary>
            <param name="configName">config name</param>
            <param name="configValue">config value</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfiguration.DeleteConfigValue(System.String)">
            <summary>
            Deletes the property for the specified framework config name.
            </summary>
            <param name="configName">config name</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfiguration.ToXML">
            <summary>
            Get the framework configuration as XML.
            </summary>
            <returns>XML</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfiguration.HasFWConfig">
            <summary>
            Is there a FWConfig object?
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfiguration.HasLWKeystore">
            <summary>
            Is there a LWKeystore object?
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfiguration.HasDBConfig">
            <summary>
            Is there a DBConfig object?
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.LWConfiguration.EntityKey">
            <summary>
            Gets a unique name for the entity represented by this LWConfiguration.  
            This is used by LWConfigurationUtil as a key for its collection of LWConfigurations.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.LWConfiguration.Organization">
            <summary>
            Get the organization name.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.LWConfiguration.Environment">
            <summary>
            Get the environment name.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.LWConfiguration.FWConfig">
            <summary>
            Get the FWConfig object.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.LWConfiguration.LWKeystore">
            <summary>
            Get the LWKeystore object.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.LWConfiguration.DBConfig">
            <summary>
            Get the DBConfig object.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.Config.LWConfigurationContext">
            <summary>
            This class contains the tuple that defines the environment, including Organization, Application and the Environment.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationContext.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="org"></param>
            <param name="env"></param>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.LWConfigurationContext.Organization">
            <summary>
            Organization.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.LWConfigurationContext.Environment">
            <summary>
            Environment.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.LWConfigurationUtil.IsQueueProcessor">
            <summary>
            gets or sets whether the current application is a queue processor.
            </summary>
            <remarks>
            When true, queue eligible items will not be queued (e.g., a triggered email will be fully sent, rather than sent to a message queue).
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationUtil.ConfigurationExistsInCache(System.String,System.String)">
            <summary>
            Determines whether the LWConfiguration for a particular entity (i.e., organization/environment tuple)
            exists in the cached set of configurations.
            </summary>
            <param name="orgName">the organization name</param>
            <param name="envName">the environment name</param>
            <returns>true if cached entity exists, false otherwise</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationUtil.UpdateCacheForCurrentConfiguration(Brierley.FrameWork.Common.Config.LWConfiguration)">
            <summary>
            Updates the cached config for the current environment.  Used by LN when 
            a framework property changes.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationUtil.RemoveConfigurationFromCache(System.String,System.String)">
            <summary>
            Removes the specified configuration from cache. Only used when deleting an organization or environment
            </summary>
            <param name="orgName">the organization name</param>
            <param name="envName">the environment name</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationUtil.GetConfiguration(System.String,System.String)">
            <summary>
            Gets a LWConfiguration for a particular entity (i.e., organization/environment tuple).
            The LWConfiguration encapsulates properties for an entity.
            </summary>
            <param name="orgName">the organization name</param>
            <param name="envName">the environment name</param>
            <returns>LWConfiguration</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationUtil.GetConfiguration(Brierley.FrameWork.Common.Config.LWConfigurationContext)">
            <summary>
            Gets a LWConfiguration for a particular LWConfigurationContext.
            </summary>
            <param name="ctx">the LWConfigurationContext</param>
            <returns>LWConfiguration</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationUtil.SetConfiguration(Brierley.FrameWork.Common.Config.LWConfiguration)">
            <summary>
            Sets a configuration using the given LWConfiguration
            </summary>
            <param name="config">the LWConfiguration</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationUtil.GetCurrentConfiguration">
            <summary>
            Gets the LWConfiguration for the current LWConfigurationContext.
            </summary>
            <returns>LWConfiguration or null if no current environment context is set</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationUtil.SetCurrentEnvironmentContext(System.String,System.String)">
            <summary>
            This method sets the organization and environment name for the thread of
            execution so that other functions can share that data without passing this through 
            function parameters.  If this is a web application, then this data is stored in
            the http context.  If this is not a web application, then this data is stored in 
            thread local storage.
            </summary>
            <param name="org">the organization name</param>
            <param name="env">the environment name</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationUtil.GetCurrentEnvironmentContext">
            <summary>
            Gets the current configuration context (i.e., organization/environment tuple).
            </summary>
            <returns>LWConfigurationContext</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationUtil.FreeCurrentEnvironmentContext">
            <summary>
            This method must be called by the non-web applications as part of the application cleanup.
            The best option is to call this method in the finally block of the main program.  There is 
            no harm in calling this method multiple times.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWConfigurationUtil.GetConfigurationValue(System.String)">
            <summary>
            This method first looks for the desired property name in the framework configuration.  If
            it finds the property, then that value is returned.  Otherwise, that property is looked
            up in the "appSettings" section of the application's configuration file and the value returned.
            </summary>
            <param name="propName">The property that needs to be looked up.</param>
            <returns>the value of the property is found.  Otherwise it is empty.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Config.LWKeystore.#ctor(System.String,System.String,System.String,System.String,System.Int64)">
            <summary>
            Adding a new constructor to be able to 
            </summary>
            <param name="encodedKeystorePass"></param>
            <param name="keystore"></param>
            <param name="symmetricIV"></param>
            <param name="SymmetricKeyStore"></param>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.LWKeystore.SymmetricIV">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Config.LWKeystore.SymmectricKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.ContentManagementUtils.GetValidWebAddres(System.String,System.String)">
            <summary>
            Checks that the source is a web address and prepends the alternateSource if the source isn't a complete address
            </summary>
            <param name="source">URL/file to be validated</param>
            <param name="alternateSource">Used as a prepended string if the source isn't a complete address</param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.Exceptions.CircularPathException">
            <summary>
            Indicates that a cirular path was found in the state diagram.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.CircularPathException.#ctor(System.String,System.Int64)">
            <summary>
            Constructor.
            </summary>
            <param name="message">a message</param>
            <param name="duplicateStateID">the unique identifier of the state involved in the circular path</param>
        </member>
        <member name="P:Brierley.FrameWork.Common.Exceptions.CircularPathException.DuplicateStateID">
            <summary>
            The unique identifier of the state involved in the circular path.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.Exceptions.CRMException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.CRMException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="Message"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.CRMException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="Message"></param>
            <param name="InnerException"></param>
        </member>
        <member name="T:Brierley.FrameWork.Common.Exceptions.DefaultExceptionHandler">
            <summary>
            Provides exception handling for the application as configured by the 
            policies defined in the Web.Config or App.Config.  This class should 
            not be called directly by an application, but rather the 
            <see cref="T:Brierley.Common.Exceptions.ExceptionManager"/>
            should be used.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.DefaultExceptionHandler.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="ignore"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.DefaultExceptionHandler.HandleException(System.Exception,System.Guid)">
            <summary>
            Handle an exception based on the defined policy
            </summary>
            <param name="ex"></param>
            <param name="correlationID"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.Exceptions.ExceptionManager">
            <summary>
            Provides policy based handling of exceptions and a uniform method 
            for user notification within ASP.NET web applications. 
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.ExceptionManager.HandleException(System.Exception)">
            <summary>
            Handle an exception.
            </summary>
            <param name="exception">The exception that is to be handled.</param>
            <returns>True if the exception should be rethrown.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.ExceptionManager.HandleException(System.Exception,System.Web.UI.WebControls.Label)">
            <summary>
            Handle an exception with hook for user notification.
            </summary>
            <param name="exception">The exception that is to be handled.</param>
            <param name="lblAlert">A <see cref="T:System.Web.UI.WebControls.Label"/> that will be 
            populated with JavaScript to handle user notification.</param>
            <returns>True if the exception should be rethrown.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.ExceptionManager.HandleException(System.Exception,System.String,System.Web.UI.WebControls.Label)">
            <summary>
            Handle an exception using the given exception policy name with hook for user notification.
            </summary>
            <param name="exception">The exception that is to be handled.</param>
            <param name="policyName">The name of an exception policy that should be applied for this 
            exception.  This should be defined in the Web.Config or App.Config.</param>
            <param name="lblAlert">A <see cref="T:System.Web.UI.WebControls.Label"/> that will be 
            populated with JavaScript to handle user notification.</param>
            <returns>True if the exception should be rethrown.</returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.Exceptions.LWException">
            <summary>
            A generic LoyaltyWare application exception.  It is better
            to define and/or use a more specific exception if possible.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.LWException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.LWException.#ctor(System.String)">
            <summary>
            Initializes with a specified error message.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.LWException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes with a specified error 
            message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.
            </param>
            <param name="exception">The exception that is the cause of the current exception. 
            If the innerException parameter is not a null reference, the current exception 
            is raised in a catch block that handles the inner exception.
            </param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Exceptions.LWException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.
            </param>
        </member>
        <member name="M:Brierley.FrameWork.Common.LanguageChannelUtil.GetGroupCulture(System.String)">
            <summary>
            This method would expect something like en-US and return en.
            </summary>
            <param name="langCultureCode"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.GenerateSalt">
            <summary>
            Generate salt to be used for password hashing.  Salt should be generated per-user 
            so that two different users with the same password will have different hashes.
            Salt should also be isolated from the hashed password so that it cannot be used
            to generate rainbow tables.  If the per-user salt changes, the password must be
            re-hashed.
            </summary>
            <returns>Base64 encoded salt bytes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.PasswordHash(System.String,System.String)">
            <summary>
            Hash a password.  The result is Base64 encoded and will always be 44 characters long.  
            Password validation should already have been applied.
            </summary>
            <param name="salt">salt created by GenerateSalt()</param>
            <param name="password">clear text password</param>
            <returns>Base64 encoded hash of the password</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.HashToBytes(System.Byte[])">
            <summary>
            Computes a SHA256 hash for the provided byte[] and returns hashed value as byte[].
            </summary>
            <param name="unhashedData">data to hash</param>
            <returns>hashed value as byte[]</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.HashToBytes(System.String)">
            <summary>
            Computes a SHA256 hash for the provided string and returns hashed value as byte[].
            </summary>
            <param name="unhashedValue">value to hash</param>
            <returns>hashed value as byte[]</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.HashToString(System.Byte[])">
            <summary>
            Computes a SHA256 hash for the provided byte[] and return string representation of the hashed value.
            </summary>
            <param name="unhashedData">data to hash</param>
            <returns>string representation of the hashed value</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.HashToString(System.String)">
            <summary>
            Computes a SHA256 hash for the provided string and return string representation of the hashed value.
            </summary>
            <param name="unhashedValue">value to hash</param>
            <returns>string representation of the hashed value</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.Encode(System.Byte[])">
            <summary>
            Encodes the provided byte array into a base64-encoded string.
            </summary>
            <param name="bytes">byte array to encode</param>
            <returns>base64-encoded string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.EncodeUTF8(System.String)">
            <summary>
            Encodes the provided string.  The string is first encoded into UTF8 bytes, 
            which are then encoded into a base64-encoded string.  
            </summary>
            <param name="data">string to encode</param>
            <returns>UTF8-encoded then base64-encoded string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.Decode(System.String)">
            <summary>
            Decodes the provided base64-encoded string into a byte array.
            </summary>
            <param name="data">base64-encoded string to decode</param>
            <returns>base64-decoded byte array</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.DecodeUTF8(System.String)">
            <summary>
            Decodes the provided base64-encoded string.  The base64-decoded bytes are 
            converted to a string using UTF8-decoding.
            </summary>
            <param name="data">base64-encoded string to decode</param>
            <returns>base64-decoded then UTF8-decoded string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.ValidateKeystore(System.String)">
            <summary>
            Validates the provided keystore with no password for the keystore.
            </summary>
            <param name="keystore">keystore</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.ValidateKeystore(System.String,System.String)">
            <summary>
            Validates the provided keystore.
            </summary>
            <param name="encodedKeystorePassword">base64-encoded keystore password</param>
            <param name="keystore">keystore</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.GenerateKey(System.String,System.Int64)">
            <summary>
            Generate a keypair to be used for public-key (aka. asymmetric) encryption.  The 
            resulting keypair is encrypted using the provided password, and returned as a 
            PKCS#8 PEM-formatted string.  The provided password must have been encoded using 
            the CryptoUtil.EncodeUTF8() method.
            </summary>
            <param name="encodedKeystorePassword">base64-encoded password used to encrypt the key</param>
            <returns>base64-encoded encrypted key</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.ReEncryptKey(System.String,System.String,System.String)">
            <summary>
            Re-encrypt an encrypted keypair.  The provided key is decrypted using the old
            password and encrypted using the new password.  The provided passwords must 
            have been encoded using the CryptoUtil.EncodeUTF8() method.  The provided key must
            have ben generated using the CryptoUtil.GenerateKey() method.
            </summary>
            <param name="encodedOldPassword">base64-encoded current key encryption password</param>
            <param name="encodedNewPassword">base64-encoded new key encryption password</param>
            <param name="key">base64-encoded encrypted key</param>
            <returns>base64-encoded re-encrypted key</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.EncryptAsymmetricUTF8(System.String)">
            <summary>
            Performs PKI-based encryption of the provided string encoded using UTF8.
            </summary>
            <param name="data">string to UTF8-encode then encrypt</param>
            <returns>base64-encoded encrypted data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.EncryptAsymmetricUTF8(Brierley.FrameWork.Common.Config.LWKeystore,System.String)">
            <summary>
            Performs PKI-based encryption of the provided string encoded using UTF8.
            </summary>
            <param name="lwkeystore">lwkeystore</param>
            <param name="data">string to UTF8-encode then encrypt</param>
            <returns>base64-encoded encrypted data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.EncryptAsymmetric(System.Byte[])">
            <summary>
            Performs PKI-based encryption of the provided byte array.
            </summary>
            <param name="unencryptedBytes">bytes to encrypt</param>
            <returns>base64-encoded encrypted data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.EncryptAsymmetric(Brierley.FrameWork.Common.Config.LWKeystore,System.Byte[])">
            <summary>
            Performs PKI-based encryption of the provided byte array.
            </summary>
            <param name="lwkeystore">lwkeystore</param>
            <param name="unencryptedBytes">bytes to encrypt</param>
            <returns>base64-encoded encrypted data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.DecryptAsymmetricUTF8(System.String)">
            <summary>
            Performs PKI-based decryption of the provided base64-encoded encrypted data which is a UTF8-encoded string.
            </summary>
            <param name="encryptedData">base64-encoded encrypted data which is a UTF8-encoded string</param>
            <returns>decrypted UTF8 string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.DecryptAsymmetricUTF8(Brierley.FrameWork.Common.Config.LWKeystore,System.String)">
            <summary>
            Performs PKI-based decryption of the provided base64-encoded encrypted data which is a UTF8-encoded string.
            </summary>
            <param name="lwkeystore">lwkeystore</param>
            <param name="encryptedData">base64-encoded encrypted data which is a UTF8-encoded string</param>
            <returns>decrypted UTF8 string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.DecryptAsymmetric(System.String)">
            <summary>
            Performs PKI-based decryption of the provided base64-encoded encrypted binary data.
            </summary>
            <param name="encryptedData">base64-encoded encrypted binary data</param>
            <returns>decrypted binary data as byte array</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.DecryptAsymmetric(Brierley.FrameWork.Common.Config.LWKeystore,System.String)">
            <summary>
            Performs PKI-based decryption of the provided base64-encoded encrypted binary data.
            </summary>
            <param name="lwkeystore">lwkeystore</param>
            <param name="encryptedData">base64-encoded encrypted binary data</param>
            <returns>decrypted binary data as byte array</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.Encrypt(Brierley.FrameWork.Common.Config.LWKeystore,System.String,System.String)">
            <summary>
            Symmetric encryption of the provided data using the provided LW keystore.  The data must be UTF8.
            
            Note, if the same initialization vector is used for the same data, the resulting encrypted data
            will be the same.  This is convenient for exact matching the encrypted data, but undermines the
            strength of the encryption.
            </summary>
            <param name="lwkeystore">keystore</param>
            <param name="data">data to encrypt</param>
            <param name="vector">initialization vector</param>
            <returns>encrypted data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.Encryptv2(Brierley.FrameWork.Common.Config.LWKeystore,System.String)">
            <summary>
            This updated version of the Symmetric encryption method uses key and IV values that are generated specifically
            for symmetric encryption and not hardcoded IV values and extractiving a piece of the original keystore.
            </summary>
            <param name="lwkeystore">Keystore object</param>
            <param name="data">Data to be encrypted</param>
            <returns>The encrypted value of the data that was passed in</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.Encrypt(System.String,System.String,System.String)">
            <summary>
            Symmetric encryption of the provided data using the provided key.  The key must have been 
            encoded using the CryptoUtil.EncodeUTF8() method.  The data must be UTF8.
            
            Note, if the same initialization vector is used for the same data, the resulting encrypted data
            will be the same.  This is convenient for exact matching the encrypted data, but undermines the
            strength of the encryption.
            </summary>
            <param name="encodedKey">base64-encoded key</param>
            <param name="data">data to be encrypted</param>
            <param name="vector">initialization vector</param>
            <returns>encrypted string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.Decrypt(Brierley.FrameWork.Common.Config.LWKeystore,System.String,System.String)">
            <summary>
            Symmetric decryption of the provided encrypted data using the provided LW keystore.
            
            Note, if the same initialization vector is used for the same data, the resulting encrypted data
            will be the same.  This is convenient for exact matching the encrypted data, but undermines the
            strength of the encryption.
            </summary>
            <param name="lwkeystore">keystore</param>
            <param name="data">encrypted data</param>
            <param name="vector">initialization vector</param>
            <returns>unencrypted data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.Decryptv2(Brierley.FrameWork.Common.Config.LWKeystore,System.String)">
            <summary>
            
            </summary>
            <param name="lwkeystore"></param>
            <param name="data"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.Decrypt(System.String,System.String,System.String)">
            <summary>
            Symmetric decryption of the provided data using the provided key.  The key must have been 
            encoded using the CryptoUtil.EncodeUTF8() method.
            
            Note, if the same initialization vector is used for the same data, the resulting encrypted data
            will be the same.  This is convenient for exact matching the encrypted data, but undermines the
            strength of the encryption.
            </summary>
            <param name="encodedKey">base64-encoded key</param>
            <param name="data">data to be decrypted</param>
            <param name="vector">initialization vector</param>
            <returns>decrypted UTF8 string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.DecryptMTouch(System.String)">
            <summary>
            Decrypt an MTouch that has been encrypted with CryptoUtil.EncryptMTouch().
            </summary>
            <param name="mtouch">encrypted MTouch</param>
            <returns>decrypted MTouch, or null if encrypted MTouch is invalid</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.EncryptMTouch(System.String)">
            <summary>
            Encrypt an MTouch.
            </summary>
            <param name="mtouch">MTouch to encrypt</param>
            <returns>encrypted MTouch</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.EncryptDecryptWebService(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="methodType"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.ValidatePGPPrivateKeyFile(System.Byte[])">
            <summary>
            Used by LoyaltyNavigator to validate uploaded PGP private key files.
            </summary>
            <param name="privateKeyBytes"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.ValidatePGPPublicKeyFile(System.Byte[])">
            <summary>
            Used by LoyaltyNavigator to validate uploaded PGP public key files.
            </summary>
            <param name="publicKeyBytes"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.PGPEncrypt(System.String,System.Byte[])">
            <summary>
            PGP encryption of provided clearData.  Requires PGP properties to be configured for the client.
            </summary>
            <param name="keyName">pgp encryption key name</param>
            <param name="clearData">data to be encrypted</param>
            <returns>encrypted data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.PGPEncrypt(System.String,System.String)">
            <summary>
            PGP file encryption. Requires PGP properties to be configured for the client.
            </summary>
            <param name="keyName">pgp encryption key name</param>
            <param name="fileName">full path to the file to be encrypted</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.PGPDecrypt(System.String,System.Byte[],System.String)">
            <summary>
            Decrypt PGP message.  Requires PGP properties to be configured for the client.
            </summary>
            <param name="encryptedData">data to be decrypted</param>
            <param name="privateKeyPassword">password for the configured PGP private key</param>
            <returns>decrypted data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.GetPGPEncryptionKeyNames">
            <summary>
            Get a list of the names of the PGP encryption keys.
            </summary>
            <returns>list of key names</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.CryptoUtil.GetPGPDecryptionKeyNames">
            <summary>
            Get a list of the names of the PGP decryption keys.
            </summary>
            <returns>list of key names</returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.DateTimeUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.GetDateOnly(System.DateTime)">
            <summary>
            
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.Equal(System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="date1"></param>
            <param name="date2"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.GreaterEqual(System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="date1"></param>
            <param name="date2"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.GreaterThan(System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="date1"></param>
            <param name="date2"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.LessEqual(System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="date1"></param>
            <param name="date2"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.LessThan(System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="date1"></param>
            <param name="date2"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.IsDateInBetween(System.DateTime,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            
            </summary>
            <param name="date"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="isInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.ConvertStringToDate(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="dateStr"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.ConvertDateToString(System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.ConvertDateToISO8601String(System.DateTime,System.Boolean)">
            <summary>
            Convert a DateTime into an ISO 8601 format string.  ISO 8601 is the standard format used in XML for xs:dateTime.
            </summary>
            <param name="dateTime">a DateTime object</param>
            <param name="ignoreTimezone">whether to omit the time zone offset from the result</param>
            <returns>ISO8601 format string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.ConvertISO8601StringToDate(System.String,System.Boolean)">
            <summary>
            Converts an ISO 8601 format string into a DateTime.  ISO 8601 is the standard format used in XML for xs:dateTime.
            </summary>
            <param name="dateStr">ISO 8601 format data string, e.g. "2001-09-11T08:46:00.000-04:00"</param>
            <param name="ignoreTimezone">whether to omit the time zone when converting to a DateTime</param>
            <returns>DateTime corresponding to the dateStr</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.DateTimeUtil.StripISO8601TimeZoneOffset(System.String)">
            <summary>
            Strips off the time zone offset component (if any) from an ISO8601 format date string
            </summary>
            <param name="dateStr">ISO 8601 format data string, e.g. "2001-09-11T08:46:00.000-04:00"</param>
            <returns>ISO 8601 format data string without time zone offset, e.g. "2001-09-11T08:46:00.000"</returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.PromotionEnrollmentSupportType">
            <summary>
            The type of enrollment supported by a particular promotion.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.LoginStatusEnum.Failure">
            <summary>
            login failed due to a invalid username/password
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.VirtualCardSearchType.PrimaryCard">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.VirtualCardSearchType.MostRecentRegistered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.VirtualCardSearchType.MostRecentIssued">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.VirtualCardSearchType.EarliestRegistered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.VirtualCardSearchType.EarliestIssued">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.PointBankTransactionType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointBankTransactionType.Credit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointBankTransactionType.Debit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointBankTransactionType.Hold">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointBankTransactionType.Consumed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointBankTransactionType.Transferred">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointBankTransactionType.Expired">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointTransactionOwnerType.AttributeSet">
            <summary>
            The point transaction was created as a result of an attribute set based event
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointTransactionOwnerType.Store">
            <summary>
            The point transaction was created as a result of a member checking in a store
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointTransactionOwnerType.Bid">
            <summary>
            The point transaction was created as a result of a member bidding for an auction item
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointTransactionOwnerType.Bonus">
            <summary>
            The point transaction was created as a result of a member performing an action for a bonus
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointTransactionOwnerType.Survey">
            <summary>
            The point transaction was created as a result of a member taking a survey
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointTransactionOwnerType.Reward">
            <summary>
            When points are consumed for a reward
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointTransactionOwnerType.Coupon">
            <summary>
            Nothing to do with point transactions but used to track rule actions
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointTransactionOwnerType.Message">
            <summary>
            Nothing to do with point transactions but used to track rule actions
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointTransactionOwnerType.Promotion">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointTransactionOwnerType.Social">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.PointExpirationReason">
            <summary>
            This enumeration is used to record the reson for expiration of a point transaction.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationReason.Normal">
            <summary>
            Normal expiration of this transaction
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationReason.Cancellation">
            <summary>
            Transaction was expired pre-muturely due to card/member cancellation
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationReason.Termination">
            <summary>
            Transaction was expired pre-muturely due to member termination
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationReason.Replacement">
            <summary>
            Transaction was expired pre-muturely due to card replacement
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationReason.MemberMerge">
            <summary>
            Transaction was expired pre-muturely due to member merge
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.PointBalanceType">
            <summary>
            This enumeration is used by the methods to retrieve members based on a particular balance type
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointBalanceType.PointBalance">
            <summary>
            This is the current point balance
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointBalanceType.EarnedBalance">
            <summary>
            This is the earned balance
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointBalanceType.PointsOnHold">
            <summary>
            Points on hold
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.RuleTriggerIssueType">
            <summary>
            Lists items that can be "issued" during rule execution
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.PointBatchingMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointBatchingMode.Batched">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointBatchingMode.PerRecord">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.PointAwardMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointAwardMethod.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointAwardMethod.UseChild">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.PointExpirationLogic">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationLogic.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationLogic.EndOfQtr">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationLogic.EndOfNextQtr">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationLogic.EndOfMonth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationLogic.EndOfNextMonth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationLogic.EndOfYear">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointExpirationLogic.Days">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.TierPointActivityMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.TierPointActivityMethod.CalendarYear">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.TierPointActivityMethod.Quarter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.TierPointActivityMethod.SpecifiedUnit">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.PeriodUnit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PeriodUnit.Day">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PeriodUnit.Month">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PeriodUnit.Year">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.VirtualCardLocation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.VirtualCardLocation.UseExpression">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.VirtualCardLocation.FirstCardInList">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.VirtualCardLocation.PrimaryCard">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.VirtualCardLocation.AllCards">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.RuleInvocationType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RuleInvocationType.BeforeInsert">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RuleInvocationType.AfterInsert">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RuleInvocationType.BeforeUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RuleInvocationType.AfterUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RuleInvocationType.BeforeDelete">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RuleInvocationType.AfterDelete">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RuleInvocationType.Manual">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.IssueRewardType">
            <summary>
            The type of rewawrd being issued.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.IssueRewardType.Earned">
            <summary>
            This reward is earned
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.IssueRewardType.Entitlement">
            <summary>
            This is given away
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.PointsConsumptionOnIssueReward">
            <summary>
            This enumeration provides the directive for what should be done to points after
            issuign an earned reward.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointsConsumptionOnIssueReward.NoAction">
            <summary>
            Do nothing
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointsConsumptionOnIssueReward.Consume">
            <summary>
            Consume the points after issueing the reward
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.PointsConsumptionOnIssueReward.Hold">
            <summary>
            Put the points on hold after issueing the reward
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.DataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.DataType.Integer">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.DataType.Number">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.DataType.String">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.DataType.Date">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.DataType.Decimal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.DataType.Long">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.DataType.Money">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.DataType.Boolean">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.SupportedDateFormats">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.SupportedDateFormats.d">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.SupportedDateFormats.f">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.SupportedDateFormats.g">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.SupportedDateFormats.G">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.LogLevel.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.LogLevel.Debug">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.LogLevel.Event">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.LogLevel.Exception">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.LogLevel.Information">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.LogLevel.Performance">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.LogLevel.RuleProcessingError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.LogLevel.FileProcessingError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.TemplateType.Webpage">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.TemplateType.Email">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.ContentElementType.Text">
            <summary>
            represents a block of text
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.ContentElementType.TextHtml">
            <summary>
            represents a block of text/html. 
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.ContentElementType.Template">
            <summary>
            The master template for the element/area
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.ContentElementType.bScript">
            <summary>
            bScript expressions placed in the element/area
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.ContentElementType.Field">
            <summary>
            Email field
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.DocumentType.HTMLDocument">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.DocumentType.EmailDocument">
            <summary>
            
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.SurveyType.General">
            <summary>
            General survey
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.SurveyType.Profile">
            <summary>
            Profile survey
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.SurveyAudience.PreSelected">
            <summary>
            Respondents are pre-selected
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.SurveyAudience.OpenToAnyMember">
            <summary>
            Any member can take
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.SurveyAudience.OpenToEveryone">
            <summary>
            Everyone can take
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.StateType">
            <summary>
            The type of state in a state diagram.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.TransitionCollectionType">
            <summary>
            The type of a TransitionCollection.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.QA_PointScale">
            <summary>
            The number of points in a point scale matrix question
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.QA_AnswerControlType">
            <summary>
            The type of control used to render an answer in a questionnaire.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.QA_OrientationType">
            <summary>
            The orientation of a question or answer in a questionnaire.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.QuestionContentType">
            <summary>
            The type of content stored in a QuestionContent object.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.ProcessCode">
            <summary>
            Enum ProcessCode, for Processed transaction
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.TransactionType">
            <summary>
            Enum TransactionType
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.MemberBonusStatus.Issued">
            <summary>
            Expired or not; Not viewed/watched; Survey not taken;
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.MemberBonusStatus.Viewed">
            <summary>
            Expired or not; HtmlOffer viewed, or VideoOffer watched; Survey not taken;
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.MemberBonusStatus.Completed">
            <summary>
            Expired or not; HtmlOffer viewed, or VideoOffer watched; Survey taken;
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.MemberBonusStatus.Saved">
            <summary>
            Expired or not; Not Viewed/watched; Not 'Completed'; Was marked as Save For Later;
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.ApplicationType">
            <summary>
            CS: CS Portal;
            CF: Customer Facing web site;
            LN: Loyalty Navigator;
            DA: DAP;
            AP: API;
            RU: Rule Processor;
            OT: Other
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.DataChangeType">
            <summary>
            U: Update;
            I: Insert;
            D: Delete
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.UserIdentityType">
            <summary>
            The value type stored in authenticated user's Identity.Name field. 
            This only applies to web applications (CS portal, CF site and Loyalty Navigator).
              Ipcode: what we normally use for CF portal;
              AgentUserName: what we normally use for CS portal;
              UserName: what we use for Loyalty Navigator
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RestResourceType.RestRoute">
            <summary>
            A REST API Route
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RestPermissionType.Create">
            <summary>
            Create Permission
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RestPermissionType.Read">
            <summary>
            Read Permission
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RestPermissionType.Update">
            <summary>
            Update Permission
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RestPermissionType.Delete">
            <summary>
            Delete Permission
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RestPermissionType.Write">
            <summary>
            Write Permission
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.RestPermissionType.Full">
            <summary>
            Full Permissions
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Extensions.XmlExtensions.GetNodeValueByPath(System.Xml.Linq.XElement,System.String)">
            <summary>
            The node path is of the form Member/IpCode or Member/VirtualCard/LoyaltyIdNumber.
            The last component of the path can either be an attribuute or an element.
            </summary>
            <param name="node"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Extensions.XmlExtensions.GetNodesByPath(System.Xml.Linq.XElement,System.String)">
            <summary>
            This method returns the list of nodes that match that path.  The first element in the path is expected
            to also be the root node of the element.  The last element
            in the path represents the XElement node that will be returned.
            e.g. For an xml node that starts with Member, the path will look like 
            Member/VirtualCard/TxnHeader/TxnDetailLineItem. 
            </summary>
            <param name="node"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.GeoLocationUtils.GeoDistanceKM(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Provide the distance in kilometers between locations A and B.  
            Locations are specified using degrees latitude and logitude.
            </summary>
            <param name="latitudeA">latitude of location A in degrees</param>
            <param name="longitudeA">longitude of location A in degrees</param>
            <param name="latitudeB">latitude of location B in degrees</param>
            <param name="longitudeB">longitude of location B in degrees</param>
            <returns>distance in kilometers</returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.IO.IOUtils">
            <summary>
            Summary description for IOUtils.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.IO.IOUtils.GetTempDirectory">
            <summary>
            This method either gets the temporary directory pointed to by LWTempPath in the
            application configuration file, or if not defined then gets the system temporary path
            for the user.
            </summary>
            <returns>Th etemporary path.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.IO.IOUtils.GetTempDirectoryWithPid">
            <summary>
            This method either gets the temporary directory pointed to by LWTempPath in the
            application configuration file, or if not defined then gets the system temporary path
            for the user.
            </summary>
            <returns>The temporary path.</returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.LWPasswordUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.LWPasswordUtil.ValidatePassword(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="identity"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.LWPasswordUtil.HashPassword(System.String,System.String)">
            <summary>
            Perform a one-way hash of a cleartext password and return the Base64 encoded value of the hash.  
            The password should have been validated using ValidatePassword() before calling HashPassword().
            The password is combined with the provided salt before the hash.  The salt should be per-user and
            kept isolated from the hashed password.  The salt should be created using CryptoUtil.GenerateSalt().
            When hashing a password on login to compare with the existing password, the same salt should be used.
            If the per-user salt is changed, the user's password should be rehashed.
            
            Hashing can be disabled by setting the framework configuration value 'DisablePasswordHashing' to 'true'.
            </summary>
            <param name="salt">per-user salt created using CryptoUtil.GenerateSalt()</param>
            <param name="password">clear text password</param>
            <returns>Base64 encoded hash of the salted password</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.PhoneUtil.MaskPhoneNumber(System.String,System.String)">
            <summary>
            Masks a phone number using the provided format.
            </summary>
            <param name="phone">The phone number to mask. All formats allowed - it will be converted to raw before masking</param>
            <param name="mask">The mask to apply</param>
            <exception cref="T:System.ArgumentNullException">thrown if mask is null or empty</exception>
            <exception cref="T:System.ArgumentException">thrown if mask does not contain at least one "#"</exception>
            <returns></returns>
            <example>
            MaskPhoneNumber("214-555-1234", "(###) ###-####")
            MaskPhoneNumber("214.123.4567", "###-###-####")
            </example>
        </member>
        <member name="M:Brierley.FrameWork.Common.PhoneUtil.ToRawPhoneNumber(System.String,System.Boolean)">
            <summary>
            Converts the specified phone number into its raw format, removing all non-numeric characters.
            </summary>
            <param name="phone">The phone number to convert</param>
            <param name="convertLetters">
            When true, converts any letters in the phone number to their numeric mapping. 
            When false, any letters that appear in the phone number are removed.
            </param>
            <exception cref="T:System.ArgumentNullException">thrown if phone is null</exception>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.ProgramOptions">
            <summary>
            This class can be used to parse the arguments for a program.  It supports the folloging style:
            program -arg1 value1 -arg2 -arg3 -arg4 value4
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.ProgramOptions.#ctor(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.ProgramOptions.GetOption(System.String)">
            <summary>
            
            </summary>
            <param name="optionName"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.ProgramOptions.ContainsOption(System.String)">
            <summary>
            
            </summary>
            <param name="optionName"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.ResourceUtils.GetGlobalWebResource(System.String,System.String)">
            <summary>
            Gets a string from a global web resource file.  For example, to get a resource string with 
            key MyResource from the global resource file ~/App_GlobalResources/LocalizedText.resx, call 
            ResourceUtils.GetGlobalWebResource("LocalizedText", "MyResource");
            </summary>
            <param name="classKey">the name of the resource file in App_GlobalResources</param>
            <param name="resourceKey">the name of the resource in the resource file</param>
            <returns>the value of the resource as a string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.ResourceUtils.GetLocalWebResource(System.String,System.String)">
            <summary>
            Gets a string from a local web resource file.  For example, to get a resource for a page level
            resource named MyResource from the local resource file ~/App_LocalResources/MyPage.aspx.resx, call
            ResourceUtils.GetLocalWebResource("~/MyPage.aspx", "MyResource");  This only works for pages (*.aspx) 
            and user controls (*.ascx) on the website.  This method will not work in a DNN portal, so use
            Localization.GetString("mycontrol.Text", LocalResourceFile) instead.
            </summary>
            <param name="virtualPath">the virtual path on the web site to the page or control</param>
            <param name="resourceKey">the name of the resource in the resource file</param>
            <returns>the value of the resource as a string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.ResourceUtils.GetLocalWebResource(System.String,System.String,System.String)">
            <summary>
            Gets a string from a local web resource file.  For example, to get a resource for a page level
            resource named MyResource from the local resource file ~/App_LocalResources/MyPage.aspx.resx, call
            ResourceUtils.GetLocalWebResource("~/MyPage.aspx", "MyResource");  This only works for pages (*.aspx) 
            and user controls (*.ascx) on the website.  This method will not work in a DNN portal, so use
            Localization.GetString("mycontrol.Text", LocalResourceFile) instead.
            </summary>
            <param name="virtualPath">the virtual path on the web site to the page or control</param>
            <param name="resourceKey">the name of the resource in the resource file</param>
            <param name="defaultValue">the default value that should be returned if no value is found</param>
            <returns>the value of the resource as a string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.ResourceUtils.GetResourceManager(System.String,System.Reflection.Assembly)">
            <summary>
            Gets a resource manager for a resource embedded in a particular assembly.
            </summary>
            <param name="resourceName">Name of the resource in the assembly</param>
            <param name="assembly">an assembly</param>
            <returns>the resource manager</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.ResourceUtils.GetResourceManagerFromFile(System.String,System.String)">
            <summary>
            Get a resource manager for a resource file.
            </summary>
            <param name="resourceFilePath">path to the resource file</param>
            <param name="resourceName">resource file name</param>
            <returns>the resource manager</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.ResourceUtils.LoadResourceClientScript(System.String,System.Web.UI.ClientScriptManager,System.Type,System.String,System.Boolean)">
            <summary>
            Loads the specified manifest resource as a client script block if it is not already loaded.
            </summary>
            <param name="name">name of the manifest resource</param>
            <param name="clientScriptManager">the page's client script manager</param>
            <param name="type">the type to associate with the script</param>
            <param name="key">the key to identify the script</param>
            <param name="addScriptTags">whether the script block should be wrapped with "<script></script>" tags</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.ResourceUtils.GetManifestResourceString(System.String)">
            <summary>
            Loads the specified manifest resource from the calling assembly as a string.
            </summary>
            <param name="name">name of the manifest resource</param>
            <returns>value of the resource as a string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.ResourceUtils.GetManifestResourceString(System.String,System.Reflection.Assembly)">
            <summary>
            Loads the specified manifest resource from the specified assembly as a string.
            </summary>
            <param name="name">name of the manifest resource</param>
            <param name="assembly">assembly from which to load the resource</param>
            <returns>value of the resource as a string</returns>
        </member>
        <member name="P:Brierley.FrameWork.Common.Security.Sftp.Hostname">
            <summary>
            The name or IP address of the remote sftp host
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Security.Sftp.Portnumber">
            <summary>
            The sftp port number on the remote sftp host
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Security.Sftp.PrivateKey">
            <summary>
            The private key as returned from Brierley.FrameWork.Common.Security.KeyManager.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Security.Sftp.RemotePath">
            <summary>
            Path name on the remote SFTP server.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Security.Sftp.Blocking">
            <summary>
            Currently not used.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Security.Sftp.Timeout">
            <summary>
            Timeout value for connection.  Set to 0 for infinite timeout.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Security.Sftp.Connect">
            <summary>
            Connect to remote SFTP server
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Security.Sftp.ListNames">
            <summary>
            Get a list of the file names for the current remote directory.
            </summary>
            <returns>list of file names</returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Security.Sftp.GetFile(System.IO.Stream,System.String)">
            <summary>
            Stream get remote file.
            </summary>
            <param name="toStream">stream to which the file is written</param>
            <param name="remoteFile">remote file to get</param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Security.Sftp.GetFile(System.IO.Stream)">
            <summary>
            Stream get current RemotePath file.
            </summary>
            <param name="toStream"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Security.Sftp.PutFile(System.IO.Stream)">
            <summary>
            Stream put current RemotePath file.
            </summary>
            <param name="fromStream"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Security.Sftp.DeleteFile(System.String)">
            <summary>
            Delete the specified remote file.
            </summary>
            <param name="remotePath"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Security.Sftp.DeleteFile">
            <summary>
            Delete the file represented by the current RemotePath.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Security.Sftp.MakeDir(System.String)">
            <summary>
            Create a directory on the remote SFTP server.
            </summary>
            <param name="remotePath"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Security.Sftp.SetAttributes(System.Int64)">
            <summary>
            Set the file or directory permissions on the current RemotePath.
            </summary>
            <param name="permissions"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Security.Sftp.Disconnect">
            <summary>
            Disconnect from the remote SFTP server.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.StringUtils.LowercaseDBColumn(Brierley.FrameWork.Common.SupportedDataSourceType)">
            <summary>
            Returns true if this database type requires lowercase column names
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.Threading.LWSyncQueue">
            <summary>
            This class provides a synchronized Queue.  It is most useful to pass data back between 2 threads in a 
            synchronized manner.  The Queue implements a FIFO strategy.  Messages are retrieved the order in which 
            they are put.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWSyncQueue.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Threading.LWSyncQueue.Size">
            <summary>
            Returns the number of messages waiting in the Queue to be retrieved.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWSyncQueue.RemoveMessage">
            <summary>
            This method removes a message from the Queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWSyncQueue.Add(System.Object)">
            <summary>
            This method adds a new message and if any other threads are waiting for messages to arrive,
            then they are woken up.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWSyncQueue.Remove(System.Int32)">
            <summary>
            This method removes a msg object from the message queue.  In case the Queue is empty, a timeout 
            parameter specifies whether the call should block for a message to arrive or not.
            </summary>
            <param name="timeout">A timeout value when the message queue is emty</param>
            <returns>the message</returns>
            <remarks>
            The timeout value specifies what to do when there are no messages in the queue.  
            timeout = 0 - Return immediately if the queue is empty..
            timeout = -1 - Block until a message arrives in the queue.
            timout  = value in milliseconds.  The call will block for that much time.
            
            When a message arrives, and there are multiple threads blockign on this queue, a race
            condition is caused.  All the blockign threads are woken up and they rush to get the
            new message.  One of them gets it and the others go back to waiting or returning.  It is not
            gauranteed that the first thread to start waiting will be the one that gets the message.
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.Common.Threading.LWThread">
            <summary>
            This is a wrapper around system thread.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Common.Threading.LWThread.keepRunning">
            <summary>
            This flag determines if the thread needs to shut down or not.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Threading.LWThread.RequestQueue">
            <summary>
            This property provides back the Request Q for this thread.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Common.Threading.LWThread.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.Start">
            <summary>
            This method starts the work for the thread.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.ShutDown">
            <summary>
            This method instructs the thread to shut down.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.IsAlive">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.WaitToFinish">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.AddProperty(System.String,System.String)">
            <summary>
            Add a property.  If the property already exists then changes its existign value.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.Query(System.String,System.String)">
            <summary>
            Checks to see if the named property has this value.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.ClearProperties">
            <summary>
            Clears all property values.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.ProcessRequest(System.Object)">
            <summary>
            Abstract function that is provided by the derived class.  This function does the actual work.
            </summary>
            <param name="workItem"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.Cleanup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.TimerCallBackFunction(System.Object)">
            <summary>
            
            </summary>
            <param name="stateInfo"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThread.ChildDispose">
            <summary>
            Derived classes should override this method to do their cleanup.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Common.Threading.ILWThreadPoolFactory">
            <summary>
            This is the interface for creating application specific thread objects for the thread pool.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.ILWThreadPoolFactory.CreateThread(System.String)">
            <summary>
            Create a nemd thread object.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.Threading.LWThreadPoolManager">
            <summary>
            This is the thread pool manager.  An instance of the thread pool contains threads of the 
            same type.  These threads can be searched and queried.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThreadPoolManager.#ctor(System.Int32,System.Int32,System.Int32,Brierley.FrameWork.Common.Threading.ILWThreadPoolFactory)">
            <summary>
            
            </summary>
            <param name="nthreads"></param>
            <param name="requestThreshold"></param>
            <param name="sleepInterval"></param>
            <param name="factory"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThreadPoolManager.GetThreadFromPool">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThreadPoolManager.GetThreadFromPool(System.Int32)">
            <summary>
            This method first looks for a free thread.  If it does not find a free thread then
            it looks for the least busy thread that is still below the request threshold.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThreadPoolManager.GetThreadFromPool(System.Int32,System.String,System.String)">
            <summary>
            This method first looks for threads that have the same property as the provided values.
            If it finds one, then it schedules the work for it.  if not, then it looks for a free
            thread and schedules that thread.  Otherwise it just finds a least busy.
            </summary>
            <param name="retries"></param>
            <param name="propName"></param>
            <param name="propValue"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThreadPoolManager.QueueRequestToThread(System.Int32,System.Object)">
            <summary>
            This method will pick a thread from the available pool and queue the request to it.
            </summary>
            <param name="retries"></param>
            <param name="request"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThreadPoolManager.QueueRequestToThread(System.Int32,System.String,System.String,System.Object)">
            <summary>
            This method queries all the busy threads first and tries to find one that matches the query
            parameters.  If it does then the request is queued to it.  
            If not then it picks one from the available pool, sets it property and queues work to it.
            </summary>
            <param name="retries"></param>
            <param name="propName"></param>
            <param name="propValue"></param>
            <param name="request"></param>
        </member>
        <member name="M:Brierley.FrameWork.Common.Threading.LWThreadPoolManager.ShutDown(System.Boolean)">
            <summary>
            Shuts down all threads.
            </summary>
            <param name="wait">If true then waits for all threads to finish before returning.</param>
        </member>
        <member name="T:Brierley.FrameWork.Common.XML.RuleInstanceSerializationUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Common.XML.RuleInstanceSerializationUtil.GetConfigurableMembers(System.Object)">
            <summary>
            
            </summary>
            <param name="sobj"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.XML.RuleInstanceSerializationUtil.SerializeRuleInstance(System.Object,System.String)">
            <summary>
            This method will perform shallow serialization of an object to xml.
            </summary>
            <param name="sobj"></param>
            <param name="fwkVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Common.XML.RuleInstanceSerializationUtil.DeSerializeRuleInstance(System.String)">
            <summary>
            
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Common.XML.SurveyXML">
            <summary>
            Utility methods for the survey runner for getting survey components as XML 
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DataAccess.ActiveCouponOptions">
            <summary>
            Used to relay rules to the coupon DAO classes for determining whether or not a coupon is considered active.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.LocationGroupDao.Retrieve(System.Int64)">
            <summary>
            Retrives the specified locatin group by its id
            </summary>
            <param name="id">unique identifier of the location group</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.LocationGroupDao.Retrieve(System.String)">
            <summary>
            Retrives a specific location group by it's name, we are assuming that name will be unique
            </summary>
            <param name="name">The name of the location group</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.LocationGroupDao.Retrieve">
            <summary>
            Retrives all location groups
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.LocationGroupDao.Retrieve(System.Int64,System.Int64,System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrives a paged list of location groups
            </summary>
            <param name="pageNumber">page number</param>
            <param name="resultsPerPage">number or results per page</param>
            <param name="orderBy">results will be sorted on this column/property</param>
            <param name="ascending">sort direction</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.LocationGroupDao.RetrieveChangedObjects(System.DateTime)">
            <summary>
            Retrives all location groups updated since the specified date, this will primarily be used for migration.
            </summary>
            <param name="since">Watermark used to look at records updated after the datetime provided</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.LocationGroupDao.Delete(System.Int64)">
            <summary>
            Deletes the specified location group.
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DataAccess.RestConsumerGroupDao">
            <summary>
            DAO class for RestConsumerGroup, for exposing inherited Create, Update, Delete.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DataAccess.RestConsumerRoleDao">
            <summary>
            DAO class for RestConsumerRole, for exposing inherited Create, Update, Delete.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.RestDaoBase`1.Delete(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            Delete for XRef tables
            </summary>
            <param name="column1Name">XRef column 1 name</param>
            <param name="column2Name">XRef column 2 name</param>
            <param name="column1Val">XRef column 1 value</param>
            <param name="column2Val">XRef column 2 value</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.RestDaoBase`1.SoftDelete(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            SoftDelete for XRef tables
            </summary>
            <param name="column1Name">XRef column 1 name</param>
            <param name="column2Name">XRef column 2 name</param>
            <param name="column1Val">XRef column 1 value</param>
            <param name="column2Val">XRef column 2 value</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.RestDaoBase`1.Undelete(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            Undelete for XRef tables
            </summary>
            <param name="column1Name">XRef column 1 name</param>
            <param name="column2Name">XRef column 2 name</param>
            <param name="column1Val">XRef column 1 value</param>
            <param name="column2Val">XRef column 2 value</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DataAccess.RestGroupRoleDao">
            <summary>
            DAO class for RestGroupRoleDao, for exposing inherited Create, Update, Delete.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DataAccess.RestRoleResourceDao">
            <summary>
            DAO class for RestRoleResource, for exposing inherited Create, Update, Delete.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.AttributeSetMetaDataDao.RetrieveTopLevel">
            <summary>
            This method will retrieve all top level attributes (Member, Virtualcard and Global attributes).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.AttributeSetMetaDataDao.RetrieveTopLevel(Brierley.FrameWork.Common.AttributeSetType)">
            <summary>
            Depending on the provided type, this method will either retrieve only Member or Virtualcard or
            Global attributes.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.BonusDao.CheckAndUpdateQuotaCount(System.Int64,System.Int64)">
            <summary>
            This method retrieves the bonus, check its quote count to make sure that it has not been met 
            yet and then updates the completed count.
            </summary>
            <param name="completed"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.ContentDefDaoBase`1.GetContentIds(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            TODO: This method might give a set that is larger than the desired result.  If you have attributes that 
            have same values and are included in the comparison, the result might require further reduction.
            Also, this would not allow OR condition between the attributes.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parms"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.CouponDao.GetContent(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Object},Brierley.FrameWork.Data.DataAccess.ActiveCouponOptions,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            fetches the specified page or all if no page is specified
            </summary>
            <param name="parms"></param>
            <param name="flags"></param>
            <param name="options"></param>
            <param name="populateAttributes"></param>
            <param name="pageNumber"></param>
            <param name="resultsPerPage"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.DaoBase`1.RetrieveByArray``1(System.String,``0[])">
            <summary>
            Batches long id arrays into chunks of 1000
            </summary>
            <typeparam name="U">The type of the id array</typeparam>
            <param name="sql">The query to execute with the id array as "@0"</param>
            <param name="refIds">The array of identifiers to batch</param>
            <returns>A list of 0+ items of the caller's expected type</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.DaoBase`1.ExecuteScalar``1(System.String,System.Object[])">
            <summary>
            Executes a query and return the first column of the first row in the result set.
            </summary>
            <remarks>
            Slightly safer than the underlying PetaPoco method, this method will convert DBNull (or a lack or result) into the default value for 
            the generic type. Use this veriosn of ExecuteScalar when the query might return null or no results and the generic type cannot be 
            cast from DBNull.Value (int, long, double, etc.).
            </remarks>
            <typeparam name="X"></typeparam>
            <param name="sql"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="P:Brierley.FrameWork.Data.DataAccess.DaoBase`1.ApplicationType">
            <summary>
            CS: CS Portal, CF: CF web site, LN: Loyalty Navigator, AP: API,
            DA: DAP, RU: Rule Processor, OT: Others
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DataAccess.DaoBase`1.OwnerID">
            <summary>
            Record owner's unique identifier.
              OwnerType = "C": CS portal user, the id is CS agent's ID (not username);
              OwnerType = "F": CF web site, the id is loyalty member ID (ipcode);
              OwnerType = "L": Loyalty Navigator, the id is LN user ID;
              OwnerType = "A": Standard API, the id is "API";
              OwnerType = "D": DAP processor, the id is "DAP";
              OwnerType = "R": Rule Processor, the id is "RuleProcessor";
              OwnerType = "O" or other unknown type: the id is "(Unknown)";        
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DataAccess.DaoBase`1.HostName">
            <summary>
            Host Name can be set in web.config or app.config file. If not set, local machine name will 
            be used.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DataAccess.DaoBase`1.AuthIdentityType">
            <summary>
            The value type stored in authenticated user's Identity.Name field. Used only by 
            web applications (CS portal, CF site and Loyalty Navigator).
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.DaoBase`1.GetCSPortalAgentUserName">
            <summary>
            Get CS Portal's current logged in user's username.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.DaoBase`1.GetLoyaltyMemberIpcode">
            <summary>
            Get loyalty member's ipcode. Called when application type is CF web site.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.DaoBase`1.GetLoyaltyNavigatorUserName">
            <summary>
            Get Loyalty Navigator's user name. Called when application type is L (LN). For
            Loyalty Navigator, user name is stored in Identity.Name field if the user has been
            authenticated.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.DaoBase`1.ArchiveEntity(System.Object,Brierley.FrameWork.Common.DataChangeType)">
            <summary>
            Archive affected entity if it is configured for audit logging.
            </summary>
            <param name="affectedEntity"></param>
            <param name="changeType"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.IdGeneratorDao.ReplenishIDs(System.String,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,Brierley.FrameWork.Data.IDGenStats})">
            <summary>
            This method uses IsolationLevel instead of a row level lock.
            </summary>
            <param name="objectName"></param>
            <param name="howMany"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.PointTransactionDao.RetrieveTotalPointsAwarded(System.Int64[],System.Int64[],Brierley.FrameWork.Common.PointBankTransactionType[],System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            This could be an expensive method because it could potentially perform a full table scan.
            </summary>        
            <param name="pointTypeIds"></param>
            <param name="pointEventIds"></param>
            <param name="transactionTypes"></param>
            <param name="from"></param>
            <param name="to"></param>        
            <param name="includeExpiredPoints"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.PointTransactionDao.RetrievePointsExpired(System.Int64[],System.Int64[],System.Int64[],System.DateTime,System.DateTime)">
            <summary>
            This method gets the sume of points that have expired based on the provided date.  This method
            correctly accounts for the points that had been consumed using the FIFO method.  However,
            if any points were consumed using LumpSum method, they are not accounted for. 
            </summary>
            <param name="vcKeys"></param>
            <param name="pointTypeIds"></param>
            <param name="pointEventIds"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Brierley.FrameWork.Data.DataAccess.PointTransactionDao.RetrieveExpiredPointTransactionsWithNoExpiredRecords(System.Int64[],Brierley.FrameWork.Data.LWQueryBatchInfo)" -->
        <!-- Badly formed XML comment ignored for member "M:Brierley.FrameWork.Data.DataAccess.PointTransactionDao.RetrieveMembersWithExpiredPoints(Brierley.FrameWork.Data.LWQueryBatchInfo)" -->
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMAnswerContentDao.Retrieve(System.Int64)">
            <summary>
            Get a specific answerContent.
            </summary>
            <param name="ID">the unique ID for the answerContent</param>
            <returns>specified answerContent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMAnswerContentDao.RetrieveAll">
            <summary>
            Get a list of all answerContents.
            </summary>
            <returns>list of answerContents, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMAnswerContentDao.RetrieveAllForQuestion(System.Int64,System.Int64)">
            <summary>
            Get a list of all answerContents for a specific question and language.
            </summary>
            <param name="questionID">associated question</param>
            <param name="languageID">associated language</param>
            <returns>list of matching AnswerContent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMAnswerContentDao.Delete(System.Int64)">
            <summary>
            Delete a specific answerContent.
            </summary>
            <param name="ID">unique ID for the answerContent</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMAnswerContentDao.DeleteAllForSurvey(System.Int64)">
            <summary>
            Delete all answer contents for a particular survey
            </summary>
            <param name="surveyID">ID of the survey</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMConceptDao.Retrieve(System.Int64)">
            <summary>
            Get a specific concept.
            </summary>
            <param name="ID">the unique ID for the concept</param>
            <returns>specified concept, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMConceptDao.Retrieve(System.Int64,System.Int64,System.String)">
            <summary>
            Get a specific concept by name.
            </summary>
            <param name="surveyID">the ID of the associated survey</param>
            <param name="languageID">the ID of the associated language</param>
            <param name="name">the unique name for the concept</param>
            <returns>specified concept, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMConceptDao.RetrieveAll">
            <summary>
            Get a list of all concepts.
            </summary>
            <returns>list of concepts</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMConceptDao.RetrieveAll(System.Int64,System.Int64)">
            <summary>
            Get a list of concepts for a specific survey in a particular language.
            </summary>
            <param name="surveyID">the ID of the associated survey</param>
            <param name="languageID">the ID of the associated language</param>
            <returns>the list of concepts for the specified survey</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMConceptDao.Delete(System.Int64)">
            <summary>
            Delete a specific concept.
            </summary>
            <param name="ID">unique ID for the concept</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMConceptDao.DeleteAllForSurvey(System.Int64)">
            <summary>
            Delete all concepts for a particular survey
            </summary>
            <param name="surveyID">ID of the survey</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMCultureMapDao.Retrieve(System.Int64)">
            <summary>
            Get a specific CultureMap.
            </summary>
            <param name="ID">the unique ID for the CultureMap</param>
            <returns>specified CultureMap</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMCultureMapDao.RetrieveByCulture(System.String)">
            <summary>
            Get a specific cultureMap by culture.
            </summary>
            <param name="culture">the culture (e.g., "en-US")</param>
            <returns>specified CultureMap, or none if not found</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMCultureMapDao.RetrieveAll">
            <summary>
            Get a list of all CultureMaps.
            </summary>
            <returns>list of CultureMaps, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMCultureMapDao.Delete(System.Int64)">
            <summary>
            Delete a specific CultureMap.
            </summary>
            <param name="ID">unique ID for the CultureMap</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMDecisionDao.Retrieve(System.Int64)">
            <summary>
            Get a specific decision.
            </summary>
            <param name="ID">the unique ID for the decision</param>
            <returns>specified decision, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMDecisionDao.RetrieveByStateID(System.Int64)">
            <summary>
            Get a specific decision.
            </summary>
            <param name="stateID">the ID of the associated state</param>
            <returns>the specified decision, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMDecisionDao.RetrieveAll">
            <summary>
            Get a list of all decisions.
            </summary>
            <returns>list of decisions, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMDecisionDao.Delete(System.Int64)">
            <summary>
            Delete a specific decision.
            </summary>
            <param name="ID">unique ID for the decision</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMDecisionDao.DeleteAllForSurvey(System.Int64)">
            <summary>
            Delete all decisions for a particular survey
            </summary>
            <param name="surveyID">ID of the survey</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMLanguageDao.Retrieve(System.Int64)">
            <summary>
            Get a specific SMLanguage.
            </summary>
            <param name="ID">the unique ID for the SMLanguage</param>
            <returns>specified SMLanguage</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMLanguageDao.RetrieveByDescription(System.String)">
            <summary>
            Get a specific SMLanguage.
            </summary>
            <param name="description">description (e.g., "English")</param>
            <returns>specified SMLanguage, or null if not found</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMLanguageDao.RetrieveAll">
            <summary>
            Get a list of all Languages.
            </summary>
            <returns>list of Languages, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMLanguageDao.Delete(System.Int64)">
            <summary>
            Delete a specific SMLanguage.
            </summary>
            <param name="ID">unique ID for the SMLanguage</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMMatrixAnswerDao.Retrieve(System.Int64)">
            <summary>
            Get a specific matrixAnswer.
            </summary>
            <param name="ID">the unique ID for the matrixAnswer</param>
            <returns>specified matrixAnswer, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMMatrixAnswerDao.RetrieveByQuestionContentID(System.Int64)">
            <summary>
            Get a list of matrixAnswer for a questionContentID.
            </summary>
            <param name="stateID">the ID of the associated questionContent</param>
            <returns>the list of matrixAnswer, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMMatrixAnswerDao.RetrieveByQuestionID(System.Int64,System.Int64)">
            <summary>
            Get a list of the matrixAnswers for a specific question/language.
            </summary>
            <param name="questionID">unique ID for the question</param>
            <param name="languageID">unique ID for the language</param>
            <returns>list of matrixAnswers, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMMatrixAnswerDao.Delete(System.Int64)">
            <summary>
            Delete a specific matrixAnswer.
            </summary>
            <param name="ID">unique ID for the matrixAnswer</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMMatrixAnswerDao.DeleteAllForSurvey(System.Int64)">
            <summary>
            Delete all matrix answers for a particular survey
            </summary>
            <param name="surveyID">ID of the survey</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMMessageDao.Retrieve(System.Int64)">
            <summary>
            Get a specific message.
            </summary>
            <param name="ID">the unique ID for the message</param>
            <returns>specified message, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMMessageDao.RetrieveByStateID(System.Int64)">
            <summary>
            Get a specific message.
            </summary>
            <param name="stateID">the ID of the associated state</param>
            <returns>the specified message, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMMessageDao.RetrieveAll">
            <summary>
            Get a list of all messages.
            </summary>
            <returns>list of messages, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMMessageDao.Delete(System.Int64)">
            <summary>
            Delete a specific message.
            </summary>
            <param name="ID">unique ID for the message</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMMessageDao.DeleteAllForSurvey(System.Int64)">
            <summary>
            Delete all messages for a particular survey
            </summary>
            <param name="surveyID">ID of the survey</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionContentDao.Retrieve(System.Int64)">
            <summary>
            Get a specific questionContent.
            </summary>
            <param name="ID">the unique ID for the questionContent</param>
            <returns>specified questionContent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionContentDao.RetrieveAll">
            <summary>
            Get a list of all questionContents.
            </summary>
            <returns>list of questionContents, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionContentDao.RetrieveAllByType(System.Int64,System.Int64,Brierley.FrameWork.Common.QuestionContentType)">
            <summary>
            Get a list of questionContent
            </summary>
            <param name="questionID">associated question</param>
            <param name="languageID">associated language</param>
            <param name="contentType">content type</param>
            <returns>list of matching QuestionContent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionContentDao.Delete(System.Int64)">
            <summary>
            Delete a specific questionContent.
            </summary>
            <param name="ID">unique ID for the questionContent</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionContentDao.DeleteAllForSurvey(System.Int64)">
            <summary>
            Delete all question contents for a particular survey
            </summary>
            <param name="surveyID">ID of the survey</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionDao.Retrieve(System.Int64)">
            <summary>
            Get a specific question.
            </summary>
            <param name="ID">the unique ID for the question</param>
            <returns>specified question, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionDao.RetrieveByStateID(System.Int64)">
            <summary>
            Get a specific question.
            </summary>
            <param name="stateID">the ID of the associated state</param>
            <returns>the specified question, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionDao.RetrieveByStateName(System.Int64,System.String)">
            <summary>
            Get a specific question.
            </summary>
            <param name="surveyID">the associated survey</param>
            <param name="stateName">the name of the question's state</param>
            <returns>the specified question, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionDao.RetrieveAll">
            <summary>
            Get a list of all questions.
            </summary>
            <returns>list of questions, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionDao.RetrieveAllByStateID(System.Int64)">
            <summary>
            Get a list of the questions for a specific state in a state diagram.
            </summary>
            <param name="stateID">unique ID for the state</param>
            <returns>list of questions, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionDao.RetrieveAllBySurveyID(System.Int64)">
            <summary>
            Get a list of the questions for a specific survey.
            </summary>
            <param name="surveyID">unique ID for the survey</param>
            <returns>list of questions, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionDao.Delete(System.Int64)">
            <summary>
            Delete a specific question.
            </summary>
            <param name="ID">unique ID for the question</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMQuestionDao.DeleteAllForSurvey(System.Int64)">
            <summary>
            Delete all questions for a particular survey
            </summary>
            <param name="surveyID">ID of the survey</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.Reset(System.Int64,System.Int64,System.String,System.Int64)">
            <summary>
            Reset the start and completion dates for a set of respondents.
            </summary>
            <param name="surveyID">ID of the survey, or -1 for all</param>
            <param name="languageID">ID of the language, or -1 for all</param>
            <param name="mtouch">MTouch code, or null/string.Empty for unspecified</param>
            <param name="ipcode">IPCode, or -1 for unspecified</param>
            <returns>number of rows updated</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.Retrieve(System.Int64)">
            <summary>
            Get a specific respondent.
            </summary>
            <param name="ID">the unique ID for the respondent</param>
            <returns>specified respondent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveByMTouch(System.Int64,System.Int64,System.String)">
            <summary>
            Get a specific respondent by MTouch code.
            </summary>
            <param name="surveyID">unique identifier for the survey</param>
            <param name="languageID">unique identifier for the language</param>
            <param name="mtouch">unique MTouch code</param>
            <returns>matching respondent or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveByIPCode(System.Int64,System.Int64,System.Int64)">
            <summary>
            Get a specific respondent by IPCode.
            </summary>
            <param name="surveyID">unique identifier for the survey</param>
            <param name="languageID">unique identifier for the language</param>
            <param name="ipcode">unique IPCode for the member</param>
            <returns>matching respondent or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAll">
            <summary>
            Get a list of all respondents.
            </summary>
            <returns>list of respondents, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAllMTouches">
            <summary>
            Get a list of provisioned MTouch codes.
            </summary>
            <returns>list of MTouch codes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAllMTouchesForSurveyID(System.Int64)">
            <summary>
            Get a list of provisioned MTouch codes by survey ID
            </summary>
            <param name="surveyID">unique ID for the survey</param>
            <returns>list of MTouch codes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAllMTouchesForLanguageID(System.Int64)">
            <summary>
            Get a list of provisioned MTouch codes by language ID
            </summary>
            <param name="languageID">unique ID for the language</param>
            <returns>list of MTouch codes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAllMTouches(System.Int64,System.Int64)">
            <summary>
            Get a list of provisioned MTouch codes by survey ID and language ID
            </summary>
            <param name="surveyID">unique ID for the survey</param>
            <param name="languageID">unique ID for the language</param>
            <returns>list of MTouch codes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAllIPCodes">
            <summary>
            Get a list of provisioned IPCodes
            </summary>
            <returns>list of IPCodes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAllIPCodesForSurveyID(System.Int64)">
            <summary>
            Get a list of provisioned IPCodes by survey ID
            </summary>
            <param name="surveyID">unique ID for the survey</param>
            <returns>list of IPCodes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAllIPCodesForLanguageID(System.Int64)">
            <summary>
            Get a list of provisioned IPCodes by language ID
            </summary>
            <param name="languageID">unique ID for the language</param>
            <returns>list of IPCodes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAllIPCodes(System.Int64,System.Int64)">
            <summary>
            Get a list of provisioned IPCodes by survey ID and language ID
            </summary>
            <param name="surveyID">unique ID for the survey</param>
            <param name="languageID">unique ID for the language</param>
            <returns>list of IPCodes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveEligibleMTouches(System.Int64,System.Int64,System.Int32)">
            <summary>
            Get a list of eligible MTouch respondents
            </summary>
            <param name="surveyID">unique survey ID</param>
            <param name="languageID">unique language ID</param>
            <param name="maxResults">max results to return</param>
            <returns>list of respondents</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAllEligible(System.Int64,System.Int64,System.String,System.Int64)">
            <summary>
            Get a list of all eligible respondents for a mtouch and/or ipcode.
            </summary>
            <param name="surveyID">unique identifier for the survey</param>
            <param name="languageID">unique identifier for the language</param>
            <param name="mtouch">mtouch</param>
            <param name="ipcode">ipcode</param>
            <returns>list of eligible respondents, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAllEligible(System.Int64,System.String,System.Int64)">
            <summary>
            Get a list of all eligible respondents for a mtouch and/or ipcode.
            </summary>
            <param name="languageID">unique identifier for the language</param>
            <param name="mtouch">mtouch</param>
            <param name="ipcode">ipcode</param>
            <returns>list of eligible respondents, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.EvictRespondentFromCache(Brierley.FrameWork.Data.DomainModel.SMRespondent)">
            <summary>
            Evict cached respondent from cache
            </summary>
            <param name="respondent">respondent</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.RetrieveAllForSurvey(System.Int64,System.Int64)">
            <summary>
            Get a list of all respondents for a specific survey and language.
            </summary>
            <param name="surveyID">associated survey</param>
            <param name="languageID">associated language</param>
            <returns>list of matching Respondent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.IsValidMTouch(System.String)">
            <summary>
            Is the provided mtouch valid?  That is, does it exist in the Respondent table?
            </summary>
            <param name="mtouch">mtouch code</param>
            <returns>true if valid, false otherwise</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.NumCompletesForSegment(System.Int64,System.String,System.String)">
            <summary>
            Number of completions by segment
            </summary>
            <param name="surveyID">unique ID of the survey</param>
            <param name="respondentPropName">segment property name</param>
            <param name="respondentPropValue">segment property value</param>
            <returns>count of completed surveys for specified segment</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.Delete(System.Int64)">
            <summary>
            Delete a specific respondent.
            </summary>
            <param name="ID">unique ID for the respondent</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMRespondentDao.DeleteAllForSurvey(System.Int64)">
            <summary>
            Delete all respondents for a particular survey
            </summary>
            <param name="surveyID">ID of the survey</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMStateDao.Retrieve(System.Int64)">
            <summary>
            Get a specific state.
            </summary>
            <param name="ID">the unique ID for the state</param>
            <returns>specified state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMStateDao.Retrieve(System.Int64,System.String)">
            <summary>
            Get a specific state.
            </summary>
            <param name="surveyID">unique identifier for the survey</param>
            <param name="name">the UI name for the state</param>
            <returns>specified state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMStateDao.RetrieveAll">
            <summary>
            Get a list of all states.
            </summary>
            <returns>list of states, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMStateDao.RetrieveAllBySurveyID(System.Int64)">
            <summary>
            Get a list of the states for a specific survey.
            </summary>
            <param name="surveyID">unique ID for the survey</param>
            <returns>list of states, or null if none</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMStateDao.RetrieveAllByPageID(System.Int64)">
            <summary>
            Get a list of states on a page.
            </summary>
            <param name="pageID">unique ID of the page</param>
            <returns>list of states</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMStateDao.Delete(System.Int64)">
            <summary>
            Delete a specific state.
            </summary>
            <param name="ID">unique ID for the state</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMStateDao.DeleteAllForSurvey(System.Int64)">
            <summary>
            Delete all states for a particular survey
            </summary>
            <param name="surveyID">ID of the survey</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.StoreDao.Retrieve(Brierley.FrameWork.Data.DomainModel.LocationGroup)">
            <summary>
            Retrive a list of store by location group
            </summary>
            <param name="group">Param will contain the criteria to construct the query</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.StoreDao.Retrieve(Brierley.FrameWork.Data.DomainModel.LocationGroup,System.Int64,System.Int64)">
            <summary>
            Retrive a list of store by location group
            </summary>
            <param name="group">Param will contain the criteria to construct the query</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.StructuredContentAttributeDao.GetBooleanString(System.Boolean)">
            <summary>
            Since RetrieveByArray doesn't let us pass extra bind variables, this allows us to get a boolean string based on database type
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMTransitionDao.Update(Brierley.FrameWork.Data.DomainModel.SMTransition)">
            <summary>
            Update a transition.
            </summary>
            <param name="transition">the transition to update</param>
            <returns>the updated transition</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMTransitionDao.Retrieve(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Get a specific transition.
            </summary>
            <param name="srcStateID">the ID of the source state</param>
            <param name="srcConnectorIndex">the index of the output connector on the source state</param>
            <param name="dstStateID">the ID of the destination state</param>
            <param name="dstConnectorIndex">the index of the input connector on the source state</param>
            <returns>the specified transition, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMTransitionDao.RetrieveAll">
            <summary>
            Get all transitions
            </summary>
            <returns>list of all transitions</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMTransitionDao.RetrieveInputs(System.Int64)">
            <summary>
            Get the list of transitions that terminate at the given state.
            </summary>
            <param name="stateID">a specific state</param>
            <returns>list of input transitions for the state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMTransitionDao.RetrieveOutputs(System.Int64)">
            <summary>
            Get the list of transitions that originate at the given state.
            </summary>
            <param name="stateID">a specific state</param>
            <returns>list of output transitions for the state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMTransitionDao.Delete(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Delete a transition.
            </summary>
            <param name="srcStateID">the ID of the source state</param>
            <param name="srcConnectorIndex">the index of the output connector on the source state</param>
            <param name="dstStateID">the ID of the destination state</param>
            <param name="dstConnectorIndex">the index of the input connector on the source state</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DataAccess.SMTransitionDao.DeleteAllForSurvey(System.Int64)">
            <summary>
            Delete all transitions for a particular survey
            </summary>
            <param name="surveyID">ID of the survey</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ExchangeRate">
            <summary>
            Holds the convertion rate between two currencies
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ExchangeRate.Id">
            <summary>
            Primary key
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ExchangeRate.FromCurrency">
            <summary>
            ISO 4217 Code of the from currency 
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ExchangeRate.FromCurrencyName">
            <summary>
            Display name of the from currency
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ExchangeRate.ToCurrency">
            <summary>
            ISO 4217 code fo the to currency
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ExchangeRate.ToCurrencyName">
            <summary>
            Display name of the the to currency
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ExchangeRate.Rate">
            <summary>
            Convertion rate between the two currencies
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ExchangeRate.GetArchiveObject">
            <summary>
            Create the Audit log object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ExchangeRate_AL.FromCurrencyName">
            <summary>
            Display name of the from currency
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ExchangeRate_AL.FromCurrency">
            <summary>
            ISO 4217 Code of the from currency 
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ExchangeRate_AL.ToCurrencyName">
            <summary>
            Display name of the the to currency
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ExchangeRate_AL.ToCurrency">
            <summary>
            ISO 4217 code fo the to currency
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ExchangeRate_AL.Rate">
            <summary>
            Convertion rate between the two currencies
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RestApiLog">
            <summary>
            POCO for RestApiLog
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiLog.Id">
            <summary>
            Gets or sets the Id 
            </summary>
            <remarks>Required identity column for SQL Server support</remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiLog.RequestId">
            <summary>
            Gets or sets the Unique RequestId
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiLog.ConsumerId">
            <summary>
            Gets or sets the ConsumerId
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiLog.RequestHost">
            <summary>
            Gets or sets the RequestHost
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiLog.RequestMethod">
            <summary>
            Gets or sets the RequestMethod
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiLog.RequestEndpoint">
            <summary>
            Gets or sets the RequestEndpoint
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiLog.RequestPath">
            <summary>
            Gets or sets the RequestPath
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog">
            <summary>
            POCO for RestApiPayloadLog
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.Id">
            <summary>
            Gets or sets the Id 
            </summary>
            <remarks>Required identity column for SQL Server support</remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.RequestId">
            <summary>
            Gets or sets the Unique RequestId
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.RequestContentType">
            <summary>
            Gets or sets the RequestContentType
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.RequestProtocol">
            <summary>
            Gets or sets the RequestProtocol
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.RequestScheme">
            <summary>
            Gets or sets the RequestScheme
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.RequestContentLength">
            <summary>
            Gets or sets the RequestContentLength
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.RequestQueryString">
            <summary>
            Gets or sets the RequestQueryString
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.RequestHeaders">
            <summary>
            Gets or sets the RequestHeaders
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.RequestBody">
            <summary>
            Gets or sets the RequestBody
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.ResponseContentType">
            <summary>
            Gets or sets the ResponseContentType
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.ResponseHeaders">
            <summary>
            Gets or sets the ResponseHeaders
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestApiPayloadLog.ResponseBody">
            <summary>
            Gets or sets the ResponseBody
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RestConsumer">
            <summary>
            POCO for RestConsumer
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestConsumer.ConsumerId">
            <summary>
            Gets or sets the Consumer Id
            </summary>
            <remarks>For Kong Integration</remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestConsumer.CustomId">
            <summary>
            Gets or sets the Custom Id
            </summary>
            <remarks>For Kong Integration</remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestConsumer.Username">
            <summary>
            Gets or sets the Username
            </summary>
            <remarks>For Kong Integration</remarks>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RestConsumerGroup">
            <summary>
            POCO for RestConsumerGroup
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestConsumerGroup.RestConsumerId">
            <summary>
            Gets or sets the RestConsumerId
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestConsumerGroup.RestGroupId">
            <summary>
            Gets or sets the RestGroupId
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RestConsumerRole">
            <summary>
            POCO for RestConsumerRole
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestConsumerRole.RestConsumerId">
            <summary>
            Gets or sets the RestConsumerId
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestConsumerRole.RestRoleId">
            <summary>
            Gets or sets the RestRoleId
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RestGroup">
            <summary>
            POCO for RestGroup
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestGroup.Name">
            <summary>
            Gets or sets the Name of the Rest Group
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestGroup.Description">
            <summary>
            Gets or sets the Description of the Rest Group
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RestGroupRole">
            <summary>
            POCO for RestGroupRole
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestGroupRole.RestGroupId">
            <summary>
            Gets or sets the RestGroupId
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestGroupRole.RestRoleId">
            <summary>
            Gets or sets the RestRoleId
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RestObjectBase">
            <summary>
            Object base for Rest object types
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestObjectBase.Id">
            <summary>
            Gets or sets the ID
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestObjectBase.IsDeleted">
            <summary>
            Gets or sets the Soft Delete Y/N flag for the current object
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RestResource">
            <summary>
            POCO for RestResource.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestResource.RestResourceType">
            <summary>
            Gets or Sets the RestResourceType
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestResource.Details">
            <summary>
            Gets or Sets the Details of the RestResource
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestResource.RestPermissionType">
            <summary>
            Result column for Permission.  If this is set by user, it will not be written.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RestRole">
            <summary>
            POCO for RestRole.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestRole.Name">
            <summary>
            Gets or Sets the Name of the RestRole
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestRole.Description">
            <summary>
            Gets or Sets the Description of the RestRole
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RestRoleResource">
            <summary>
            POCO for RestRoleResource
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestRoleResource.RestRoleId">
            <summary>
            Gets or sets the RestRoleId
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestRoleResource.RestResourceId">
            <summary>
            Gets or sets the RestResourceId
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RestRoleResource.RestPermissionType">
            <summary>
            Gets or sets the Permission
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RemoteAssembly.AssemblyName">
            <summary>
            Gets or sets the AssemblyName for the component
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RemoteAssembly.AssemblyFileName">
            <summary>
            Gets or sets the AssemblyFileName for the component
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RemoteAssembly.Assembly">
            <summary>
            Gets or sets the Assembly for the current ClientDataModel
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCouponRedemption.Violation">
            <summary>
            Gets or sets the violation that occurred during redemption. 
            </summary>
            <remarks>
            Typically, a coupon redemption is not allowed if any redemption rules are violated (e.g., too many redemptions in one day). A
            redemption that is denied for any reason would result in the history record not being written to LW_MemberCouponRedemption. 
            However, a parameter in the framework redemption method allows the redemption record to be written even if a redemption would 
            normally not be allowed. This helps in situations where the redemption does not happen in real time and instead comes later 
            (member redeems coupon at POS, but we don't know until the transaction file comes in the next day). The redemption cannot be 
            denied at this point because it has already happened. We'll write the redemption to the history table and populate the violation 
            column to indicate why this redemption would not have been allowed otherwise.
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.EmailAssociation">
            <summary>
            Class used to associate an email to a LoyaltyWare content.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailAssociation.Id">
            <summary>
            The item's unique ID in the framework database.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailAssociation.EmailQueueId">
            <summary>
            The unique id of the email queue row
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailAssociation.OwnerType">
            <summary>
            This describes the owenr type of the loyaltyware content artifact.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailAssociation.OwnerId">
            <summary>
            This is the definition id of the loyalty ware artifact.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailAssociation.RowKey">
            <summary>
            This is the unique id of the loyalty wallet row
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.EmailLink">
            <summary>
            Class used to describe links in emails.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.Id">
            <summary>
            The link's unique Id in the framework database.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.EmailId">
            <summary>
            The Id of the email which this link belongs to.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.Descriptor">
            <summary>
            Description of the link, used for email reporting.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.Url">
            <summary>
            The URL that the link points to.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.Text">
            <summary>
            The text of the link.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.IsTrackingEnabled">
            <summary>
            Is click tracking enabled for this link?
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.LinkOrder">
            <summary>
            The order the link appears in the email.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.IsActive">
            <summary>
            Is the link active, i.e., does it currently exist somewhere in the body of the email?
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.NeedsValidation">
            <summary>
            Does the link need validation?
            </summary>
            <remarks>
            A link may need validation if a perfect match is not found between 
            the XSLT body of the email and the list of known links in the database.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.HasBeenInserted">
            <summary>
            Flag to allow a consumer of the class determine if the link has 
            been inserted into the email body yet.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.Index">
            <summary>
            The link's position in the email XSLT body.
            </summary>
            <remarks>
            This property can be used along with <see cref="P:Brierley.FrameWork.Data.DomainModel.EmailLink.Length"/> to pinpoint the exact 
            location of the link, possibly to display as a reference to the user. 
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailLink.Length">
            <summary>
            The length of the link in the email XSLT body.
            </summary>
            <remarks>
            This property can be used along with <see cref="P:Brierley.FrameWork.Data.DomainModel.EmailLink.Index"/> to pinpoint the exact 
            location of the link, possibly to display as a reference to the user. 
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.NotificationCategory">
            <summary>
            An email.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationCategory.Id">
            <summary>
            Gets or sets the Id for the current Push Category
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationCategory.Name">
            <summary>
            Gets or sets the name for the current Push Category
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationCategory.SupportedVersion">
            <summary>
            Gets or sets the supported version for the current Push Category
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationCategory.IsActive">
            <summary>
            Gets or sets the is active flag for the current Push Category
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.NotificationCategory.#ctor">
            <summary>
            Initializes a new instance of the Sms class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.NotificationCategory_AL">
            <summary>
            An email.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.PushSession">
            <summary>
            POCO for PushSession. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PushSession.Id">
            <summary>
            Gets or sets the id for the current Push Session
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PushSession.DeviceId">
            <summary>
            Gets or sets the device id for the current Push Session
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PushSession.StartDate">
            <summary>
            Gets or sets the device id for the current Push Session
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PushSession.EndDate">
            <summary>
            Gets or sets the device id for the current Push Session
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.PushSession.#ctor">
            <summary>
            Initializes a new instance of the PushSession class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MobileDevice">
            <summary>
            POCO for MobileDevice. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MobileDevice.Id">
            <summary>
            Gets or sets the id for the current Push Device
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MobileDevice.MemberId">
            <summary>
            Gets or sets the member id for the current Push Device
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MobileDevice.DeviceType">
            <summary>
            Gets or sets the device type for the current Push Device
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MobileDevice.PushToken">
            <summary>
            Gets or sets the push token for the current Push Device
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MobileDevice.DeviceId">
            <summary>
            Gets or sets the device id for the current Push Device
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MobileDevice.DeviceOS">
            <summary>
            Gets or sets the device id for the current Push Device
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MobileDevice.DeviceOSVersion">
            <summary>
            Gets or sets the device id for the current Push Device
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MobileDevice.AcceptsPush">
            <summary>
            Gets or sets the device id for the current Push Device
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MobileDevice.#ctor">
            <summary>
            Initializes a new instance of the MobileDevice class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.NotificationDef">
            <summary>
            An email.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationDef.Name">
            <summary>
            Gets or sets the Name for the current NotificationDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationDef.Title">
            <summary>
            Gets or sets the Title for the current NotificationDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationDef.Body">
            <summary>
            Gets or sets the Body for the current NotificationDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationDef.Sound">
            <summary>
            Gets or sets the sound for the current NotificationDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationDef.Actions">
            <summary>
            Gets or sets the Addistional Properties for the current NotificationDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationDef.FolderId">
            <summary>
            Gets or sets the folder id for the current NotificationDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationDef.StartDate">
            <summary>
            Gets or sets the StartDate for the current NotificationDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationDef.ExpiryDate">
            <summary>
            Gets or sets the ExpiryDate for the current NotificationDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NotificationDef.DisplayOrder">
            <summary>
            Gets or sets the DisplayOrder for the current NotificationDef
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.NotificationDef.#ctor">
            <summary>
            Initializes a new instance of the NotificationDef class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MobileDevice_AL">
            <summary>
            An email.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SmsPersonalization">
            <summary>
            Represents an email personalization (field) in Teradata's DMC system.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsPersonalization.SmsId">
            <summary>
            Gets or sets the Id of the LoyaltyWare email
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsPersonalization.Name">
            <summary>
            Gets or sets the name of the personalization.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsPersonalization.Expression">
            <summary>
            Gets or sets the bScrpt expression used to produce the value of the personalization at send time.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SmsQueueSummaryItem">
            <summary>
            Class used for email resend grid.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueueSummaryItem.ID">
            <summary>
            The row number in the result
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueueSummaryItem.SmsID">
            <summary>
            The ID of the email which this send belongs to.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueueSummaryItem.Name">
            <summary>
            The name of the email which this send belongs to.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueueSummaryItem.MessageType">
            <summary>
            The type of message that was sent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueueSummaryItem.FailureReason">
            <summary>
            Reason for the last send failure
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueueSummaryItem.SendCount">
            <summary>
            The count of queued sends.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SmsQueue">
            <summary>
            Class used for queue failed email sends.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueue.ID">
            <summary>
            The queued item's unique ID in the framework database.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueue.SmsID">
            <summary>
            The ID of the email which this send belongs to.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueue.MessageType">
            <summary>
            The type of message that was sent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueue.Records">
            <summary>
            The fields for the send.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueue.SmsFailureType">
            <summary>
            Reason for the last send failure
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueue.SendAttempts">
            <summary>
            # times email has been sends have been attempted
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsQueue.LastSendAttempt">
            <summary>
            Date of last send attempt
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.NotificationDef_AL">
            <summary>
            An email.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SmsDocument_AL">
            <summary>
            An email.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SmsDocument">
            <summary>
            An Sms message.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsDocument.Id">
            <summary>
            Gets or sets the id for the current Sms
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsDocument.ExternalId">
            <summary>
            Gets or sets the external (Teradata DMC) Id for the Sm.
            </summary>
            <remarks>
            This property uniquely identifies the Sms in a 3rd party's system. It is used to retrieve 
            personalizations (fields) for the Sms as well as invoking a send of the Sms through their API.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsDocument.FolderId">
            <summary>
            Gets or sets the folder id for the current Sms
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsDocument.Name">
            <summary>
            Gets or sets the name for the current Sms
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SmsDocument.Description">
            <summary>
            Gets or sets the description for the current Sms
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SmsDocument.#ctor">
            <summary>
            Initializes a new instance of the Sms class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.TestList.CompileFullList">
            <summary>
            Creates and returns a list of each destination address combined with each row in the list
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.TestList.AddRecipient(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Adds a recipient to the Test List
            </summary>
            <param name="recipientValues">Dictionary of Field/Value pairs</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.TestList.RefreshTemplateFields">
            <summary>
            Updates list fields based on fields in the template.
            </summary>
            <remarks>
            This method compares the current set of fields in the lists's template to the list 
            and adds or removes any fields that have been added or removed from the template.
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ChannelDef">
            <summary>
            Indicates a ChannelDef used to define different channels.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ChannelDef.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ContentAttributeDef">
            <summary>
            POCO for ContentAttributeDef.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttributeDef.ID">
            <summary>
            Gets or sets the ID for the current ContentAttributeDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttributeDef.Name">
            <summary>
            Gets or sets the Name for the current ContentAttributeDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttributeDef.ContentTypes">
            <summary>
            Gets or sets the ContentTypes for the current ContentAttributeDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttributeDef.DataType">
            <summary>
            Gets or sets the DataType for the current ContentAttributeDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttributeDef.DefaultValues">
            <summary>
            Gets or sets the DefaultValues for the current ContentAttributeDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttributeDef.VisibleInGrid">
            <summary>
            Gets or sets the VisibleInGrid for the current ContentAttributeDef
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ContentAttributeDef.#ctor">
            <summary>
            Initializes a new instance of the RewardAttribute class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ContentAttribute">
            <summary>
            POCO for ContentAttribute. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttribute.ID">
            <summary>
            Gets or sets the ID for the current ContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttribute.ContentType">
            <summary>
            Gets or sets the ContentType for the current ContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttribute.RefId">
            <summary>
            Gets or sets the RewardId for the current ContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttribute.ContentAttributeDefId">
            <summary>
            Gets or sets the ContentAttributeDefId for the current ContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttribute.Value">
            <summary>
            Gets or sets the Value for the current ContentAttribute
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ContentAttribute.#ctor">
            <summary>
            Initializes a new instance of the ContentAttribute class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttribute_AL.ObjectId">
            <summary>
            Gets or sets the ID for the current ContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttribute_AL.ContentType">
            <summary>
            Gets or sets the ContentType for the current ContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttribute_AL.RefId">
            <summary>
            Gets or sets the RefId for the current ContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttribute_AL.ContentAttributeDefId">
            <summary>
            Gets or sets the ContentAttributeDefId for the current ContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentAttribute_AL.Value">
            <summary>
            Gets or sets the Value for the current ContentAttribute
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ContentDefBase">
            <summary>
            This class defines a base for content.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ContentDefBase.#ctor(Brierley.FrameWork.Common.ContentObjType)">
            <summary>
            Initializes a new instance of the CouponDef class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentDefBase.Attributes">
            <summary>
            Gets or sets the Attributes for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ContentDefBase.ContentAttributes">
            <summary>
            This property is really there for Xml serialization because serialization does not work
            on interfaces.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ArchiveObject">
            <summary>
            POCO for AttributeSet.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ArchiveObject.Id">
            <summary>
            Gets or sets the ID for the current LWArchiveObject
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ArchiveObject.ItemId">
            <summary>
            Gets or sets the ItemId for the current LWArchiveObject
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ArchiveObject.GroupId">
            <summary>
            Gets or sets the GroupId for the current LWArchiveObject
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ArchiveObject.SetId">
            <summary>
            Gets or sets the SetId for the current LWArchiveObject
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ArchiveObject.RunNumber">
            <summary>
            Gets or sets the RunNumber for the current LWArchiveObject
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ArchiveObject.ObjectType">
            <summary>
            Gets or sets the ObjectType for the current LWArchiveObject
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ArchiveObject.Classtype">
            <summary>
            Gets or sets the Classtype for the current LWArchiveObject
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ArchiveObject.ObjectId">
            <summary>
            Gets or sets the ObjectId for the current LWArchiveObject
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ArchiveObject.ObjectState">
            <summary>
            Gets or sets the ObjectState for the current LWArchiveObject
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.AttributeMetaData_AL">
            <summary>
            POCO for Attribute.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData_AL">
            <summary>
            POCO for AttributeSet.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.BonusDef_AL">
            <summary>
            This class defines an advertising message.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Category_AL">
            <summary>
            This class defines an advertising message.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.AsyncJobProcessedObjects">
            <summary>
            POCO for AsyncJob.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.AsyncJobProcessedObjects.#ctor">
            <summary>
            Initializes a new instance of the AsyncJob class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.EmailPersonalization">
            <summary>
            Represents an email personalization (field) in Teradata's DMC system.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailPersonalization.EmailId">
            <summary>
            Gets or sets the Id of the LoyaltyWare email
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailPersonalization.Name">
            <summary>
            Gets or sets the name of the personalization.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailPersonalization.Expression">
            <summary>
            Gets or sets the bScrpt expression used to produce the value of the personalization at send time.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MemberNextBestAction">
            <summary>
            Represents a Next Best Action that was assigned to a member.
            </summary>
            <remarks>
            Where NextBestAction represents a list of potential actions for a member, 
            that list contains actions that have not necessarily been assigned. Once
            assigned to a member, the record is contained here.
            
            NextBestAction's underlying table may be truncated as new data replaces
            stale offers. This serves as a historical account of what was taken from
            that table and given to a member, along with the Id of the LoyaltyWare
            object (MemberCoupon, MemberMessage, etc.).
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberNextBestAction.Id">
            <summary>
            Gets or sets the Id of the member next best action.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberNextBestAction.MemberId">
            <summary>
            Gets or sets the member Id (IPCode) of the member next best action.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberNextBestAction.Priority">
            <summary>
            Gets or sets the priority order of the member next best action.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberNextBestAction.ActionType">
            <summary>
            Gets or sets the action type of the member next best action.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberNextBestAction.ActionId">
            <summary>
            Gets or sets the action Id of the member next best action.
            </summary>
            <remarks>
            This is the Id of the object definition that may be assigned when the member receives 
            the action (e.g., the coupon definition id for coupon action types, message definition
            id for message action types)
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberNextBestAction.MemberActionId">
            <summary>
            Gets or sets the member action Id of the member next best action.
            </summary>
            <remarks>
            This is the Id of the member object that is assigned when the member receives the 
            action (e.g., the Id of the MemberCoupon for coupon action types, MemberMessage Id 
            for message action types, etc.).
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberNextBestAction.Views">
            <summary>
            Gets or sets the number of times the action has been viewed.
            </summary>
            <remarks>
            This value is only used for next best actions that are not "assigned" to a member. 
            One example is a recommendation engine (ActionType.Sku) showing a list of products 
            the member may be interested in. These products are not assigned to the member
            the same way coupons are and there is no ability to track the usage. Each time the 
            member views the list of recommendations, the Views property will be incremented 
            to show the total number of views for the recommendation.
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.NextBestAction">
            <summary>
            Next best action represents a list of actions for a member in priority order. 
            </summary>
            <remarks>
            The action may be one of a number of LoyaltyWare objects: coupon, bonus, message, 
            product, etc.. A real-time campaign may pull one or more next best actions and 
            assign them to a member (<see cref="T:Brierley.FrameWork.Data.DomainModel.MemberNextBestAction"/>), 
            which may, depending on the type of action, write a record to the corresponding member
            table (e.g., MemberCoupon, MemberMessage, etc.).
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NextBestAction.MemberId">
            <summary>
            Gets or sets the Id (IPCode) of the member the next best action has been chosen for.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NextBestAction.Priority">
            <summary>
            Gets or sets the priority order of the next best action, relative to the MemberId.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NextBestAction.ActionType">
            <summary>
            Gets or sets the action type of the next best action.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.NextBestAction.ActionId">
            <summary>
            Gets or sets the Id of the next best action.
            </summary>
            <remarks>
            This is the Id of the object definition that may be assigned when the member receives 
            the action (e.g., the coupon definition id for coupon action types, message definition
            id for message action types, etc.)
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SocialMediaApp">
            <summary>
            Information on social media apps used for member authentication and real-time communication.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Skin">
            <summary>
            A Skin for a LWPortal.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Skin.ID">
            <summary>
            Gets or sets the ID for the current Skin
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Skin.Name">
            <summary>
            Gets or sets the Name for the current Skin
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Skin.Description">
            <summary>
            Gets or sets the Description for the current Skin
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Skin.#ctor">
            <summary>
            Initializes a new instance of the Skin class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Skin.#ctor(Brierley.FrameWork.Data.DomainModel.Skin)">
            <summary>
            Copy constructor
            </summary>
            <param name="other">other Skin to copy</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SkinItem">
            <summary>
            An item associated with a Skin.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SkinItem.ID">
            <summary>
            Gets or sets the ID for the current SkinItem
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SkinItem.SkinID">
            <summary>
            Gets or sets the ID of the Skin associated with the current SkinItem
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SkinItem.SkinItemType">
            <summary>
            Gets or sets the SkinItemType for the current SkinItem
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SkinItem.FileName">
            <summary>
            Gets or sets the FileName for the current SkinItem
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SkinItem.Content">
            <summary>
            Gets or sets the Content for the current SkinItem.  If the SkinItemType is a 
            binary type (e.g., image or font), then it will be Base64 encoded.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SkinItem.#ctor">
            <summary>
            Initializes a new instance of the SkinItem class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SkinItem.#ctor(Brierley.FrameWork.Data.DomainModel.SkinItem)">
            <summary>
            Copy constructor
            </summary>
            <param name="other">other Skin to copy</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Template_AL">
            <summary>
            A template in the content management system.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Document_AL">
            <summary>
            A document in the content management system.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.EmailDocument_AL">
            <summary>
            An email.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MemberStore">
            <summary>
            This class defines an advertising offer in member's account.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberStore.Id">
            <summary>
            Gets or sets the Id for the current MemberStore
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberStore.StoreDefId">
            <summary>
            Gets or sets the StoreDefId for the current MemberStore
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberStore.MemberId">
            <summary>
            Gets or sets the MemberId for the current MemberStore
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberStore.PreferenceOrder">
            <summary>
            Gets or sets the PreferenceOrder for the current MemberStore
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MemberStore.#ctor">
            <summary>
            Initializes a new instance of the MemberStore class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.CouponDef_AL">
            <summary>
            This class defines a coupon.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL">
            <summary>
            POCO for MemberCoupon.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.ObjectId">
            <summary>
            Gets or sets the ID for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.CouponDefId">
            <summary>
            Gets or sets the CouponDefId for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.CertificateNmbr">
            <summary>
            Gets or sets the CertificateNmbr for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.MemberId">
            <summary>
            Gets or sets the MemberId for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.TimesUsed">
            <summary>
            Gets or sets the TimesUsed for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.DateIssued">
            <summary>
            Gets or sets the DateIssued for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.DateRedeemed">
            <summary>
            Gets or sets the DateRedeemed for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.ExpiryDate">
            <summary>
            Gets or sets the ExpiryDate for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.DisplayOrder">
            <summary>
            Gets or sets the display order for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.CampaignId">
            <summary>
            Gets or sets the CampaignId of the campaign that loaded this for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.Status">
            <summary>
            Gets or sets the Status of the campaign that loaded this for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon_AL.MTouchId">
            <summary>
            Gets or sets the Id of the MTouch associated with this coupon.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.CSAgent_AL.#ctor">
            <summary>
            Initializes a new instance of the PointEvent class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWObjectAuditLogBase.Id">
            <summary>
            Unique identifier (PK) of the auditing record.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWObjectAuditLogBase.Ar_AppType">
            <summary>
            It identifies the application where this data change took place:
              CS:   CS Portal, 
              CF:   Customer Facing web site, 
              LN:   Loyalty Navigator, 
              AP:   API,
              DA:   DAP, 
              RU:   Rule Processor, 
              OT:   Others
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWObjectAuditLogBase.Ar_HostName">
            <summary>
            It identifies the name of the machine where the application is hosted.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWObjectAuditLogBase.Ar_OwnerID">
            <summary>
            It identifies the unique ID of the user who initiated the data change:
              For CS Portal user:  the CS agent’s user name is logged;
              For Customer Facing web site user:  Loyalty member’s ipcode is logged;
              For Loyalty Navigator user:  Loyalty Navigator user’s login name is logged;
              For API:   ‘API’ is logged;
              For DAP:  ‘DAP’ is logged;
              For Rule Processor:  ‘RuleProcessor’ is logged;
              Others:   ‘(Unknown)’ is logged
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWObjectAuditLogBase.Ar_ChangeType">
            <summary>
            It identifies the nature of the data change:
              U:  a record has been updated
              I:  a record has been inserted
              D:  a record has been deleted
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWObjectAuditLogBase.Ar_CreatedOn">
            <summary>
            It identifies the date and time the data change occurred.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.ObjectId">
            <summary>
            Gets or sets the Id for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.RewardDefId">
            <summary>
            Gets or sets the RewardDefId for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.CertificateNmbr">
            <summary>
            Gets or sets the CertificateNmbr for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.OfferCode">
            <summary>
            Gets or sets the OfferCode for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.AvailableBalance">
            <summary>
            Gets or sets the AvailableBalance for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.FulfillmentOption">
            <summary>
            Gets or sets the FulfillmentOption for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.MemberId">
            <summary>
            Gets or sets the MemberId for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.ProductId">
            <summary>
            Gets or sets the ProductId for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.ProductVariantId">
            <summary>
            Gets or sets the ProductVariantId for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.DateIssued">
            <summary>
            Gets or sets the DateIssued for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.Expiration">
            <summary>
            Gets or sets the Expiration for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.FulfillmentDate">
            <summary>
            Gets or sets the FulfillmentDate for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.RedemptionDate">
            <summary>
            Gets or sets the RedemptionDate for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.CreateDate">
            <summary>
            Gets or sets the CreateDate for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.UpdateDate">
            <summary>
            Gets or sets the UpdateDate for the current LIBJob
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MemberReward_AL.#ctor">
            <summary>
            Initializes a new instance of the PointEvent class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MemberTier_AL.#ctor">
            <summary>
            Initializes a new instance of the MemberTier_AR class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier_AL.ObjectId">
            <summary>
            Gets or sets the Id for the current MemberTier
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier_AL.TierDefId">
            <summary>
            Gets or sets the TierDefId for the current MemberTier
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier_AL.MemberId">
            <summary>
            Gets or sets the MemberId for the current MemberTier
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier_AL.FromDate">
            <summary>
            Gets or sets the FormDate for the current MemberTier
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier_AL.ToDate">
            <summary>
            Gets or sets the ToDate for the current MemberTier
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier_AL.Description">
            <summary>
            Gets or sets the Description 
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier_AL.CreateDate">
            <summary>
            Gets or sets the CreateDate for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier_AL.UpdateDate">
            <summary>
            Gets or sets the UpdateDate for the current LIBJob
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.PointEvent_AL.#ctor">
            <summary>
            Initializes a new instance of the PointEvent class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.PromotionCertificate">
            <summary>
            POCO for PromotionCertificate. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PromotionCertificate.CertNmbr">
            <summary>
            Gets or sets the CertNmbr for the current PromotionCertificate
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PromotionCertificate.TypeCode">
            <summary>
            Gets or sets the TypeCode for the current PromotionCertificate
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PromotionCertificate.ObjectType">
            <summary>
            Gets or sets the ObjectType for the current PromotionCertificate
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PromotionCertificate.Available">
            <summary>
            Gets or sets the Available for the current PromotionCertificate
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PromotionCertificate.StartDate">
            <summary>
            Gets or sets the StartDate for the current PromotionCertificate
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PromotionCertificate.ExpiryDate">
            <summary>
            Gets or sets the ExpiryDate for the current PromotionCertificate
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LangChanContentBase.Id">
            <summary>
            Gets or sets the ID for the current MessageDef
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.LanguageDef">
            <summary>
            Indicates a LanguageMap used to define different langauges.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LanguageDef.Culture">
            <summary>
            Internet standard culture. For example, 'en-US' indicates English language ('en') and 
            United States culture ('US').
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LanguageDef.Language">
            <summary>
            The name of the language for display purpose.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.LanguageDef.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MemberMessage">
            <summary>
            POCO for MemberMessage. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberMessage.Id">
            <summary>
            Gets or sets the ID for the current MemberMessage
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberMessage.MessageDefId">
            <summary>
            Gets or sets the MessageDefId for the current MemberMessage
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberMessage.MemberId">
            <summary>
            Gets or sets the MemberId for the current MemberMessage
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberMessage.DateIssued">
            <summary>
            Gets or sets the DateIssued for the current MemberMessage
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberMessage.StartDate">
            <summary>
            Gets or sets the StartDate for the current MemberMessage
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberMessage.ExpiryDate">
            <summary>
            Gets or sets the ExpiryDate for the current MemberMessage
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberMessage.Status">
            <summary>
            Gets or sets the status for the current MemberBonus
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberMessage.DisplayOrder">
            <summary>
            Gets or sets the display order for the current MemberMessage
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MemberMessage.#ctor">
            <summary>
            Initializes a new instance of the MemberMessage class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MessageDef">
            <summary>
            This class defines a Message.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MessageDef.Name">
            <summary>
            Gets or sets the Name for the current MessageDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MessageDef.Subject">
            <summary>
            Gets or sets the Subject for the current MessageDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MessageDef.FolderId">
            <summary>
            Gets or sets the folder id for the current MessageDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MessageDef.StartDate">
            <summary>
            Gets or sets the StartDate for the current MessageDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MessageDef.ExpiryDate">
            <summary>
            Gets or sets the ExpiryDate for the current MessageDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MessageDef.Summary">
            <summary>
            Gets or sets the Summary for the current MessageDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MessageDef.Body">
            <summary>
            Gets or sets the Body for the current MessageDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MessageDef.DisplayOrder">
            <summary>
            Gets or sets the DisplayOrder for the current MessageDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MessageDef.PushNotificationId">
            <summary>
            Gets or sets the PushNotificationId associated with the current MessageDef
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MessageDef.#ctor">
            <summary>
            Initializes a new instance of the MessageDef class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWCoreObjectBase.CreateDate">
            <summary>
            Gets or sets the CreateDate for the current object
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWCoreObjectBase.UpdateDate">
            <summary>
            Gets or sets the UpdateDate for the current object
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion_AL.ObjectId">
            <summary>
            Gets or sets the Id for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion_AL.Code">
            <summary>
            Gets or sets the Code for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion_AL.Name">
            <summary>
            Gets or sets the Name for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion_AL.PromotionDescription">
            <summary>
            Gets or sets the Internal Description for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion_AL.EnrollmentSupportType">
            <summary>
            Gets or sets the type of enrollment supported by the promotion.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion_AL.FolderId">
            <summary>
            Gets or sets the Folder Id for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion_AL.StartDate">
            <summary>
            Gets or sets the StartDate for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion_AL.EndDate">
            <summary>
            Gets or sets the EndDate for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion_AL.DisplayOrder">
            <summary>
            Gets or sets the DisplayOrder for the current MessageDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion_AL.Targeted">
            <summary>
            Targeted
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Promotion_AL.#ctor">
            <summary>
            Initializes a new instance of the PointEvent class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.RuleTrigger_AL.#ctor">
            <summary>
            Initializes a new instance of the PointEvent class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ATSLock.ObjectName">
            <summary>
            Gets or sets the ObjectName for the current ATSLock
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ATSLock.TimesLocked">
            <summary>
            Gets or sets the times locked for the current ATSLock.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMAnswerContent">
            <summary>
            The language-specific text for an answer within a particular survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMAnswerContent.ID">
            <summary>
            A unique identifier.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMAnswerContent.QuestionID">
            <summary>
            The unique identifier for the related question.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMAnswerContent.LanguageID">
            <summary>
            The unique identifier for the related language.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMAnswerContent.DisplayIndex">
            <summary>
            The zero-based display index for this answer in the list of answers for the related question.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMAnswerContent.Content">
            <summary>
            The content of the answer.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMAnswerContent.Randomize">
            <summary>
            Whether the order that this answer is displayed should be random.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMAnswerContent.VisibilityExpression">
            <summary>
            The visibility expression for this answer.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMAnswerContent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMAnswerContent.#ctor(Brierley.FrameWork.Data.DomainModel.SMAnswerContent)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMConcept">
            <summary>
            A concept associated with a survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMConcept.ID">
            <summary>
            The unique identifier for this concept.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMConcept.SurveyID">
            <summary>
            The unique identifier for the associated survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMConcept.LanguageID">
            <summary>
            The unique identifier for the associated language.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMConcept.Name">
            <summary>
            The name of the concept.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMConcept.GroupName">
            <summary>
            The name of the group of concepts.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMConcept.Content">
            <summary>
            The content to be displayed for the concept at run time.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMConcept.ConstraintsXML">
            <summary>
            The constraints for the concept as XML.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMConcept.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMConcept.#ctor(Brierley.FrameWork.Data.DomainModel.SMConcept)">
            <summary>
            Copy constructor
            </summary>
            <param name="existing"></param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMConceptView">
            <summary>
            Records that a concept was shown to a particular respondent.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMConceptView.ID">
            <summary>
            The unique identifier for this concept view.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMConceptView.ConceptID">
            <summary>
            The unique identifier for the associated concept.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMConceptView.RespondentID">
            <summary>
            The unique identifier for the associated respondent.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMConceptView.StateID">
            <summary>
            The unique identifier for the associated state.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMCultureMap">
            <summary>
            Indicates a cultureMap used for taking surveys.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMCultureMap.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMCultureMap.ID">
            <summary>
            The unique identifier.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMCultureMap.LanguageID">
            <summary>
            The unique identifier for the associated language.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMCultureMap.Culture">
            <summary>
            Internet standard culture.  For example, 'en-US' indicates English language ('en') and 
            United States culture ('US').
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMCultureMap.Description">
            <summary>
            A description.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMDecision">
            <summary>
            A decision state within a survey's state diagram.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMDecision.ID">
            <summary>
            The unique identifier for this decision.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMDecision.StateID">
            <summary>
            The unique identifier for the associated state in the state diagram.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMDecision.Expression">
            <summary>
            An XML string containing a set of conditions.  Each condition is a valid BScript expression.  
            Each BScript expression must return a boolean value, and that value
            is used to determine flow in the state diagram at runtime.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.FulfillmentProviderProductMap">
            <summary>
            POCO for FulfillmentProviderProductMap. 
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.FulfillmentProviderProductMap.#ctor">
            <summary>
            Initializes a new instance of the FulfillmentProviderProductMap class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.FulfillmentProvider">
            <summary>
            POCO for FulfillmentProvider.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.FulfillmentProvider.#ctor">
            <summary>
            Initializes a new instance of the FulfillmentProvider class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMLanguage">
            <summary>
            Indicates a language used for taking surveys.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMLanguage.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMLanguage.ID">
            <summary>
            A unique identifier.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMLanguage.Description">
            <summary>
            A description.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer">
            <summary>
            The language-specific answer for a matrix question within a particular survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer.ID">
            <summary>
            A unique identifier.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer.QuestionContentID">
            <summary>
            The unique identifier for the related question content.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer.LanguageID">
            <summary>
            The unique identifier for the related language.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer.ColumnIndex">
            <summary>
            The zero-based display index for this answer in the list of answers for the related question.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer.AnswerControlType">
            <summary>
            Type of control used to render the answer.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer.ResponseMinVal">
            <summary>
            For validated types, the minimum valid value for the response as a string.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer.ResponseMaxVal">
            <summary>
            For validated types, the maximum valid value for the response as a string.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer.ColSum">
            <summary>
            Whether this column should be summarized.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer.#ctor(Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MemberOrder">
            <summary>
            POCO for MemberOrder.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MemberOrder.#ctor">
            <summary>
            Initializes a new instance of the MemberOrder class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMMessage">
            <summary>
            A message state within a survey's state diagram.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMMessage.ID">
            <summary>
            The unique identifier for this message.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMMessage.StateID">
            <summary>
            The unique identifier for the associated state in the state diagram.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMMessage.Content">
            <summary>
            The content to be displayed for the message at run time.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMQuestion">
            <summary>
            A question within a particular survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.ID">
            <summary>
            A unique identifier.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.StateID">
            <summary>
            The unique identifier for the related survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.EffectiveDate">
            <summary>
            The effective date.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.ExpirationDate">
            <summary>
            The expiration date.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.IsMatrix">
            <summary>
            Is this a question matrix?
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.HasOtherSpecify">
            <summary>
            For radio, checkbox, and multiselect text types, should an "Other - Specify" textbox be added?
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.MatrixPointScale">
            <summary>
            For question matrix, the size of the point scale (e.g., 7 point scale).
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.AnswerControlType">
            <summary>
            Type of control used to render the answer.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.AnswerOrientation">
            <summary>
            For radio, checkbox, and multiselect text types, the orientation of the answer list.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.ResponseMinVal">
            <summary>
            For validated types, the minimum valid value for the response as a string.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.ResponseMaxVal">
            <summary>
            For validated types, the maximum valid value for the response as a string.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.ResponseOptional">
            <summary>
            Whether the response to this question is optional.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.IsPiped">
            <summary>
            Whether the answers for this question are piped from the responses for another question.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.PipedStateID">
            <summary>
            The ID of the (question) state from which responses this question's anwers are piped.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.RowLimit">
            <summary>
            For matrix question, limits the number of rows displayed.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestion.ValidationTotal">
            <summary>
            For matrix question, sets the total that free form text boxes must equal to continue.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMQuestion.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMQuestion.#ctor(Brierley.FrameWork.Data.DomainModel.SMQuestion)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMQuestionContent">
            <summary>
            The language-specific text for a question within a particular survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestionContent.ID">
            <summary>
            A unique identifier.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestionContent.QuestionID">
            <summary>
            The unique identifier for the related question.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestionContent.LanguageID">
            <summary>
            The unique identifier for the related language.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestionContent.MatrixIndex">
            <summary>
            For matrix body content, the zero-based index for this item in the matrix.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestionContent.ContentType">
            <summary>
            The type of content represented by this object.  E.g., header text or body text.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestionContent.Content">
            <summary>
            The content of the question
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestionContent.VisibilityExpression">
            <summary>
            For matrix questions, expression used to determine whether this question is visible.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestionContent.Randomize">
            <summary>
            For matrix questions, whether the order that this question is displayed should be random.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMQuestionContent.RowSum">
            <summary>
            For matrix questions, whether this row should be summarized.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMQuestionContent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMQuestionContent.#ctor(Brierley.FrameWork.Data.DomainModel.SMQuestionContent)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMRespondent">
            <summary>
            Someone who can take a particular survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMRespondent.ID">
            <summary>
            A unique identifier.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMRespondent.MTouch">
            <summary>
            The mtouch code.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMRespondent.IPCode">
            <summary>
            The IPCode.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMRespondent.SurveyID">
            <summary>
            The unique identifier for the related survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMRespondent.LanguageID">
            <summary>
            The unique identifier for the related language.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMRespondent.StartDate">
            <summary>
            The date/time the respondent started the survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMRespondent.CompleteDate">
            <summary>
            The date/time the respondent completed the survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMRespondent.Skipped_Char">
            <summary>
            Whether this respondent has been terminated from a survey due to a skip pattern.
            This field is the one stored in the database and should be 'T' or 'F'.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMRespondent.Skipped">
            <summary>
            Whether this respondent has been terminated from a survey due to a skip pattern.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMRespondent.PropertiesXML">
            <summary>
            Any properties (as XML) associated with this respondent.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMRespondent.RespListID">
            <summary>
            Used to manage a group of respondents
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMResponse">
            <summary>
            An answer to a question on a survey by a respondent.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.ID">
            <summary>
            A unique identifier.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.RespondentID">
            <summary>
            The unique identifier of the associated Respondent.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.StateID">
            <summary>
            The related State.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.QuestionContentID">
            <summary>
            The related QuestionContent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.AnswerContentID">
            <summary>
            For non free-form text answers, this is the related AnswerContent.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.PipedResponseID">
            <summary>
            For piped matrix questions, this is the response from which this response has been piped.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.MatrixAnswerID">
            <summary>
            For matrix answers, this is the related MatrixAnswer.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.ColumnIndex">
            <summary>
            For matrix answers, this is the column index.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.Content">
            <summary>
            For free-form text answers, this is the actual content.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.PipedContent">
            <summary>
            For piped questions, this is the piped content.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.StartDate">
            <summary>
            The date/time this the related question was started.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMResponse.CompleteDate">
            <summary>
            The date/time the response was completed for the related question.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMState">
            <summary>
            A state in the survey's state diagram
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMState.ID">
            <summary>
            A unique identifier.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMState.SurveyID">
            <summary>
            The unique identifier for the related survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMState.StateType">
            <summary>
            The type of state.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMState.UIPositionX">
            <summary>
            The "X" (horizontal) position of the state in the state diagram.  Measured from the top of the canvas, starting at 1.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMState.UIPositionY">
            <summary>
            The "Y" (vertical) position of the state in the state diagram.  Measured from the left side of the canvas, starting at 1.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMState.Page">
            <summary>
            The page for this state.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMState.UIName">
            <summary>
            The name of the state as seen in the state diagram.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMState.UIDescription">
            <summary>
            A description of the state as seen in the state diagram.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMState.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMState.#ctor(Brierley.FrameWork.Data.DomainModel.SMState)">
            <summary>
            Copy constructor
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMState.GetInputs(Brierley.FrameWork.Data.ServiceConfig)">
            <summary>
            A collection of transitions that terminate in this state.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMState.GetOutputs(Brierley.FrameWork.Data.ServiceConfig)">
            <summary>
            A collection of transitions that originate in this state.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMStateCollection">
            <summary>
            A collection of states for a given survey.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateCollection.#ctor(Brierley.FrameWork.Data.ServiceConfig,System.Int64)">
            <summary>
            Constructor.
            </summary>
            <param name="surveyID">the ID of the associated survey</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateCollection.Add(Brierley.FrameWork.Data.DomainModel.SMState)">
            <summary>
            Add a state to the collection
            </summary>
            <param name="state">state to add</param>
            <returns>the unique ID assigned to the state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateCollection.Update(Brierley.FrameWork.Data.DomainModel.SMState)">
            <summary>
            Update the specified state.
            </summary>
            <param name="state">changed state</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateCollection.Remove(Brierley.FrameWork.Data.DomainModel.SMState)">
            <summary>
            Remove the specified state.
            </summary>
            <param name="state">state to remove</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateCollection.Remove(System.Int64)">
            <summary>
            Remove the specified state.
            </summary>
            <param name="stateID">unique ID of the state to remove</param>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMStateCollection.Item(System.Int64)">
            <summary>
            Get a state from the collection based on it's unique ID
            </summary>
            <param name="stateID">unique ID of the state</param>
            <returns>the specified state, or null if it does not exist in the collection</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.#ctor(Brierley.FrameWork.Data.ServiceConfig)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.Initialize">
            <summary>
            Initialize the state model to a resting state.  If false is returned, Status property indicates the cause.
            </summary>
            <returns>true if the survey is on a resting state, otherwise false</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.Reset">
            <summary>
            Reset the state model
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.GetCurrentQuestion">
            <summary>
            Gets the current question.
            </summary>
            <returns>current question, or null if not exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.GetCurrentMessage">
            <summary>
            Gets the current message
            </summary>
            <returns>current message, or null if not exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.GetCurrentRestingState">
            <summary>
            Gets the current resting state.
            </summary>
            <returns>next resting state, or null if not exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.GetCurrentRestingStateAsXML">
            <summary>
            Get the current resting state as XML.
            </summary>
            <returns>XML string</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.GetNextRestingState">
            <summary>
            Gets the next resting state.
            </summary>
            <returns>next resting state, or null if not exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.GetSimpleQuestionContent(Brierley.FrameWork.Data.DomainModel.SMQuestion)">
            <summary>
            Get the content of a non-matrix question.
            </summary>
            <param name="question">a non-matrix question</param>
            <returns>question content, or null if not exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.GetMatrixQuestionHeader(Brierley.FrameWork.Data.DomainModel.SMQuestion)">
            <summary>
            Get the header of a matrix question.
            </summary>
            <param name="question">a matrix question</param>
            <returns>question header, or null if not exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.GetMatrixQuestionContent(Brierley.FrameWork.Data.DomainModel.SMQuestion)">
            <summary>
            Get the list of content of a matrix question.
            </summary>
            <param name="question">a matrix question</param>
            <returns>list of question content</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.GetMatrixQuestionAnchors(Brierley.FrameWork.Data.DomainModel.SMQuestion)">
            <summary>
            Get the list of anchor text of a matrix question.
            </summary>
            <param name="question">a matrix question</param>
            <returns>list of question content</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.GetMatrixAnswers(Brierley.FrameWork.Data.DomainModel.SMQuestion)">
            <summary>
            Get the answers for a matrix question.
            </summary>
            <param name="question">a matrix question</param>
            <returns>list of matrix answers</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.GetAnswerContent(Brierley.FrameWork.Data.DomainModel.SMQuestion)">
            <summary>
            Get the list of answer content of a question.
            </summary>
            <param name="question">a question</param>
            <returns>list of answer content</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.PostMatrixAnswers(Brierley.FrameWork.Data.DomainModel.SMQuestion,System.Collections.Generic.List{System.Collections.Generic.List{System.String}},System.Collections.Generic.List{System.Int32})">
            <summary>
            Post the set of all responses for a matrix question
            </summary>
            <param name="question">matrix question</param>
            <param name="answers">list of list containing an answer for each cell of the matrix</param>
            /// <param name="radioAnswers">list containing an answer index (0..n-1) for each row of the matrix</param>
            <returns>true if response was posted, false otherwise</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.Validate(System.Collections.Generic.List{Brierley.FrameWork.Data.DomainModel.SMValidationMessage}@)">
            <summary>
            Validate the state model.
            </summary>
            <param name="warnings">list of warnings received while validating the state model</param>
            <returns>true if valid, false otherwise</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.CheckForCycles">
            <summary>
            Check for cycles in the state model.  Throws CircularPathException if a cycle is detected.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.FindStateByID(System.Int64)">
            <summary>
            Find a state by it's unique identifier
            </summary>
            <param name="stateID">unique identifier for the state</param>
            <returns>state, or null if not exists</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.FindStartState">
            <summary>
            Find the start state.
            </summary>
            <returns>start state, or null if not exists</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMStateModel.FindCycles(System.Int64,System.Collections.Generic.Stack{System.Int64})">
            <summary>
            Find cycles using a depth first search.  Throws CircularPathException if a cycle is detected.
            </summary>
            <param name="currentState">the current state being examined</param>
            <param name="visitedStates">chain of states leading from currentState to the starter state</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMSurvey">
            <summary>
            Contains the information related to a survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.ID">
            <summary>
            A unique identifier for the survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.Name">
            <summary>
            The name of the survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.FolderId">
            <summary>
            Gets or sets the folder id for the current survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.Description">
            <summary>
            A description of the survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.EffectiveDate">
            <summary>
            The date/time upon which the survey becomes effective.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.ExpirationDate">
            <summary>
            The date/time upon which the survey expires.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.EmailID">
            <summary>
            The associated Email to be used for sending a "Thank You" email message.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.SurveyType">
            <summary>
            Type of survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.SurveyAudience">
            <summary>
            The type of survey audience.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.DisplayOrder">
            <summary>
            A number indicating the relative display order to use when showing this survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.SurveyCompleteEventId">
            <summary>
            The ID for the event to use when the survey is completed successfully.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.SurveyTerminateAndTallyEventId">
            <summary>
            The ID for the event to use when the survey is completed as a "terminate and tally".
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.TemplateID">
            <summary>
            The ID for a template associated with this survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.DocumentID">
            <summary>
            The ID for a document associated with this survey.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMSurvey.SurveyStatus">
            <summary>
            Status of survey.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMSurvey.#ctor">
            <summary>
            Initializes a new instance of the Survey class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMSurvey.#ctor(Brierley.FrameWork.Data.DomainModel.SMSurvey)">
            <summary>
            Copy constructor
            </summary>
            <param name="existing"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMSurvey.GetStates(Brierley.FrameWork.Data.ServiceConfig)">
            <summary>
            The states associated with this survey.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMTransition">
            <summary>
            Represents a directed transition from a source state to a destination state.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMTransition.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMTransition.SrcStateID">
            <summary>
            The unique ID of the source state for the transition.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMTransition.SrcConnectorIndex">
            <summary>
            The index of the output connector on the source state to which the transition is originating.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMTransition.DstStateID">
            <summary>
            The unique ID of the destination state for the transition.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMTransition.DstConnectorIndex">
            <summary>
            The index of the input connector on the destination state to which the transition is terminating.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SMTransition.Page">
            <summary>
            The page for this transition.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMTransition.Equals(System.Object)">
            <summary>
            Equality operator for two transitions
            </summary>
            <param name="obj">transition used for equality test</param>
            <returns>true if the transitions are equal, or false if they are not equal, or the argument is not a transition</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMTransition.GetHashCode">
            <summary>
            Get the hash code value for this instance.
            </summary>
            <returns>hash code</returns>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SMTransitionCollection">
            <summary>
            A collection of transitions for a particular state.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMTransitionCollection.#ctor(Brierley.FrameWork.Data.ServiceConfig,System.Int64,Brierley.FrameWork.Common.TransitionCollectionType)">
            <summary>
            Constructor.
            </summary>
            <param name="stateID">the unique ID for the associated state</param>
            <param name="transitionCollectionType">the type of transitions in the collection: "Input" for those entering the state, or "Output" for those leaving</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMTransitionCollection.Add(Brierley.FrameWork.Data.DomainModel.SMTransition)">
            <summary>
            Add a transition to the collection.
            </summary>
            <param name="transition">transition to add</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SMTransitionCollection.Clear">
            <summary>
            Remove all transitions from the collection.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Location">
            <summary>
            Indicates the location of a mobile device (iPhone or Android) at a point in time.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Location.Latitude">
            <summary>
            The latitude of the location measured in +/- degrees
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Location.Longitude">
            <summary>
            The longitude of the location measured in +/- degrees
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Location.Altitude">
            <summary>
            The altitude of the location measured in +/- meters
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Location.Speed">
            <summary>
            The non-negative speed of travel measured in meters/second
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Location.Heading">
            <summary>
            The non-negative compass heading measured in degrees east of due north
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Location.PositionAccuracy">
            <summary>
            The non-negative radius of lattitude/longitude accuracy measured in meters
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Location.AltitudeAccuracy">
            <summary>
            The non-negative altitude accuracy measured in meters
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Location.WhenDetermined">
            <summary>
            The date/time when the location was determined
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ProductVariant">
            <summary>
            POCO for ProductVariant. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ProductVariant.ID">
            <summary>
            Gets or sets the ID for the current ProductVariant
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ProductVariant.ProductId">
            <summary>
            Gets or sets the ProductId for the current ProductVariant
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ProductVariant.VariantDescription">
            <summary>
            Gets or sets the VariantDescription for the current ProductVariant
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ProductVariant.PartNumber">
            <summary>
            Gets or sets the PartNumber for the current ProductVariant
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ProductVariant.Quantity">
            <summary>
            Gets or sets the Quantity for the current ProductVariant
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ProductVariant.QuantityThreshold">
            <summary>
            Gets or sets the Threshold for the current ProductVariant
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ProductVariant.VariantOrder">
            <summary>
            Gets or sets the VariantOrder for the current ProductVariant
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ProductVariant.#ctor">
            <summary>
            Initializes a new instance of the ProductVariant class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.EmailQueueSummaryItem">
            <summary>
            Class used for email resend grid.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueueSummaryItem.ID">
            <summary>
            The row number in the result
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueueSummaryItem.EmailID">
            <summary>
            The ID of the email which this send belongs to.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueueSummaryItem.Name">
            <summary>
            The name of the email which this send belongs to.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueueSummaryItem.MessageType">
            <summary>
            The type of message that was sent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueueSummaryItem.FailureReason">
            <summary>
            Reason for the last send failure
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueueSummaryItem.SendCount">
            <summary>
            The count of queued sends.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.EmailQueue">
            <summary>
            Class used for queue failed email sends.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueue.ID">
            <summary>
            The queued item's unique ID in the framework database.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueue.EmailID">
            <summary>
            The ID of the email which this send belongs to.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueue.MessageType">
            <summary>
            The type of message that was sent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueue.Records">
            <summary>
            The fields for the send.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueue.EmailFailureType">
            <summary>
            Reason for the last send failure
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueue.SendAttempts">
            <summary>
            # times email has been sends have been attempted
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailQueue.LastSendAttempt">
            <summary>
            Date of last send attempt
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.StoreDef">
            <summary>
            This class defines a Store.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.Id">
            <summary>
            
            </summary>
            <remarks>
            We want to ignore this column on insert
            table lw_storedef does not contains Id column
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.StoreId">
            <summary>
            Gets or sets the StoreId for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.StoreNumber">
            <summary>
            Gets or sets the StoreNumber for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.StoreName">
            <summary>
            Gets or sets the StoreName for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.BrandName">
            <summary>
            Gets or sets the BrandName for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.BrandStoreNumber">
            <summary>
            Gets or sets the BrandStoreNumber for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.PhoneNumber">
            <summary>
            Gets or sets the PhoneNumber for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.AddressLineOne">
            <summary>
            Gets or sets the AddressLineOne for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.AddressLineTwo">
            <summary>
            Gets or sets the AddressLineTwo for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.City">
            <summary>
            Gets or sets the City for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.StateOrProvince">
            <summary>
            Gets or sets the StateOrProvince for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.ZipOrPostalCode">
            <summary>
            Gets or sets the ZipOrPostalCode for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.County">
            <summary>
            Gets or sets the County for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.Country">
            <summary>
            Gets or sets the Country for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.Status">
            <summary>
            Gets or sets the Status for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.StoreType">
            <summary>
            Gets or sets the Type for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.OpenDate">
            <summary>
            Gets or sets the OpenDate for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.CloseDate">
            <summary>
            Gets or sets the CloseDate for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.Longitude">
            <summary>
            Gets or sets the CloseDate for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.Latitude">
            <summary>
            Gets or sets the Latitude for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.Region">
            <summary>
            Gets or sets the Region for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.District">
            <summary>
            Gets or sets the District for the current StoreDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StoreDef.Zone">
            <summary>
            Gets or sets the Zone for the current StoreDef
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.StoreDef.#ctor">
            <summary>
            Initializes a new instance of the StoreDef class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ScheduledJobRun">
            <summary>
            POCO for ScheduledJobRun. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJobRun.ID">
            <summary>
            Gets or sets the Id for the current ScheduledJobRun
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJobRun.JobId">
            <summary>
            Gets or sets the Name for the current ScheduledJobRun
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJobRun.StartTime">
            <summary>
            Gets or sets the StartTime for the current ScheduledJobRun
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJobRun.EndTime">
            <summary>
            Gets or sets the EndTime for the current ScheduledJobRun
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJobRun.Status">
            <summary>
            Gets or sets the Status for the current ScheduledJobRun
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJobRun.Error">
            <summary>
            Gets or sets the Error for the current ScheduledJobRun
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ScheduledJobRun.#ctor">
            <summary>
            Initializes a new instance of the LWScheduledJob class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ScheduledJob">
            <summary>
            POCO for ScheduledJob. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.ID">
            <summary>
            Gets or sets the Id for the current ScheduledJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.Name">
            <summary>
            Gets or sets the Name for the current ScheduledJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.JobType">
            <summary>
            Gets or sets the JobType for the current ScheduledJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.AssemblyName">
            <summary>
            Gets or sets the AssemblyName for the current ScheduledJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.FactoryName">
            <summary>
            Gets or sets the FactoryName for the current ScheduledJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.Parms">
            <summary>
            Gets or sets the Parms for the current ScheduledJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.ExecuteInSeparateThread">
            <summary>
            Gets or sets the ExecuteInSeparateThread for the current ScheduledJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.PauseTimerWhileRunningJob">
            <summary>
            Gets or sets the PauseTimerWhileRunningJob for the current ScheduledJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.StartDate">
            <summary>
            Gets or sets the StartDate for the current ScheduledJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.EndDate">
            <summary>
            Gets or sets the EndDate for the current ScheduledJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.Schedule">
            <summary>
            Gets or sets the Schedule for the current ScheduledJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ScheduledJob.EmailReportTo">
            <summary>
            Gets or sets the email address of the person to email the job report to.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ScheduledJob.#ctor">
            <summary>
            Initializes a new instance of the LWScheduledJob class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Batch">
            <summary>
            A batch of structured content.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Batch.#ctor">
            <summary>
            Initializes a new instance of the Batch class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MemberCoupon">
            <summary>
            POCO for MemberCoupon. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.ID">
            <summary>
            Gets or sets the ID for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.CouponDefId">
            <summary>
            Gets or sets the CouponDefId for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.CertificateNmbr">
            <summary>
            Gets or sets the CertificateNmbr for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.MemberId">
            <summary>
            Gets or sets the MemberId for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.TimesUsed">
            <summary>
            Gets or sets the TimesUsed for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.DateIssued">
            <summary>
            Gets or sets the DateIssued for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.DateRedeemed">
            <summary>
            Gets or sets the DateRedeemed for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.StartDate">
            <summary>
            Gets or sets the StartDate for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.ExpiryDate">
            <summary>
            Gets or sets the ExpiryDate for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.DisplayOrder">
            <summary>
            Gets or sets the display order for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.CampaignId">
            <summary>
            Gets or sets the CampaignId of the campaign that loaded this for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.Status">
            <summary>
            Gets or sets the Status of the campaign that loaded this for the current MemberCoupon
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberCoupon.MTouchId">
            <summary>
            Gets or sets the Id of the MTouch associated with this coupon.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MemberCoupon.#ctor">
            <summary>
            Initializes a new instance of the MemberCoupon class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.CouponDef">
            <summary>
            This class defines a coupon.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CouponDef.Name">
            <summary>
            Gets or sets the Name for the current CouponDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CouponDef.CategoryId">
            <summary>
            Gets or sets the CategoryId for the current CouponDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CouponDef.CouponTypeCode">
            <summary>
            Gets or sets the CouponTypeCode for the current CouponDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CouponDef.FolderId">
            <summary>
            Gets or sets the folder id for the current CouponDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CouponDef.LogoFileName">
            <summary>
            Gets or sets the LogoFileName for the current CouponDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CouponDef.ShortDescription">
            <summary>
            Gets or sets the ShortDescription for the current CouponDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CouponDef.Description">
            <summary>
            Gets or sets the Description for the current CouponDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CouponDef.StartDate">
            <summary>
            Gets or sets the StartDate for the current CouponDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CouponDef.ExpiryDate">
            <summary>
            Gets or sets the ExpiryDate for the current CouponDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CouponDef.UsesAllowed">
            <summary>
            Gets or sets the UsesAllowed for the current CouponDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CouponDef.PushNotificationId">
            <summary>
            Gets or sets the PushNotificationId associated with the current CouponDef
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.CouponDef.#ctor">
            <summary>
            Initializes a new instance of the CouponDef class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MTouch.ID">
            <summary>
            Unique key for the mtouch record
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MTouch.MTouchValue">
            <summary>
            MTouch code (a GUID)
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MTouch.MTouchType">
            <summary>
            Type of MTouch
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MTouch.Available">
            <summary>
            Is this MTouch available?  It may have been pre-allocated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MTouch.EntityId">
            <summary>
            The human entity this MTouch is associated with.  E.g., for Email
            MTouch types, it is the email address of the user.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MTouch.UsesAllowed">
            <summary>
            Gets or sets the maximum number of uses allowed for the MTouch
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MTouch.SecondaryId">
            <summary>
            This is a secondary ID for the MTouch used to associate it with
            some other item in the database.  For example, for a promotion
            type MTouch, it represents the ID of the associated promotion.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MTouch.#ctor">
            <summary>
            Initializes a new instance of the MTouch class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MemberBonus">
            <summary>
            This class defines an advertising offer in member's account.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberBonus.ID">
            <summary>
            Gets or sets the Id for the current MemberOffer
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberBonus.BonusDefId">
            <summary>
            Gets or sets the AdvertismentDefId for the current MemberOffer
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberBonus.MemberId">
            <summary>
            Gets or sets the MemberId for the current MemberOffer
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberBonus.MTouchId">
            <summary>
            Gets or sets the MTouch Id for the current MemberOffer
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberBonus.TimesClicked">
            <summary>
            Gets or sets the TimesClicked for the current MemberOffer
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberBonus.Status">
            <summary>
            Gets or sets the status for the current MemberBonus
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberBonus.ReferralCompleted">
            <summary>
            Gets or sets ReferralCompleted for the current MemberOffer
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MemberBonus.#ctor">
            <summary>
            Initializes a new instance of the MemberOffer class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.BonusDef">
            <summary>
            This class defines an advertising message.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.BonusDef.#ctor">
            <summary>
            Initializes a new instance of the BonusDef class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.Name">
            <summary>
            Gets or sets the Name for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.CategoryId">
            <summary>
            Gets or sets the CategoryId for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.FolderId">
            <summary>
            Gets or sets the folder id for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.LogoImageHero">
            <summary>
            Gets or sets the LogoImageHero for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.LogoImageWeb">
            <summary>
            Gets or sets the LogoImageWeb for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.LogoImageMobile">
            <summary>
            Gets or sets the LogoImageMobile for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.Description">
            <summary>
            Gets or sets the Description for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.Headline">
            <summary>
            Gets or sets the Headline for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.FinishedHtml">
            <summary>
            Gets or sets the FinishedHtml for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.QuotaMetHtml">
            <summary>
            Gets or sets the QuotaMetHtml for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.HtmlContent">
            <summary>
            Gets or sets the QuotaMetHtml for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.ReferralLabel">
            <summary>
            Gets or sets the ActionText for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.GoButtonLabel">
            <summary>
            Gets or sets the GoButtonLabel for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.Points">
            <summary>
            Gets or sets the Points for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.SurveyText">
            <summary>
            Gets or sets the SurveyText for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.SurveyId">
            <summary>
            Gets or sets the SurveyId for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.SurveyPointsExpression">
            <summary>
            Gets or sets expression for survey points for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.MovieUrl">
            <summary>
            Gets or sets the MovieUrl for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.ReferralUrl">
            <summary>
            Gets or sets the ReferralUrl for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.DisplayOrder">
            <summary>
            Gets or sets the display order of the BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.StartDate">
            <summary>
            Gets or sets the StartDate for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.ExpiryDate">
            <summary>
            Gets or sets the expiration date of the bonus
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.Quota">
            <summary>
            Gets or sets the Quota for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.ApplyQuotaToReferral">
            <summary>
            Gets or sets the ApplyQuotaToReferral for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.BonusDef.Completed">
            <summary>
            Gets or sets the Completed for the current BonusDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWSchemaVersion.Id">
            <summary>
            Gets or sets the Id for the Version
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWSchemaVersion.TargetType">
            <summary>
            Gets or sets the TargetType for the Version
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWSchemaVersion.VersionNumber">
            <summary>
            Gets or sets the VersionNumber for the Version
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWSchemaVersion.AppliedBy">
            <summary>
            Gets or sets the AppliedBy for the Version
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LWSchemaVersion.DateApplied">
            <summary>
            Gets or sets the DateApplied for the Version
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.LWSchemaVersion.#ctor">
            <summary>
            Initializes a new instance of the Version class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.TemplateContentArea.#ctor">
            <summary>
            Initializes a new instance of the TemplateContentArea class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TextBlock.Name">
            <summary>
            Gets or sets the Name for the current TextBlock
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TextBlock.Description">
            <summary>
            Gets or sets the Description for the current TextBlock
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TextBlock.Version">
            <summary>
            Gets or sets the Version for the current TextBlock
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TextBlock.IsLocked">
            <summary>
            Gets or sets the IsLocked for the current TextBlock
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TextBlock.Content">
            <summary>
            Gets or sets the Content for the current TextBlock
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.TextBlock.#ctor">
            <summary>
            Initializes a new instance of the TextBlock class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.CSAgent.#ctor">
            <summary>
            Initializes a new instance of the CSAgent class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.Id">
            <summary>
            Gets or sets the ID for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.RoleId">
            <summary>
            Gets or sets the RoleId for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.GroupId">
            <summary>
            Gets or sets the GroupId for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.AgentNumber">
            <summary>
            Gets or sets the AgentNumber for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.FirstName">
            <summary>
            Gets or sets the FirstName for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.LastName">
            <summary>
            Gets or sets the LastName for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.EmailAddress">
            <summary>
            Gets or sets the EmailAddress for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.PhoneNumber">
            <summary>
            Gets or sets the PhoneNumber for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.Extension">
            <summary>
            Gets or sets the Extension for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.Username">
            <summary>
            Gets or sets the Username for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.FailedPasswordAttemptCount">
            <summary>
            Gets or sets the FailedPasswordAttemptCount for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.Password">
            <summary>
            Gets or sets the Password for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.Salt">
            <summary>
            Gets or sets the Salt for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.PasswordChangeRequired">
            <summary>
            Gets or sets the PasswordChangeRequired for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.PasswordExpireDate">
            <summary>
            Gets or sets the PasswordExpiredDate for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.Status">
            <summary>
            Gets or sets the Status for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.ResetCode">
            <summary>
            Gets or sets the ResetCode for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSAgent.ResetCodeDate">
            <summary>
            Gets or sets the ResetCodeDate for the current CSAgent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSNote.Id">
            <summary>
            Gets or sets the ID for the current CSNote
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSNote.MemberId">
            <summary>
            Gets or sets the MemberId for the current CSNote
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSNote.Note">
            <summary>
            Gets or sets the Note for the current CSNote
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSNote.CreatedBy">
            <summary>
            Gets or sets the CreatedBy for the current CSNote
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSNote.Deleted">
            <summary>
            Gets or sets the Deleted for the current CSNote
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.CSNote.#ctor">
            <summary>
            Initializes a new instance of the CSNote class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSRoleFunction.Id">
            <summary>
            Gets or sets the ID for the current CSRoleFunction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSRoleFunction.RoleId">
            <summary>
            Gets or sets the RoleId for the current CSRoleFunction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSRoleFunction.FunctionId">
            <summary>
            Gets or sets the FunctionId for the current CSRoleFunction
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.CSRoleFunction.#ctor">
            <summary>
            Initializes a new instance of the CSRoleFunction class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.CSRole.#ctor">
            <summary>
            Initializes a new instance of the CSRole class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSRole.Id">
            <summary>
            Gets or sets the ID for the current CSRole
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSRole.Name">
            <summary>
            Gets or sets the Name for the current CSRole
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSRole.Description">
            <summary>
            Gets or sets the Description for the current CSRole
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSRole.PointAwardLimit">
            <summary>
            Gets or sets the maximum number of points the role is allowed to award to a member.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSFunction.Id">
            <summary>
            Gets or sets the ID for the current CSFunction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSFunction.Name">
            <summary>
            Gets or sets the Name for the current CSFunction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.CSFunction.Description">
            <summary>
            Gets or sets the Description for the current CSFunction
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.CSFunction.#ctor">
            <summary>
            Initializes a new instance of the CSFunction class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MemberPromotion">
            <summary>
            POCO for MemberPromotion.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberPromotion.Id">
            <summary>
            Gets or sets the ID for the current MemberPromotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberPromotion.Code">
            <summary>
            Gets or sets the Code for the current MemberPromotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberPromotion.MemberId">
            <summary>
            Gets or sets the MemberId for the current MemberPromotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberPromotion.MTouchId">
            <summary>
            Gets or sets the Id of the MTouch associated with this coupon.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberPromotion.CertificateNmbr">
            <summary>
            Gets or sets the CertificateNmbr for the current MemberPromotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberPromotion.Enrolled">
            <summary>
            gets or sets whether or not the member has enrolled into the promotion.
            </summary>
            <remarks>
            Applicable only when the promotion definition either supports or requires enrollment.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MemberPromotion.#ctor">
            <summary>
            Initializes a new instance of the MemberPromotion class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Promotion">
            <summary>
            POCO for Promotion.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion.Code">
            <summary>
            Gets or sets the Code for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion.Name">
            <summary>
            Gets or sets the Name for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion.PromotionDescription">
            <summary>
            Gets or sets the Internal Description for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion.PromotionName">
            <summary>
            Gets or sets the Name for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion.Description">
            <summary>
            Gets or sets the Description for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion.EnrollmentSupportType">
            <summary>
            Gets or sets the type of enrollment supported by the promotion.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion.FolderId">
            <summary>
            Gets or sets the Folder Id for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion.StartDate">
            <summary>
            Gets or sets the StartDate for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion.EndDate">
            <summary>
            Gets or sets the EndDate for the current Promotion
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion.Content">
            <summary>
            Gets or sets the Content for the current MessageDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Promotion.DisplayOrder">
            <summary>
            Gets or sets the DisplayOrder for the current MessageDef
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Promotion.#ctor">
            <summary>
            Initializes a new instance of the Promotion class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Category">
            <summary>
            A hierchical category for a Category. 
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Category.ID">
            <summary>
            Gets or sets the ID for the current Category
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Category.ParentCategoryID">
            <summary>
            Gets or sets the ParentCategoryID for the current Category
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Category.IsVisibleInLn">
            <summary>
            Gets or sets the IsVisibleInLn for the current Category
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Category.Name">
            <summary>
            Gets or sets the Name for the current Category
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Category.Description">
            <summary>
            Gets or sets the Description for the current Category
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Category.CategoryType">
            <summary>
            Gets or sets the CategoryType for the current Category
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Category.#ctor">
            <summary>
            Initializes a new instance of the Category class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Product">
            <summary>
            POCO for Product. This class is autogenerated
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Product.#ctor">
            <summary>
            Initializes a new instance of the Product class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.CategoryId">
            <summary>
            Gets or sets the CategoryId for the current Product
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.IsVisibleInLn">
            <summary>
            Gets or sets the IsVisibleInLn for the current Product
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.Name">
            <summary>
            Gets or sets the Name for the current Product
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.BrandName">
            <summary>
            Gets or sets the BrandName for the current Product
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.PartNumber">
            <summary>
            Gets or sets the PartNumber for the current Product
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.ShortDescription">
            <summary>
            Gets or sets the ShortDescription for the current Product
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.LongDescription">
            <summary>
            Gets or sets the LongDescription for the current Product
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.BasePrice">
            <summary>
            Gets or sets the BasePrice for the current Product
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.PointType">
            <summary>
            Gets or sets the PointType for the current Product
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.Quantity">
            <summary>
            Gets or sets the Quantity for the current Product
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.QuantityThreshold">
            <summary>
            Gets or sets the Threshold for the current Product
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Product.CreatedByUser">
            <summary>
            Gets or sets the CreatedByUser for the current Product
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ProductImage">
            <summary>
            POCO for ProductImage. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ProductImage.ID">
            <summary>
            Gets or sets the ID for the current ProductImage
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ProductImage.ProductId">
            <summary>
            Gets or sets the ProductId for the current ProductImage
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ProductImage.Image">
            <summary>
            Gets or sets the Image for the current ProductImage
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ProductImage.ImageOrder">
            <summary>
            Gets or sets the Order for the current ProductImage
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ProductImage.#ctor">
            <summary>
            Initializes a new instance of the ProductImage class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ProductImage.#ctor(System.Int64,System.String,System.Int64)">
            <summary>
            Initializes a new instance of the ProductImage class
            </summary>
            <param name="productId">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.ProductImage.ProductId" /> value</param>
            <param name="image">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.ProductImage.Image" /> value</param>
            <param name="imageOrder">Initial <see cref="!:ProductImage.Order" /> value</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ProductImage.#ctor(System.Int64)">
            <summary>
            Minimal constructor for class ProductImage
            </summary>
            <param name="productId">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.ProductImage.ProductId" /> value</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute">
            <summary>
            An attribute definition for structured content.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute.ID">
            <summary>
            Gets or sets the ID for the current StructuredContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute.Name">
            <summary>
            Gets or sets the Name for the current StructuredContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute.DataType">
            <summary>
            Gets or sets the DataType for the current StructuredContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute.DefaultValue">
            <summary>
            Gets or sets the DefaultValue for the current StructuredContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute.IsMandatory">
            <summary>
            Gets or sets the IsMandatory for the current StructuredContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute.IsGlobal">
            <summary>
            Gets or sets the IsGlobal for the current StructuredContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute.ElementID">
            <summary>
            Gets or sets the ElementID for the current StructuredContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute.IsFilter">
            <summary>
            Gets or sets the IsFilter for the current StructuredContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute.FilterOrder">
            <summary>
            Gets or sets the FilterOrder for the current StructuredContentAttribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute.ListField">
            <summary>
            Gets or sets the ListField for the current StructuredContentAttribute
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute.#ctor">
            <summary>
            Initializes a new instance of the StructuredContentAttribute class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.StructuredContentData">
            <summary>
            A structured content datum.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentData.ID">
            <summary>
            Gets or sets the ID for the current StructuredContentData
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentData.BatchID">
            <summary>
            Gets or sets the BatchId for the current StructuredContentData
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentData.SequenceID">
            <summary>
            Gets or sets the SequenceID for the current StructuredContentData
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentData.AttributeID">
            <summary>
            Gets or sets the AttributeId for the current StructuredContentData
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentData.Data">
            <summary>
            Gets or sets the Data for the current StructuredContentData
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.StructuredContentData.#ctor">
            <summary>
            Initializes a new instance of the StructuredContentData class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.StructuredContentElement">
            <summary>
            Structured Content Element
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentElement.ID">
            <summary>
            Gets or sets the ID for the current StructuredContentElement
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredContentElement.Name">
            <summary>
            Gets or sets the Name for the current StructuredContentElement
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.StructuredContentElement.#ctor">
            <summary>
            Initializes a new instance of the StructuredContentElement class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.StructuredDataRows">
            <summary>
            A collection of structured data, usually the result of evaluating a data filter.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.StructuredDataRows.GetRow(System.Int32)">
            <summary>
            Get a row of data.
            </summary>
            <param name="index">zero-based index of the row</param>
            <returns>System.Data.DataRow containing the row of data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.StructuredDataRows.GetCurrentRow">
            <summary>
            Get the current row of data.
            </summary>
            <returns>System.Data.DataRow containing the row of data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.StructuredDataRows.GetCurrentRow(System.Boolean)">
            <summary>
            Get the current row of data.
            </summary>
            <param name="incrementToNextRow">boolean indicating whether row index should be incremented</param>
            <returns>System.Data.DataRow containing the row of data</returns>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredDataRows.Item(System.Int32)">
            <summary>
            Get a row of data.
            </summary>
            <param name="index">zero-based index of the row</param>
            <returns>System.Data.DataRow containing the row of data</returns>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredDataRows.Table">
            <summary>
            The underlying System.Data.DataTable.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredDataRows.CurrentRowIndex">
            <summary>
            Indicates the current index in the row of data.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.StructuredDataRows.Count">
            <summary>
            Indicates the number of rows of data.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Document">
            <summary>
            A document in the content management system.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Document.ID">
            <summary>
            Gets or sets the ID for the current Document
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Document.TemplateID">
            <summary>
            Gets or sets the TemplateID for the current Document
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Document.Name">
            <summary>
            Gets or sets the Name for the current Document
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Document.DocumentType">
            <summary>
            Gets or sets the DocumentType for the current Document
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Document.Version">
            <summary>
            Gets or sets the Version for the current Document
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Document.IsLocked">
            <summary>
            Gets or sets the IsLocked for the current Document
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Document.Properties">
            <summary>
            Gets or sets the Properties for the current Document
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Document.HtmlContentAreas">
            <summary>
            Gets or sets the HtmlContentAreas for the current Document
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Document.TextContentAreas">
            <summary>
            Gets or sets the TextContentAreas for the current Document
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Document.PostProcessingConfig">
            <summary>
            Gets or sets the PostProcessingConfig for the current email
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Document.#ctor">
            <summary>
            Initializes a new instance of the Document class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Document.#ctor(Brierley.FrameWork.Data.DomainModel.Document)">
            <summary>
            Copy constructor
            </summary>
            <param name="other">other document to copy</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.SyncJob">
            <summary>
            POCO for LIBJob.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SyncJob.MessageId">
            <summary>
            Gets or sets the MessageId for the current SyncJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SyncJob.Source">
            <summary>
            Gets or sets the Source for the current SyncJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SyncJob.OperationName">
            <summary>
            Gets or sets the OperationName for the current SyncJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SyncJob.OperationParm">
            <summary>
            Gets or sets the OperationParm for the current SyncJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SyncJob.Status">
            <summary>
            Gets or sets the Status for the current SyncJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SyncJob.StartTime">
            <summary>
            Gets or sets the StartTime for the current SyncJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SyncJob.EndTime">
            <summary>
            Gets or sets the EndTime for the current SyncJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SyncJob.Response">
            <summary>
            Gets or sets the Response for the current SyncJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.SyncJob.ElapsedTime">
            <summary>
            returns the elapsed time the job took to complete, in milliseconds
            </summary>
            <remarks>
            This must be used 
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.SyncJob.#ctor">
            <summary>
            Initializes a new instance of the LIBJob class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.EmailDocument">
            <summary>
            An email.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailDocument.Id">
            <summary>
            Gets or sets the id for the current Email
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailDocument.ExternalId">
            <summary>
            Gets or sets the external (Teradata DMC) Id for the email.
            </summary>
            <remarks>
            This property uniquely identifies the email in a 3rd party's system. It is used to retrieve 
            personalizations (fields) for the email as well as invoking a send of the email through their API.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailDocument.FolderId">
            <summary>
            Gets or sets the folder id for the current Email
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailDocument.Name">
            <summary>
            Gets or sets the name for the current Email
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailDocument.Description">
            <summary>
            Gets or sets the description for the current Email
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailDocument.DocumentId">
            <summary>
            Gets or sets the DocumentID for the current Email
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailDocument.FromEmail">
            <summary>
            Gets or sets the ReplyTo for the current Email
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailDocument.BounceEmail">
            <summary>
            Gets or sets the bounce address the current Email
            </summary>
            <remarks>
            For Amazon SES, this is used for the ReturnPath, which is used to send 
            bounce/complaint feedback via email to the address specified.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.EmailDocument.Subject">
            <summary>
            Gets or sets the Subject for the current Email
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.EmailDocument.#ctor">
            <summary>
            Initializes a new instance of the Email class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Template">
            <summary>
            A template in the content management system.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Template.ID">
            <summary>
            Gets or sets the ID for the current Template
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Template.Name">
            <summary>
            Gets or sets the Name for the current Template
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Template.Description">
            <summary>
            Gets or sets the Description for the current Template
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Template.TemplateType">
            <summary>
            Gets or sets the TemplateType for the current Template
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Template.Version">
            <summary>
            Gets or sets the Version for the current Template
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Template.IsLocked">
            <summary>
            Gets or sets the IsLocked for the current Template
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Template.Fields">
            <summary>
            Gets or sets the Fields for the current Template
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Template.HtmlContent">
            <summary>
            Gets or sets the HtmlContent for the current Template
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Template.TextContent">
            <summary>
            Gets or sets the TextContent for the current Template
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Template.FolderId">
            <summary>
            Gets or sets the folder id for the current Template
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Template.#ctor">
            <summary>
            Initializes a new instance of the Template class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Template.#ctor(Brierley.FrameWork.Data.DomainModel.Template)">
            <summary>
            Copy constructor
            </summary>
            <param name="other">other template to copy</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.IDGenerator">
            <summary>
            POCO for IDGenerator.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.IDGenerator.ObjectName">
            <summary>
            Gets or sets the ObjectName for the current IDGenerator
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.IDGenerator.SeedValue">
            <summary>
            Gets or sets the SeedValue for the current IDGenerator
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.IDGenerator.IncrValue">
            <summary>
            Gets or sets the IncrValue for the current IDGenerator
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.IDGenerator.PrevValue">
            <summary>
            Gets or sets the PrevValue for the current IDGenerator
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.IDGenerator.#ctor">
            <summary>
            Initializes a new instance of the IDGenerator class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.IDGenerator.#ctor(System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the IDGenerator class
            </summary>
            <param name="objectName">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.IDGenerator.ObjectName" /> value</param>
            <param name="seedValue">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.IDGenerator.SeedValue" /> value</param>
            <param name="incrValue">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.IDGenerator.IncrValue" /> value</param>
            <param name="prevValue">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.IDGenerator.PrevValue" /> value</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.AttributeMetaData">
            <summary>
            POCO for Attribute. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.ID">
            <summary>
            Gets or sets the ID for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.Status">
            <summary>
            Gets or sets the Status for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.Name">
            <summary>
            Gets or sets the Name for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.DataType">
            <summary>
            Gets or sets the DataType for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.AttributeSetCode">
            <summary>
            Gets or sets the AttributeSetCode for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.IsRequired">
            <summary>
            Gets or sets the IsRequired for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.MinLength">
            <summary>
            Gets or sets the MinLength for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.MaxLength">
            <summary>
            Gets or sets the MaxLength for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.IsUnique">
            <summary>
            Gets or sets the IsUnique for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.EncryptionType">
            <summary>
            Gets or sets the EncryptionType for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.VisibleInGrid">
            <summary>
            Gets or sets the VisibleInGrid for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.CanBeUpdated">
            <summary>
            Gets or sets the CanBeUpdated for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.IsSortable">
            <summary>
            Gets or sets the IsSortable for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.DefaultValues">
            <summary>
            Gets or sets the DefaultValues for the current Attribute
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.DisplayText">
            <summary>
            Gets or sets the DisplayText for the current Attribute
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.AttributeMetaData.#ctor">
            <summary>
            Initializes a new instance of the Attribute class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData.ID">
            <summary>
            Gets or sets the ID for the current AttributeSet
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData.Name">
            <summary>
            Gets or sets the Name for the current AttributeSet
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData.Type">
            <summary>
            Gets or sets the Type for the current AttributeSet
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData.Category">
            <summary>
            Gets or sets the Category for the current AttributeSet
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData.EditableFromProgram">
            <summary>
            Gets or sets the EditableFromProgram for the current AttributeSet
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData.EditableFromCampaign">
            <summary>
            Gets or sets the EditableFromCampaign for the current AttributeSet
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData.ParentID">
            <summary>
            Gets or sets the ParentID for the current AttributeSet
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData.TableCreationDate">
            <summary>
            Gets or sets the TableCreationDate for the current AttributeSet
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData.#ctor">
            <summary>
            Initializes a new instance of the AttributeSet class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData.AsetAttributes">
            <summary>
            This property is really there for Xml serialization because serialization does not work
            on interfaces.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ClientConfiguration">
            <summary>
            POCO for ClientConfiguration. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ClientConfiguration.Key">
            <summary>
            Gets or sets the Key for the current ClientConfiguration
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ClientConfiguration.Value">
            <summary>
            Gets or sets the Value for the current ClientConfiguration
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ClientConfiguration.FolderId">
            <summary>
            Gets or sets the folder id for the current CouponDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ClientConfiguration.ExternalValue">
            <summary>
            Gets or sets the ExternalValue for the current ClientConfiguration
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ClientConfiguration.#ctor">
            <summary>
            Initializes a new instance of the ClientConfiguration class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.AsyncJob">
            <summary>
            POCO for AsyncJob. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AsyncJob.JobId">
            <summary>
            Gets or sets the JobId for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AsyncJob.JobNumber">
            <summary>
            Gets or sets the JobNumber for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AsyncJob.JobType">
            <summary>
            Gets or sets the JobType for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AsyncJob.JobName">
            <summary>
            Gets or sets the JobName for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AsyncJob.JobDirection">
            <summary>
            Gets or sets the JobDirection for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AsyncJob.FileName">
            <summary>
            Gets or sets the FileName for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AsyncJob.StartTime">
            <summary>
            Gets or sets the StartTime for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AsyncJob.EndTime">
            <summary>
            Gets or sets the EndTime for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AsyncJob.MessagesReceived">
            <summary>
            Gets or sets the MessagesReceived for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AsyncJob.MessagesFailed">
            <summary>
            Gets or sets the MessagesFailed for the current LIBJob
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.AsyncJob.JobStatus">
            <summary>
            Gets or sets the JobStatus for the current LIBJob
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.AsyncJob.#ctor">
            <summary>
            Initializes a new instance of the AsyncJob class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.LIBMessageLog">
            <summary>
            POCO for LIBMessageLog.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.LIBMessageLog.#ctor">
            <summary>
            Initializes a new instance of the LIBMessageLog class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LIBMessageLog.MessageId">
            <summary>
            Gets or sets the MessageId for the current LIBMessageLog
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LIBMessageLog.EnvKey">
            <summary>
            Gets or sets the EnvKey for the current LIBMessageLog
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LIBMessageLog.LogSource">
            <summary>
            Gets or sets the LogSource for the current LIBMessageLog
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LIBMessageLog.FileName">
            <summary>
            Gets or sets the FileName for the current LIBMessageLog
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LIBMessageLog.JobNumber">
            <summary>
            Gets or sets the JobNumber for the current LIBMessageLog
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LIBMessageLog.Message">
            <summary>
            Gets or sets the Message for the current LIBMessageLog
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LIBMessageLog.Reason">
            <summary>
            Gets or sets the Reason for the current LIBMessageLog
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LIBMessageLog.Error">
            <summary>
            Gets or sets the Error for the current LIBMessageLog
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LIBMessageLog.TryCount">
            <summary>
            Gets or sets the TryCount for the current LIBMessageLog
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.LIBMessageLog.MsgTime">
            <summary>
            Gets or sets the MsgTime for the current LIBMessageLog
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Member">
            <summary>
            POCO for LWMember.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.IpCode">
            <summary>
            Gets or sets the IpCode for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.MemberCreateDate">
            <summary>
            Gets or sets the MemberCreateDate for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.MemberCloseDate">
            <summary>
            Gets or sets the MemberCloseDate for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.MemberStatus">
            <summary>
            Gets or sets the MemberStatus for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.BirthDate">
            <summary>
            Gets or sets the BirthDate for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.FirstName">
            <summary>
            Gets or sets the FirstName for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.LastName">
            <summary>
            Gets or sets the LastName for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.MiddleName">
            <summary>
            Gets or sets the MiddleName for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.NamePrefix">
            <summary>
            Gets or sets the NamePrefix for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.NameSuffix">
            <summary>
            Gets or sets the NameSuffix for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.AlternateId">
            <summary>
            Gets or sets the AlternateId for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.Username">
            <summary>
            Gets or sets the Username for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.Password">
            <summary>
            Gets or sets the Password for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.Salt">
            <summary>
            Gets or sets the Salt for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.PrimaryEmailAddress">
            <summary>
            Gets or sets the PrimaryEmailAddress for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.PrimaryPhoneNumber">
            <summary>
            Gets or sets the PrimaryPhoneNumber for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.PrimaryPostalCode">
            <summary>
            Gets or sets the PrimaryPostalCode for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.PreferredLanguage">
            <summary>
            Gets or sets the PrimaryPostalCode for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.LastActivityDate">
            <summary>
            Gets or sets the LastActivityDate for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.IsEmployee">
            <summary>
            Gets or sets the IsEmployee for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.ChangedBy">
            <summary>
            Gets or sets the ChangedBy for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.NewStatus">
            <summary>
            Gets or sets the NewStatus for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.NewStatusEffectiveDate">
            <summary>
            Gets or sets the NewStatus for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.LoyaltyCards">
            <summary>
            Gets or sets the LoyaltyCards for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.ResetCode">
            <summary>
            Gets or sets the ResetCode for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.ResetCodeDate">
            <summary>
            Gets or sets the ResetCodeDate for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.FailedPasswordAttemptCount">
            <summary>
            Gets or sets the FailedPasswordAttemptCount for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.PasswordChangeRequired">
            <summary>
            Gets or sets the PasswordChangeRequired for the current LWMember
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Member.PasswordExpireDate">
            <summary>
            Gets or sets the PasswordExpireDate for the current LWMember
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Member.#ctor">
            <summary>
            Initializes a new instance of the LWMember class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Member.MoveTierToMember(Brierley.FrameWork.Data.DomainModel.MemberTier)">
            <summary>
            This method is used by the merge member method to move a tier from a victim to survivor.
            It expires the provided tier and expires the member's current tier and then adds a tier 
            equivalent to the victim tier to the surviving member.
            </summary>
            <param name="victimTier"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Member.GetRewards">
            <summary>
            This method gets all rewards for this member.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Member.GetRewardsByDefId(System.Int64)">
            <summary>
            This method retrieves the member reward given the id of a reward definition.
            </summary>
            <param name="rewardDefId"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Member.GetNextAvailableReward(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <returns></returns>
            <remarks>
            LW-5543
            I can specify the Language and Channel for the returned Reward Display Name.
            If I don't specify the Language and Channel then check to see if there is a web context for culture code and use that as the Language and a Channel of Web.
            If there is no web context, then the back up default is English for language and Web for Channel.
            I can optionally specify a Default Tier in the case that a member doesn't already have a tier. Then this Default tier will be used when determining the Reward Display Name.
            I can optionally specify an OverrideTier which will override the calculation and determine the members next reward based on that provided tier.
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MemberReward">
            <summary>
            POCO for MemberReward. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.Id">
            <summary>
            Gets or sets the Id for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.RewardDefId">
            <summary>
            Gets or sets the RewardDefId for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.CertificateNmbr">
            <summary>
            Gets or sets the CertificateNmbr for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.OfferCode">
            <summary>
            Gets or sets the OfferCode for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.AvailableBalance">
            <summary>
            Gets or sets the AvailableBalance for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.FulfillmentOption">
            <summary>
            Gets or sets the FulfillmentOption for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.MemberId">
            <summary>
            Gets or sets the MemberId for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.ProductId">
            <summary>
            Gets or sets the ProductId for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.ProductVariantId">
            <summary>
            Gets or sets the ProductVariantId for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.DateIssued">
            <summary>
            Gets or sets the DateIssued for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.Expiration">
            <summary>
            Gets or sets the Expiration for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.FulfillmentDate">
            <summary>
            Gets or sets the FulfillmentDate for the current MemberReward
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberReward.RedemptionDate">
            <summary>
            Gets or sets the RedemptionDate for the current MemberReward
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MemberReward.#ctor">
            <summary>
            Initializes a new instance of the MemberReward class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.MemberTier">
            <summary>
            POCO for MemberTier. 
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.MemberTier.#ctor">
            <summary>
            Initializes a new instance of the MemberTier class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier.Id">
            <summary>
            Gets or sets the Id for the current MemberTier
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier.TierDefId">
            <summary>
            Gets or sets the TierDefId for the current MemberTier
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier.MemberId">
            <summary>
            Gets or sets the MemberId for the current MemberTier
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier.FromDate">
            <summary>
            Gets or sets the FormDate for the current MemberTier
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.MemberTier.ToDate">
            <summary>
            Gets or sets the ToDate for the current MemberTier
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.PointEvent">
            <summary>
            POCO for PointEvent.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.PointEvent.#ctor">
            <summary>
            Initializes a new instance of the PointEvent class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointEvent.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointEvent.ID">
            <summary>
            Gets or sets the ID for the current PointEvent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointEvent.Name">
            <summary>
            Gets or sets the Name for the current PointEvent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointEvent.Description">
            <summary>
            Gets or sets the Description for the current PointEvent
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointEvent.DefaultPoints">
            <summary>
            Gets or sets the DefaultPoints for the current PointEvent
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.PointTransaction">
            <summary>
            POCO for PointTransaction. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.Id">
            <summary>
            Gets or sets the Id for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.VcKey">
            <summary>
            Gets or sets the VcKey for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.PointTypeId">
            <summary>
            Gets or sets the PointTypeId for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.PointEventId">
            <summary>
            Gets or sets the PointEventId for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.TransactionType">
            <summary>
            Gets or sets the TransactionType for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.TransactionDate">
            <summary>
            Gets or sets the TransactionDate for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.PointAwardDate">
            <summary>
            Gets or sets the PointAwardDate for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.Points">
            <summary>
            Gets or sets the Points for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.ExpirationReason">
            <summary>
            Gets or sets the ExpirationReason for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.ExpirationDate">
            <summary>
            Gets or sets the ExpirationDate for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.Notes">
            <summary>
            Gets or sets the Notes for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.PromoCode">
            <summary>
            Gets or sets the PromoCode for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.OwnerType">
            <summary>
            Gets or sets the OwnerType for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.OwnerId">
            <summary>
            Gets or sets the OwnerId for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.RowKey">
            <summary>
            Gets or sets the RowKey for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.ParentTransactionId">
            <summary>
            Gets or sets the ParentTransactionId for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.PointsConsumed">
            <summary>
            Gets or sets the PointsConsumed for the current PointTransaction
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointTransaction.PointsOnHold">
            <summary>
            Gets or sets the PointsOnHold for the current PointTransaction
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.PointTransaction.#ctor">
            <summary>
            Initializes a new instance of the PointTransaction class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.PointType">
            <summary>
            POCO for PointType. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointType.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointType.ID">
            <summary>
            Gets or sets the ID for the current PointType
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointType.Name">
            <summary>
            Gets or sets the Name for the current PointType
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointType.Description">
            <summary>
            Gets or sets the Description for the current PointType
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointType.MoneyBacked">
            <summary>
            Gets or sets the MoneyBacked for the current PointType
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.PointType.ConsumptionPriority">
            <summary>
            Gets or sets the ConsumptionPriority for the current PointType
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.PointType.#ctor">
            <summary>
            Initializes a new instance of the PointType class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RewardDef">
            <summary>
            POCO for RewardDef. 
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.CertificateTypeCode">
            <summary>
            Gets or sets the CertificateTypeCode for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.Name">
            <summary>
            Gets or sets the Name for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.HowManyPointsToEarn">
            <summary>
            Gets or sets the HowManyPointsToEarn for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.PointType">
            <summary>
            Gets or sets the PointType for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.PointEvent">
            <summary>
            Gets or sets the PointEvent for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.ProductId">
            <summary>
            Gets or sets the ProductId for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.TierId">
            <summary>
            Gets or sets the TierId for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.Threshold">
            <summary>
            Threshold for the certificate numbers.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.SmallImageFile">
            <summary>
            An thumbnail file associated with the reward.  This is the relative path in from the root of the image store.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.LargeImageFile">
            <summary>
            An image file associated with the reward.  This is the relative path in from the root of the image store.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.CatalogStartDate">
            <summary>
            Gets or sets the CatalogStartDate for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.CatalogEndDate">
            <summary>
            Gets or sets the CatalogEndDate for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.Active">
            <summary>
            Active for the current RewardDef.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.FulfillmentProviderId">
            <summary>
            Gets or sets the FulfillmentProviderId for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.MediumImageFile">
            <summary>
            Gets or sets the MediumImageFile for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.LocationGroupId">
            <summary>
            Gets or sets the LocationGroupId for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.DisplayName">
            <summary>
            Gets or sets the DisplayName for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.ShortDescription">
            <summary>
            Gets or sets the ShortDescription for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.LongDescription">
            <summary>
            Gets or sets the LongDescription for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.LegalText">
            <summary>
            Gets or sets the LegalText for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.Product">
            <summary>
            Gets or sets the Product for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.RedeemTimeLimit">
            <summary>
            Gets or sets the RedeemTimeLimit for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.PushNotificationId">
            <summary>
            Gets or sets the PushNotificationId associated with the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.RewardType">
            <summary>
            Gets or sets the RewardType for the current RewardDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RewardDef.ConversionRate">
            <summary>
            Gets or set the Loyalty Currency as payment conversion rate for the current RewardDef
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.RewardDef.#ctor">
            <summary>
            Initializes a new instance of the RewardDef class
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.RuleTrigger">
            <summary>
            POCO for RuleTrigger.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.RuleTrigger.#ctor">
            <summary>
            Initializes a new instance of the RuleTrigger class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.Id">
            <summary>
            Gets or sets the Id for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.AttributeSetCode">
            <summary>
            Gets or sets the AttributeSetCode for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.Sequence">
            <summary>
            Gets or sets the Sequence for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.InvocationType">
            <summary>
            Gets or sets the InvocationType for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.ConditionalExpression">
            <summary>
            Gets or sets the ConditionalExpression for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.RuleInstance">
            <summary>
            Gets or sets the RuleInstance for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.IsConfigured">
            <summary>
            Gets or sets the IsConfigured for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.RuleName">
            <summary>
            Gets or sets the RuleName for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.PromotionCode">
            <summary>
            Gets or sets the PromotionCode for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.StartDate">
            <summary>
            Gets or sets the StartDate for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.EndDate">
            <summary>
            Gets or sets the EndDate for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.Targeted">
            <summary>
            Gets or sets the Targeted for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.ContinueOnError">
            <summary>
            Gets or sets the ContinueOnError for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.AlwaysRun">
            <summary>
            Gets or sets the AlwaysRun for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.LogExecution">
            <summary>
            Gets or sets the LogExecution for the current RuleTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.RuleTrigger.OwningObject">
            <summary>
            Gets or sets the OwningObject for the current RuleTrigger
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.TierDef">
            <summary>
            POCO for TierDef. 
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.Id">
            <summary>
            Gets or sets the Id for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.Name">
            <summary>
            Gets or sets the Name for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.DisplayText">
            <summary>
            Gets or sets the DisplayText for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.Description">
            <summary>
            Gets or sets the Description for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.EntryPoints">
            <summary>
            Gets or sets the EntryPoints for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.ExitPoints">
            <summary>
            Gets or sets the ExitPoints for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.PointTypeNames">
            <summary>
            Gets or sets the PointTypeNames for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.PointEventNames">
            <summary>
            Gets or sets the PointEventNames for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.AddToEnrollmentDate">
            <summary>
            Gets or sets the ExpirationDateExpression for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.ExpirationDateExpression">
            <summary>
            Gets or sets the ExpirationDateExpression for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.ActivityPeriodStartExpression">
            <summary>
            Gets or sets the ActivityPeriodStartExpression for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.ActivityPeriodEndExpression">
            <summary>
            Gets or sets the ActivityPeriodEndExpression for the current TierDef
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.TierDef.DefaultRewardId">
            <summary>
            Gets or sets the Id of the tier's default reward choice.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.TierDef.#ctor">
            <summary>
            Initializes a new instance of the TierDef class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.TierDef.#ctor(System.String,System.DateTime)">
            <summary>
            Minimal constructor for class TierDef
            </summary>
            <param name="name">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.TierDef.Name" /> value</param>
            <param name="UpdateDate">Initial <see cref="!:TierDef.Last_DML_Date" /> value</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.Validator">
            <summary>
            POCO for Validator. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Validator.ID">
            <summary>
            Gets or sets the ID for the current Validator
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Validator.Name">
            <summary>
            Gets or sets the Name for the current Validator
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.Validator.RegularExpression">
            <summary>
            Gets or sets the RegularExpression for the current Validator
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Validator.#ctor">
            <summary>
            Initializes a new instance of the Validator class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.Validator.#ctor(System.String,System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the Validator class
            </summary>
            <param name="name">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.Validator.Name" /> value</param>
            <param name="regularExpression">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.Validator.RegularExpression" /> value</param>
            <param name="updateDate">Initial <see cref="!:Validator.UpdateDate" /> value</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger">
            <summary>
            POCO for ValidatorTrigger. This class is autogenerated
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.ID">
            <summary>
            Gets or sets the ID for the current ValidatorTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.ValidatorId">
            <summary>
            Gets or sets the ValidatorId for the current ValidatorTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.AttributeCode">
            <summary>
            Gets or sets the AttributeCode for the current ValidatorTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.Sequence">
            <summary>
            Gets or sets the Sequence for the current ValidatorTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.ErrorMessage">
            <summary>
            Gets or sets the ErrorMessage for the current ValidatorTrigger
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.OnErrorContinue">
            <summary>
            Gets or sets the OnErrorContinue for the current ValidatorTrigger
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.#ctor">
            <summary>
            Initializes a new instance of the ValidatorTrigger class
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.#ctor(System.Int64,System.Int64,System.Boolean,System.DateTime)">
            <summary>
            Initializes a new instance of the ValidatorTrigger class
            </summary>
            <param name="attributeCode">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.AttributeCode" /> value</param>
            <param name="sequence">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.Sequence" /> value</param>
            <param name="onErrorContinue">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.OnErrorContinue" /> value</param>
            <param name="updateDate">Initial <see cref="!:ValidatorTrigger.UpdateDate" /> value</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.#ctor(System.Int64,System.Int64,System.DateTime)">
            <summary>
            Minimal constructor for class ValidatorTrigger
            </summary>
            <param name="attributeCode">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.AttributeCode" /> value</param>
            <param name="sequence">Initial <see cref="P:Brierley.FrameWork.Data.DomainModel.ValidatorTrigger.Sequence" /> value</param>
            <param name="updateDate">Initial <see cref="!:ValidatorTrigger.UpdateDate" /> value</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.DomainModel.VirtualCard">
            <summary>
            POCO for VirtualCard. This class is autogenerated
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.DomainModel.VirtualCard.#ctor">
            <summary>
            Initializes a new instance of the VirtualCard class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.VcKey">
            <summary>
            Gets or sets the VcKey for the current VirtualCard
            </summary>        
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.LoyaltyIdNumber">
            <summary>
            Gets or sets the LoyaltyIdNumber for the current VirtualCard
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.IpCode">
            <summary>
            Gets or sets the IpCode for the current VirtualCard
            </summary>        
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.LinkKey">
            <summary>
            Gets or sets the LinkKey for the current VirtualCard
            </summary>        
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.DateIssued">
            <summary>
            Gets or sets the DateIssued for the current VirtualCard
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.DateRegistered">
            <summary>
            Gets or sets the DateRegistered for the current VirtualCard
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.Status">
            <summary>
            Gets or sets the Status for the current VirtualCard
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.NewStatus">
            <summary>
            Gets or sets the NewStatus for the current VirtualCard
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.NewStatusEffectiveDate">
            <summary>
            Gets or sets the StatusEffectiveDate for the current VirtualCard
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.StatusChangeReason">
            <summary>
            Gets or sets the StatusChangeReason for the current VirtualCard
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.IsPrimary">
            <summary>
            Gets or sets the IsPrimary for the current VirtualCard
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.DomainModel.VirtualCard.ChangedBy">
            <summary>
            Gets or sets the ChangedBy for the current VirtualCard
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.Mappers.PostgresCompatibilityMapper">
            <summary>
            A mapper that lowercases property names for easy compatibility
            with Postgres
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.Mappers.PostgresCompatibilityMapper.GetTableInfo(System.Type)">
            <summary>
            Constructs a TableInfo for a POCO by reading its attribute data
            </summary>
            <param name="pocoType">The POCO Type</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.Mappers.PostgresCompatibilityMapper.GetColumnInfo(System.Reflection.PropertyInfo)">
            <summary>
            Constructs a ColumnInfo for a POCO property by reading its attribute data
            </summary>
            <param name="pocoProperty"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Data.RestAclDataService">
            <summary>
            All CRUD operations for REST ACL
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.#ctor(Brierley.FrameWork.Data.ServiceConfig)">
            <summary>
            Initializes a REST ACL Data Service
            </summary>
            <param name="config">LW Service config</param>
            <remarks>Note: Caching is not performed whenever soft deleted records are retrieved</remarks>
        </member>
        <member name="P:Brierley.FrameWork.Data.RestAclDataService.RestResourceDao">
            <summary>
            Returns DAO for RestResource
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.RestAclDataService.RestRoleDao">
            <summary>
            Returns DAO for RestRole
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.RestAclDataService.RestConsumerDao">
            <summary>
            Returns DAO for RestConsumer
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.RestAclDataService.RestGroupDao">
            <summary>
            Returns DAO for RestGroup
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveConsumer(System.Int64,System.Boolean)">
            <summary>
            Retrieves RestConsumer by primary key Id
            </summary>
            <param name="id">primary key</param>
            <param name="bypassCache">if true, will retrieve directly from db</param>
            <returns>Corresponding RestConsumer</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveConsumerByConsumerId(System.String,System.Boolean)">
            <summary>
            Retrieves RestConsumer by API Gateway Consumer Id
            </summary>
            <param name="id">API Gateway Consumer Id</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestConsumer will also be returned.</param>
            <returns>Corresponding RestConsumer</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveConsumerByUsername(System.String,System.Boolean)">
            <summary>
            Retrieves RestConsumer by API Gateway UserName
            </summary>
            <param name="userName">API Gateway UserName</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestConsumer will also be returned.</param>
            <returns>Corresponding RestConsumer</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveConsumersByCustomId(System.String,System.Boolean)">
            <summary>
            Retrieves RestConsumers by API Gateway Custom Id
            </summary>
            <param name="customId">API Gateway Custom Id</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestConsumer will also be returned.</param>
            <returns>Corresponding RestConsumer</returns>
            <remarks>This is not cached since it is an admin-only method that does not require high performance</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveConsumersByCustomId(Brierley.FrameWork.Data.LWQueryBatchInfo,System.String,System.Boolean)">
            <summary>
            Retrieves RestConsumers by API Gateway Custom Id in batches
            </summary>
            <param name="customId">API Gateway Custom Id</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestConsumer will also be returned.</param>
            <param name="batchInfo">Paged batch info</param>
            <returns>Corresponding RestConsumer</returns>
            <remarks>This is not cached since it is an admin-only method that does not require high performance</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveConsumerByRestRoleId(System.Int64,System.Boolean)">
            <summary>
            Retrieves RestConsumers by RestRoleId
            </summary>
            <param name="restRoleId">primary key id of RestRole</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestConsumers will also be returned.</param>
            <returns>Corresponding List of RestConsumers</returns>
            <remarks>This is not cached since it is an admin-only method that does not require high performance</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveConsumerByRestRoleId(Brierley.FrameWork.Data.LWQueryBatchInfo,System.Int64,System.Boolean)">
            <summary>
            Retrieves RestConsumers by RestRoleId in batches
            </summary>
            <param name="restRoleId">primary key id of RestRole</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestConsumers will also be returned.</param>
            <param name="batchInfo">Paged batch info</param>
            <returns>Corresponding List of RestConsumers</returns>
            <remarks>This is not cached since it is an admin-only method that does not require high performance</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveConsumerByRestGroupId(System.Int64,System.Boolean)">
            <summary>
            Retrieves RestConsumers by RestGroupId
            </summary>
            <param name="restGroupId">primary key id of RestGroup</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestConsumers will also be returned.</param>
            <returns>Corresponding List of RestConsumers</returns>
            <remarks>This is not cached since it is an admin-only method that does not require high performance</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveConsumerByRestGroupId(Brierley.FrameWork.Data.LWQueryBatchInfo,System.Int64,System.Boolean)">
            <summary>
            Retrieves RestConsumers by RestGroupId in batches
            </summary>
            <param name="restGroupId">primary key id of RestGroup</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestConsumers will also be returned.</param>
            <param name="batchInfo">Paged batch info</param>
            <returns>Corresponding List of RestConsumers</returns>
            <remarks>This is not cached since it is an admin-only method that does not require high performance</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveAllConsumers(System.Boolean)">
            <summary>
            Retrieves all RestConsumers.
            </summary>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestConsumers will also be returned.</param>
            <returns>List of all RestConsumers</returns>
            <remarks>This is not cached due to the potential volume of data</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveAllConsumers(Brierley.FrameWork.Data.LWQueryBatchInfo,System.Boolean)">
            <summary>
            Retrieves all RestConsumers in batches
            </summary>
            <param name="batchInfo">Paged batch info</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestConsumers will also be returned.</param>
            <returns>List of all RestConsumers</returns>
            <remarks>This is not cached due to the potential volume of data</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.CreateConsumer(Brierley.FrameWork.Data.DomainModel.RestConsumer)">
            <summary>
            Create a RestConsumer in DB
            </summary>
            <param name="consumer">source RestConsumer</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.UpdateConsumer(Brierley.FrameWork.Data.DomainModel.RestConsumer)">
            <summary>
            Update a RestConsumer in DB
            </summary>
            <param name="consumer">source RestConsumer</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.DeleteConsumer(Brierley.FrameWork.Data.DomainModel.RestConsumer)">
            <summary>
            Hard Delete a RestConsumer from DB
            </summary>
            <param name="consumer">source RestConsumer</param>
            <remarks>This is final and cannot be undeleted.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.SoftDeleteConsumer(Brierley.FrameWork.Data.DomainModel.RestConsumer)">
            <summary>
            Soft Delete a RestConsumer in DB
            </summary>
            <param name="consumer">source RestConsumer</param>
            <remarks>This can be undeleted.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.UndeleteConsumer(Brierley.FrameWork.Data.DomainModel.RestConsumer)">
            <summary>
            Undelete a soft deleted RestConsumer from DB
            </summary>
            <param name="consumer">source RestConsumer</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.UpdateConsumerCache(Brierley.FrameWork.Data.DomainModel.RestConsumer)">
            <summary>
            Update cached RestConsumer
            </summary>
            <param name="consumer">source RestConsumer</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.ClearConsumerCache(Brierley.FrameWork.Data.DomainModel.RestConsumer)">
            <summary>
            Clear cached RestConsumer
            </summary>
            <param name="consumer">source RestConsumer</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveGroupById(System.Int64)">
            <summary>
            Retrieve RestGroup by primary key Id
            </summary>
            <param name="id">primary key</param>
            <returns>Corresponding RestGroup</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveGroupByName(System.String,System.Boolean)">
            <summary>
            Retrieve RestGroup by name
            </summary>
            <param name="name">Name of RestGroup</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestGroup will also be returned.</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveGroupsByRestConsumerId(System.Int64,System.Boolean)">
            <summary>
            Retrieve List of RestGroups by RestConsumer.Id (primary key value)
            </summary>
            <param name="restConsumerId">primary key id of RestConsumer</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestGroups will also be returned.</param>
            <returns>Corresponding List of RestGroups</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Brierley.FrameWork.Data.RestAclDataService.RetrieveGroupsByRestRoleId(System.Int64,System.Boolean)" -->
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.CreateGroup(Brierley.FrameWork.Data.DomainModel.RestGroup)">
            <summary>
            Create a RestGroup in DB
            </summary>
            <param name="group">source RestGroup</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.UpdateGroup(Brierley.FrameWork.Data.DomainModel.RestGroup)">
            <summary>
            Update a RestGroup in DB
            </summary>
            <param name="group">source RestGroup</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.DeleteGroup(Brierley.FrameWork.Data.DomainModel.RestGroup)">
            <summary>
            Hard Delete a RestGroup from DB
            </summary>
            <param name="group">source RestGroup</param>
            <remarks>This is final and cannot be undeleted.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.SoftDeleteGroup(Brierley.FrameWork.Data.DomainModel.RestGroup)">
            <summary>
            Soft Delete a RestGroup in DB
            </summary>
            <param name="group">source RestGroup</param>
            <remarks>This can be undeleted.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.UndeleteGroup(Brierley.FrameWork.Data.DomainModel.RestGroup)">
            <summary>
            Undelete a soft deleted RestGroup from DB
            </summary>
            <param name="group">source RestGroup</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveRoleById(System.Int64)">
            <summary>
            Retrieve RestRole by primary key id
            </summary>
            <param name="id">primary key</param>
            <returns>Corresponding RestRole</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveRoleByName(System.String,System.Boolean)">
            <summary>
            Retrieve RestRole by name
            </summary>
            <param name="name">Name of RestRole</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestRole will also be returned.</param>
            <returns>Corresponding RestRole</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveRolesByConsumerId(System.Int64,System.Boolean)">
            <summary>
            Retrieve List of RestRoles by RestConsumer.Id (primary key)
            </summary>
            <param name="restConsumerId">primary key id of RestConsumer</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestRoles will also be returned.</param>
            <returns>Corresponding List of RestRoles</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveRolesByGroupId(System.Int64,System.Boolean)">
            <summary>
            Retrieve List of RestRoles by RestGroup.Id (primary key)
            </summary>
            <param name="restGroupId">primary key id of RestGroup</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestRoles will also be returned.</param>
            <returns>Corresponding List of RestRoles</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.CreateRole(Brierley.FrameWork.Data.DomainModel.RestRole)">
            <summary>
            Create a RestRole in DB
            </summary>
            <param name="group">source RestRole</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.UpdateRole(Brierley.FrameWork.Data.DomainModel.RestRole)">
            <summary>
            Update a RestRole in DB
            </summary>
            <param name="group">source RestRole</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.DeleteRole(Brierley.FrameWork.Data.DomainModel.RestRole)">
            <summary>
            Hard Delete a RestRole from DB
            </summary>
            <param name="group">source RestRole</param>
            <remarks>This is final and cannot be undeleted.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.SoftDeleteRole(Brierley.FrameWork.Data.DomainModel.RestRole)">
            <summary>
            Soft Delete a RestRole in DB
            </summary>
            <param name="group">source RestRole</param>
            <remarks>This can be undeleted.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.UndeleteRole(Brierley.FrameWork.Data.DomainModel.RestRole)">
            <summary>
            Undelete a soft deleted RestRole from DB
            </summary>
            <param name="group">source RestRole</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveResourceById(System.Int64)">
            <summary>
            Retrieve RestResource by primary key id
            </summary>
            <param name="id">primary key</param>
            <returns>Corresponding RestResource</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveResourcesByRoleId(System.Int64,System.Boolean)">
            <summary>
            Retrieve List of RestResources corresponding to RestRole.Id (primary key)
            </summary>
            <param name="restRoleId">primary key Id of RestRole</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestResources will also be returned.</param>
            <returns>Corresponding List of RestResources</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveResourcesByType(Brierley.FrameWork.Common.RestResourceType,System.Boolean)">
            <summary>
            Retrieve List of RestResources corresponding to RestResourceType
            </summary>
            <param name="resourceType">RestResourceType</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestResources will also be returned.</param>
            <returns>Corresponding List of RestResources</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.RetrieveResourcesByType(Brierley.FrameWork.Data.LWQueryBatchInfo,Brierley.FrameWork.Common.RestResourceType,System.Boolean)">
            <summary>
            Retrieve List of RestResources corresponding to RestResourceType in batches
            </summary>
            <param name="resourceType">RestResourceType</param>
            <param name="includeSoftDeleted">optional parameter that is false by default.  If true, soft deleted RestResources will also be returned.</param>
            <param name="batchInfo">Paged batch info</param>
            <returns>Corresponding List of RestResources</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.CreateResource(Brierley.FrameWork.Data.DomainModel.RestResource)">
            <summary>
            Create a RestResource in DB
            </summary>
            <param name="resource">source RestResource</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.UpdateResource(Brierley.FrameWork.Data.DomainModel.RestResource)">
            <summary>
            Update a RestResource in DB
            </summary>
            <param name="resource">source RestResource</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.DeleteResource(Brierley.FrameWork.Data.DomainModel.RestResource)">
            <summary>
            Hard Delete a RestResource from DB
            </summary>
            <param name="group">source RestResource</param>
            <remarks>This is final and cannot be undeleted.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.SoftDeleteResource(Brierley.FrameWork.Data.DomainModel.RestResource)">
            <summary>
            Soft Delete a RestResource in DB
            </summary>
            <param name="group">source RestResource</param>
            <remarks>This can be undeleted.</remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.UndeleteResource(Brierley.FrameWork.Data.DomainModel.RestResource)">
            <summary>
            Undelete a soft deleted RestResource from DB
            </summary>
            <param name="group">source RestResource</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.RestAclDataService.UpdateRestRoleResource(System.Int64,System.Int64,Brierley.FrameWork.Common.RestPermissionType)">
            <summary>
            Update a RestRole's permission to a RestResource
            </summary>
            <param name="restRoleId">Id of RestRole</param>
            <param name="restResourceId">Id of RestResource</param>
            <param name="permission">Updated permission</param>
        </member>
        <member name="P:Brierley.FrameWork.Data.ModelAttributes.AuditLogAttribute.TypeName">
            <summary>
            Used to override the type name for the marked class
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.ModelAttributes.ColumnIndexAttribute.TableName">
            <summary>
            The table's name in the database. 
            Part of the generated index name.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.ModelAttributes.ColumnIndexAttribute.ColumnName">
            <summary>
            The column's name in the database. 
            Part of the generated index name.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.Cache.AppFabric.AppFabricCacheProvider">
            <summary>
            This class implements IDataCacheProvider interface using Microsoft's AppFabric Caching Service.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.Cache.AppFabric.AppFabricCacheProvider.CacheName">
            <summary>
            Name of the named cache. Normally in LW, we have a named cache for each Organization_Environment combination.
            This should be set in the configuration file.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.Cache.AppFabric.AppFabricCacheRegion">
            <summary>
            To avoid losing scalability benefits provided by AppFabric Caching Service, we do not use region the way as it's defined in AppFabric.
            The 'region' here is a term that defines those cached items that are stored under the same named cache and have the same key prefix. 
            The region name defined in application configuration file is used as the first part of the cache key that we use to access the cached item 
            from the same named cache. Client app uses the region name to configure which group of objects get cached and what is the TimeToLive 
            value for those cached items.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.Cache.AppFabric.AppFabricCacheRegion.ExpirationInterval">
            <summary>
            ExpirationInterval is in minutes.
            </summary>        
        </member>
        <member name="M:Brierley.FrameWork.Data.Cache.AppFabric.AppFabricCacheRegion.Update(System.String,System.Object)">
            <summary>
            At this point, Update() is basically the same as Add()
            </summary>
            <param name="key"></param>
            <param name="dobj"></param>
        </member>
        <member name="T:Brierley.FrameWork.Data.Cache.AppFabric.AppFabricCacheFactory">
            <summary>
            A singleton class that provides access to AppFabric cache factory.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.Cache.AppFabric.AppFabricCacheFactory.GetCache(System.String)">
            <summary>
            Get the named cache.
            </summary>
            <param name="cacheName">Name of the named cache</param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Data.Cache.IDataCacheProvider">
            <summary>
            This interface describes a cache.  A cache is composed fo regions.  Each region
            contains similar data items, that are stored, indexed and retrieved based on the
            provided keys.  The data item can be anything.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.Cache.IDataCacheProvider.ExpirationInterval">
            <summary>
            This defines the amount of time for expiring this item from the cache if not
            accessed.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.Cache.IDataCacheProvider.CachePrefix">
            <summary>
            Some cache providers may create static regions fo rthe process.  This causes problems if multiple
            instances are created, one for each service factory.  This allows setting of the cache prefix that 
            is then prepended to all keys - hence separatign them for each service factory.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.Cache.IDataCacheProvider.RegionExists(System.String)">
            <summary>
            This method can be used to find out if the cache is initialized or not.
            </summary>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.Cache.IDataCacheProvider.Add(System.String,System.Object,System.Object)">
            <summary>
            This method adds a data item in the cache.
            </summary>
            <param name="region">Specifies the region to be used for caching this data item.</param>
            <param name="key">The key of the data item being stored.</param>
            <param name="dataObject">The actual data item to be stored.</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.Cache.IDataCacheProvider.Update(System.String,System.Object,System.Object)">
            <summary>
            This method adds a data item in the cache.
            </summary>
            <param name="region">Specifies the region to be used for caching this data item.</param>
            <param name="key">The key of the data item being stored.</param>
            <param name="dataObject">The actual data item to be stored.</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.Cache.IDataCacheProvider.Remove(System.String,System.Object)">
            <summary>
            This method removes an item from the specified region.
            </summary>
            <param name="region">Specifies the region to be used for caching this data item.</param>
            <param name="key">The key of the data item being stored.</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.Cache.IDataCacheProvider.Get(System.String,System.Object)">
            <summary>
            This method retrieves a data item from the region.
            </summary>
            <param name="region">Specifies the region to be used for caching this data item.</param>
            <param name="key">The key of the data item being stored.</param>
            <returns>Data item if found.  Null if no data item exists with that key.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.Cache.IDataCacheProvider.Count(System.String)">
            <summary>
            This method returns the number of objects in the specified region.
            </summary>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="P:Brierley.FrameWork.Data.Cache.IDataCacheProvider.RegionNames">
            <summary>
            Lists the active cache region names
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.Cache.IDataCacheProvider.RemoveRegion(System.String)">
            <summary>
            This method removes an entire region from the cache.  All the objects cached
            in that region are cleared.  The data objects themse,ves are not destroyed but rather
            their caching information is cleared.
            </summary>
            <param name="region">Name of the region to be cleared.</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.Cache.IDataCacheProvider.Dispose">
            <summary>
            This method clears the entire cache.  It is equivalent to calling RemoveRegion for the
            entire cache.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.Cache.MSCaching.MSCacheProvider">
            <summary>
            This class implements IDataCacheProvider interface using Microsoft Enterprise Library's
            Caching Application Block.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.Data.Cache.MSCaching.MSCacheRegion._expirationInterval">
            <summary>
            Expiration interval is in seconds.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.CampaignConfig.ExecutionType">
            <summary>
            gets or sets the default mode for executing campaigns (foreground or via job scheduler)
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Data.CampaignConfig.SendExecutionEmail">
            <summary>
            gets or sets whether scheduled immediate jobs will send an email to the user who initiated execution.
            </summary>
            <remarks>
            this value is global to each client and must be set through the DBConfig screen. It will only cause an email
            to be sent if campaing execution mode is set to scheduled.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.GetRewardsByLocationGroup(System.Int64)">
            <summary>
            Return rewards name filtering by location group id. 
            </summary>
            <param name="locationGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.HowManyRewardDefs(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.IDictionary{System.Int64,System.String},Brierley.FrameWork.Data.LWQueryBatchInfo,System.Nullable{System.Int64})">
            <summary>
            
            </summary>
            <param name="parms"></param>
            <param name="categoryId"></param>
            <param name="stores"></param>
            <returns></returns>
            <remarks>
            08/15/2018
            Horacio Torres
            LW-6425
            Accept member location
            </remarks> 
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.GetNextBatchID">
            <summary>
            Allocate a new batch ID.
            </summary>
            <returns>batch ID</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.CreateBatch(Brierley.FrameWork.Data.DomainModel.Batch)">
            <summary>
            Create a batch.  When the batchID is -1, a new batch ID will be allocated.  If the name
            is not provided, it will match the batch ID.
            </summary>
            <param name="batch">batch to create</param>
            <returns>new batch</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.UpdateBatch(Brierley.FrameWork.Data.DomainModel.Batch)">
            <summary>
            Update a batch.  If the name is not provided, it will match the batch ID. 
            </summary>
            <param name="batch">batch to update</param>
            <returns>updated batch</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.GetBatch(System.Int64)">
            <summary>
            Get a batch.
            </summary>
            <param name="batchID">batch ID</param>
            <returns>batch, or null if not found</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.GetBatch(System.String)">
            <summary>
            Get a batch.
            </summary>
            <param name="batchName">batch name</param>
            <returns>batch, or null if not found</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.GetBatches">
            <summary>
            Get all batches.
            </summary>
            <returns>list of batches</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.GetBatches(System.DateTime)">
            <summary>
            Get all batches.
            </summary>
            <param name="changedSince">changed since date</param>
            <returns>list of batches</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.GetActiveBatches">
            <summary>
            Get all active batches.
            </summary>
            <returns>list of batches</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.DeleteBatch(System.Int64)">
            <summary>
            Delete a batch.
            </summary>
            <param name="batchID">batch ID of the batch to delete</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.GetDataRows(System.Int64,System.Int64,Brierley.FrameWork.Data.DomainModel.StructuredContentAttribute,System.String,System.Boolean)">
            <summary>
            Get rows of data.
            </summary>
            <param name="batchID">ID of the batch, or -1 for all batches</param>
            <param name="elementID">ID of the element</param>
            <param name="matchAttribute">attribute for matching the value</param>
            <param name="matchValue">attribute value that must match</param>
            <param name="unexpiredOnly">use only unexpired batches</param>
            <returns>table containing rows of data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.GetPromotions(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Boolean,Brierley.FrameWork.Data.LWQueryBatchInfo,System.Collections.Generic.IDictionary{System.Int64,System.String})">
            <summary>
            New method to get promotion defintions, this method is different becasue we will do location base filtering and pagination in memory
            </summary>
            <param name="parms"></param>
            <param name="populateAttributes"></param>
            <param name="batchInfo"></param>
            <param name="storeNumbers"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.DeleteLocationGroup(System.Int64)">
            <summary>
            Deletes a localtion group by id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.UpdateLocationGroup(Brierley.FrameWork.Data.DomainModel.LocationGroup)">
            <summary>
            Updates a location group, will trow an exception if location group doesn't exists.
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.CreateExchangeRate(Brierley.FrameWork.Data.DomainModel.ExchangeRate)">
            <summary>
            Creates a new exchange record 
            </summary>
            <param name="exchangeRate"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.UpdateExchangeRate(Brierley.FrameWork.Data.DomainModel.ExchangeRate)">
            <summary>
            Update exchange rate record
            </summary>
            <param name="exchangeRate"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentService.ValidateExchangeRate(Brierley.FrameWork.Data.DomainModel.ExchangeRate)">
            <summary>
            validates some basic exchange rate cases
            </summary>
            <param name="exchangeRate"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.CSService.GetPermissionCallback">
            <summary>
            This method looks for LWCSPermissionHookClass and LWCSPermissionHookAssembly in the web.config
            file.  If these values are found then the class is instantiated and invoked.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.LoadMemberFromIdentity(Brierley.FrameWork.Common.AuthenticationFields,System.String)">
            <summary>
            Loads a member by a specified identity field.
            </summary>
            <param name="identityType"></param>
            <param name="identity"></param>
            <returns></returns>
            <exception cref="T:Brierley.FrameWork.Common.Exceptions.Authentication.InvalidMemberIdentityException">
            Though not an "exceptional" condition, this is thrown if no member is found.
            </exception>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.LoadMemberFromIPCode(System.Int64)">
            <summary>
            This method loads a member by its ipcode.
            </summary>
            <param name="ipcode">ipcode.</param>
            <returns>member if found.  Null if not found.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.LoadMemberFromEmailAddress(System.String)">
            <summary>
            This method loads a member by the email address.
            </summary>
            <param name="emailAddress">email address.</param>
            <returns>member if found.  Null if not found.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.LoadMemberFromUserName(System.String)">
            <summary>
            This method loads a member by the username.
            </summary>
            <param name="userName">user name</param>
            <returns>member if found.  Null if not found.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.LoadMemberFromAlternateID(System.String)">
            <summary>
            This method loads a member by the alternate id.
            </summary>
            <param name="alternateID">alternate id.</param>
            <returns>member if found.  Null if not found.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.LoadMemberFromLoyaltyID(System.String)">
            <summary>
            This method loads a member by the loyalty id.
            </summary>
            <param name="loyaltyId">loyalty id.</param>
            <returns>member if found.  Null if not found.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.LoadMemberFromResetCode(System.String)">
            <summary>
            This method loads a member by the reset code
            </summary>
            <param name="resetCode">the reset code</param>
            <returns>member or null</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.LoadFromCertificateNumber(System.String)">
            <summary>
            This method loads a member given a certificate number.
            </summary>
            <param name="certificateNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.SaveMembers(System.Collections.Generic.IEnumerable{Brierley.FrameWork.Data.DomainModel.Member})">
            <summary>
            This method is only used to save members and attribut sets in bulk mode.
            </summary>
            <param name="member">The members to be saved.</param>        
            <returns>the saved members</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.LoginMember(Brierley.FrameWork.Data.DomainModel.MemberSocNet,Brierley.FrameWork.Common.LoginStatusEnum@)">
            <summary>
            logs in the member specified in the provided MemberSocNet object.
            </summary>
            <remarks>
            This method is intended for use by social network authentication, where a UID and auth token are supplied and matched
            to a member in the framework database's LW_MemberSocNet table. At this point, the member has been identified. This
            method will validate the account (status and password reset required), create a login event and execute any rules 
            tied to the MemberAuthenticate event.
            </remarks>
            <param name="socNet"></param>
            <param name="loginStatus"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.DeleteMembers(System.Int64[],System.Boolean)">
            <summary>
            This method will delete a member.
            </summary>
            <param name="ipCode"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.CancelVirtualCard(Brierley.FrameWork.Data.DomainModel.VirtualCard,System.String,Brierley.FrameWork.Common.PointExpirationReason,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This method will cancel the specified card.  It expires all the points for this member and if required
            then disables the member if this was the last active card. 
            </summary>
            <param name="vc"></param>
            <param name="reason"></param>
            <param name="expReason"></param>
            <param name="effectiveDate"></param>
            <param name="cancelMembership"></param>
            <param name="saveMember"></param>
            <param name="expirePoints"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.ReplaceVirtualCard(Brierley.FrameWork.Data.DomainModel.VirtualCard,System.String,System.DateTime,System.Boolean,System.String)">
            <summary>
            This method will replace the specified card.
            </summary>
            <param name="oldCard"></param>
            <param name="newLoyaltyId"></param>
            <param name="effectiveDate"></param>
            <param name="transferPoints"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.InvalidatePointTypesCache">
            <summary>
            Invalidates all PointTypes Cache
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.InvalidatePointEventsCache">
            <summary>
            Invalidates all PointEvents Cache
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.ConsumePoints(System.Collections.Generic.IList{Brierley.FrameWork.Data.DomainModel.VirtualCard},System.Collections.Generic.IList{Brierley.FrameWork.Data.DomainModel.PointType},System.Collections.Generic.IList{Brierley.FrameWork.Data.DomainModel.PointEvent},System.DateTime,System.Decimal,Brierley.FrameWork.Common.PointTransactionOwnerType,System.String,System.Int64,System.Int64)">
            <summary>
            This method is called to consume points on the list of cirtual cards that are
            provided and for the list of point types and point events that are provided.
            </summary>
            <param name="vcList"></param>
            <param name="pt"></param>
            <param name="pe"></param>
            <param name="consumptionDate"></param>
            <param name="expirationDate"></param>
            <param name="points"></param>
            <param name="ownerType"></param>
            <param name="ownerId"></param>
            <param name="rowKey"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.HoldAllPoints(Brierley.FrameWork.Data.DomainModel.VirtualCard,System.DateTime,System.String)">
            <summary>
            This method puts all points for a virtual card on hold.
            </summary>
            <param name="vc"></param>
            <param name="transactionDate"></param>
            <param name="notes"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.HoldPoints(Brierley.FrameWork.Data.DomainModel.VirtualCard,Brierley.FrameWork.Data.DomainModel.PointType,Brierley.FrameWork.Data.DomainModel.PointEvent,System.Decimal,System.DateTime,Brierley.FrameWork.Common.PointTransactionOwnerType,System.Int64,System.Int64,System.String,System.String,System.String)">
            <summary>
            See issue 5304 for original requirements.  OwnerId is the id of the owner.  
            In general owner id is the idenfieir of the meta data and row key is the identifier of the instance data.
            OwnerType = AttributeSet, OwnerId = Attributeset code, RowKey is the rowkey of the actual row.
            OwnerType = Store, OwnerId = id of the store, RowKey = the rowkey from CheckInEvent
            OwnerType = Bid, OwnerId = null, rowkey = bid id
            OwnerType = Bonus, OwnerId = bonus defintion id, rowkey = row key of member bonus
            OwnerType = Survey, ownerid = null, rowkey = id of the survey
            OwnerType = Reward, owberid = id of reward defintino, rowkey = rowkey fo member rewrad
            </summary>
            <param name="vc"></param>
            <param name="pt"></param>
            <param name="pe"></param>
            <param name="points"></param>
            <param name="transactionDate"></param>
            <param name="ownerType"></param>
            <param name="ownerId"></param>
            <param name="rowKey"></param>
            <param name="notes"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.Debit(Brierley.FrameWork.Data.IClientDataObject,Brierley.FrameWork.Data.DomainModel.VirtualCard,Brierley.FrameWork.Data.DomainModel.PointType,Brierley.FrameWork.Data.DomainModel.PointEvent,System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
            <summary>
            This operation will deposit a debit transaction for each credit transaction
            that was awarded as a result of the row being passed in.  If some of the points originally
            awarded have already been consumed, then this may return in a negative point balance.
            </summary>
            <param name="row"></param>
            <param name="vc"></param>
            <param name="pt"></param>
            <param name="pe"></param>
            <param name="transactionDate"></param>
            <param name="expDate"></param>
            <param name="note"></param>
            <param name="locationId"></param>
            <param name="changedBy"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.UpdateMemberReward(Brierley.FrameWork.Data.DomainModel.MemberReward,System.Collections.Generic.IDictionary{System.Int64,System.String})">
            <summary>
            Created by: ssanchez
            Date: August 20 2018
            Description: Validation was added in order to allow redeeming rewards for specific stores
            </summary>
            <param name="reward"></param>
            <param name="storeNumbers"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.VerifyMember(Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            This method ensures that you do not create a new member or update a member to use
            an existing member's primary business identifiers.
            i.e. Loyalty id, username, primary email address or alternate id.
            Additionally, it ensures that you don't update an existing terminated member
            or set a member to non-member status.
            </summary>
            <param name="m">The member object being verified</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.Execute(System.Collections.Generic.IEnumerable{Brierley.FrameWork.Data.DomainModel.RuleTrigger},Brierley.FrameWork.ContextObject,Brierley.FrameWork.Common.RuleInvocationType)">
            <summary>
            Executes a set of rule triggers, invoked by action on an attribute set row. 
            </summary>
            <remarks>
            This allows us to queue a single message that represents the entire list of rules to fire.
            </remarks>
            <param name="triggers"></param>
            <param name="owner"></param>
            <param name="currentRow"></param>
            <param name="results"></param>
            <param name="mode"></param>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.AssignNextBestActions(System.Int64,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{Brierley.FrameWork.Common.NextBestActionType},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Assigns next best actions to the member
            </summary>
            <param name="memberId">IPCode of the member to assign actions to</param>
            <param name="count">The number of actions to assign</param>
            <param name="persist">true to write each MemberNextBestAction to the database</param>
            <param name="actionTypes">Enumerable list of action types to include. A null or empty list will assume all action types are included.</param>
            <param name="assignCertificates">Indicates whether or not certificates will be assigned to each coupon (applies only to coupon action types)</param>
            <param name="displayOrder">Overrides the default display order of the action, if applicable</param>
            <param name="expirationDate">Overrides the default expiration date of the action, if applicable</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.CreateValidatorTrigger(System.Int64,System.Int64,System.Boolean,System.Int64,System.String)">
            <summary>
            This method creates a new validator trigger.
            </summary>
            <param name="attributeCode"></param>
            <param name="validatorId"></param>
            <param name="OnError"></param>
            <param name="sequence"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.LoyaltyDataService.GetValidatorTriggers(System.Int64)">
            <summary>
            This method gets the list of validators configured for a particular attribute.
            </summary>
            <param name="attributeCode">attribute code</param>
            <returns>list of validators.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.PromoTestDataGenerator.GenerateTransactions(Brierley.FrameWork.Data.DomainModel.PromoTestSetConfig,System.Collections.Generic.IList{Brierley.FrameWork.Data.DomainModel.Member})">
            <summary>
            This operation applies the transaction part of the template to the members provided.
            </summary>
            <param name="config"></param>
            <param name="members"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ServiceBase.RefreshCache">
            <summary>
            Called when the cache is no longer valid and should be cleared.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Data.ServiceConfig">
            <summary>
            Contains configuration data needed to instantiate a data service object.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.ServiceConfig.CreateDatabase">
            <summary>
            Opens a new database connection every time this property is accessed.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentProperties.GetProperty(System.String)">
            <summary>
            Get the named property's value
            </summary>
            <param name="name">property's name</param>
            <returns>property's value, or "" if property not found</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentProperties.GetProperty(System.String,System.String)">
            <summary>
            Get the named property's value
            </summary>
            <param name="name">property's name</param>
            <param name="defaultValue">value to return if the property is not found</param>
            <returns>property's value, or defaultValue if property not found</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentProperties.SetProperty(System.String,System.String)">
            <summary>
            Set the value for the named property
            </summary>
            <param name="name">property's name</param>
            <param name="value">value to be set for the property</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.ContentProperties.DeleteProperty(System.String)">
            <summary>
            Delete the named property
            </summary>
            <param name="name">property's name</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateSurvey(Brierley.FrameWork.Data.DomainModel.SMSurvey)">
            <summary>
            Create a survey.
            </summary>
            <param name="survey">survey to create</param>
            <returns>created survey</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateSurvey(System.String,System.String)">
            <summary>
            Create a survey.
            </summary>
            <param name="name">name of the survey</param>
            <param name="description">description of the survey</param>
            <returns>created survey</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CloneSurvey(System.Int64,System.String,System.Boolean)">
            <summary>
            Create a clone of a survey
            </summary>
            <param name="oldSurveyID">unique ID for the source survey</param>
            <param name="newSurveyName">unique name for the cloned survey</param>
            <param name="resetDocID">don't use same document as parent</param>
            <returns>cloned survey</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateSurvey(Brierley.FrameWork.Data.DomainModel.SMSurvey)">
            <summary>
            Update a survey.
            </summary>
            <param name="survey">survey to update</param>
            <returns>updated survey</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveSurvey(System.Int64)">
            <summary>
            Retrieve a survey.
            </summary>
            <param name="ID">unique identifier for the survey</param>
            <returns>specified survey, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveSurvey(System.String)">
            <summary>
            Retrieve a survey.
            </summary>
            <param name="name">unique survey name</param>
            <returns>specified survey, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveSurveys">
            <summary>
            Retrieve a list of all surveys.
            </summary>
            <returns>list of surveys</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveSurveys(System.Int32,System.Int32,System.Nullable{System.Int64})">
            <summary>
            Retrieve a list of all surveys.
            </summary>
            <param name="statusFilter">filter by SurveyStatus enum</param>
            <param name="typeFilter">filter by SurveyType enum</param>
            <returns>list of surveys</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveProfileSurveys">
            <summary>
            Retrieve a list of all profile surveys.
            </summary>
            <returns>list of profile surveys</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveNonProfileSurveys">
            <summary>
            Retrieve a list of all non-profile surveys.
            </summary>
            <returns>list of non-profile surveys</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveSurveyCompleteRuleId(System.Int64)">
            <summary>
            Get the ID for the rule to use when the survey has been completed successfully.
            </summary>
            <param name="surveyId">ID of the survey</param>
            <returns>rule ID</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveSurveyTerminateAndTallyRuleId(System.Int64)">
            <summary>
            Get the ID for the rule to use when the survey has been completed as a "terminate and tally".
            </summary>
            <param name="surveyId">ID of the survey</param>
            <returns>rule ID</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveChangedSurveys(System.DateTime)">
            <summary>
            Gets a list of surveys that have changed since the specified date
            </summary>
            <param name="changedSince"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteSurvey(System.Int64)">
            <summary>
            Delete a survey
            </summary>
            <param name="ID">unique ID of the survey to delete</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.SurveyExists(System.String)">
            <summary>
            Does a survey exist with the specified name?
            </summary>
            <param name="name">survey name</param>
            <returns>true of it already exists, false otherwise</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.IsSurveyCompleted(Brierley.FrameWork.Data.DomainModel.SMSurvey,Brierley.FrameWork.Data.DomainModel.SMLanguage,Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            Has the specified survey been completed by the specified member in the specified language?
            </summary>
            <param name="survey">survey</param>
            <param name="language">language</param>
            <param name="member">member</param>
            <returns>true if survey completed, false otherwise</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateState(Brierley.FrameWork.Data.DomainModel.SMState)">
            <summary>
            Create a state.
            </summary>
            <param name="state">the state to create</param>
            <returns>the new state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CloneStates(System.Int64,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{Brierley.FrameWork.Data.DomainModel.SMTransition},System.Collections.Generic.List{Brierley.FrameWork.Data.DomainModel.SMState}@,System.Collections.Generic.List{Brierley.FrameWork.Data.DomainModel.SMTransition}@)">
            <summary>
            Clone a state within the same survey and page
            </summary>
            <param name="surveyID">unique ID for survey</param>
            <param name="stateIDs">list of state IDs</param>
            <param name="transitions">list of transitions</param>
            <param name="clonedStates">resulting cloned stated</param>
            <param name="clonedTransitions">resulting cloned transitions</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.MoveStatesToPage(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{Brierley.FrameWork.Data.DomainModel.SMTransition},System.Int64,System.Collections.Generic.List{Brierley.FrameWork.Data.DomainModel.SMTransition})">
            <summary>
            Move a set of states and transitions to another page and delete orphaned transitions
            </summary>
            <param name="stateIDs">list of state IDs</param>
            <param name="transitions">list of transitions</param>
            <param name="newPageID">page to move states and transitions</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateState(Brierley.FrameWork.Data.DomainModel.SMState)">
            <summary>
            Update an existing state.
            </summary>
            <param name="state">existing state</param>
            <returns>the updated state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveState(System.Int64)">
            <summary>
            Get a specific state.
            </summary>
            <param name="ID">unique identifier for the state</param>
            <returns>the specified state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveState(System.Int64,System.String)">
            <summary>
            Get a specific state.
            </summary>
            <param name="surveyID">unique identifier for the survey</param>
            <param name="name">the UI name for the state</param>
            <returns>the specified state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveStatesBySurveyID(System.Int64)">
            <summary>
            Get a list of states for a specific survey.
            </summary>
            <param name="surveyID">unique identifier for the survey</param>
            <returns>list of states for the specified survey</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveStatesByPageID(System.Int64)">
            <summary>
            Get a list of states on a page in the order they should appear on the page.
            </summary>
            <param name="pageID">unique ID of the page</param>
            <returns>list of states</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteState(System.Int64)">
            <summary>
            Delete a specific state
            </summary>
            <param name="stateID">unique identifier for the state</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteStates(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{Brierley.FrameWork.Data.DomainModel.SMTransition})">
            <summary>
            Delete a set of states and transitions
            </summary>
            <param name="stateIDs">list of state IDs</param>
            <param name="transitions">list of transitions</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateTransition(Brierley.FrameWork.Data.DomainModel.SMTransition)">
            <summary>
            Create a transition.
            </summary>
            <param name="transition">the transition to create</param>
            <returns>the new transition</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateTransition(Brierley.FrameWork.Data.DomainModel.SMTransition)">
            <summary>
            Update a transition.
            </summary>
            <param name="transition">the transition to update</param>
            <returns>the updated transition</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveTransition(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Get a specific transition.
            </summary>
            <param name="srcStateID">the ID of the source state</param>
            <param name="srcConnectorIndex">the index of the output connector on the source state</param>
            <param name="dstStateID">the ID of the destination state</param>
            <param name="dstConnectorIndex">the index of the input connector on the source state</param>
            <returns>the specified transition, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveInputTransitions(System.Int64)">
            <summary>
            Get the list of transitions that terminate at the given state.
            </summary>
            <param name="stateID">a specific state</param>
            <returns>list of input transitions for the state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveOutputTransitions(System.Int64)">
            <summary>
            Get the list of transitions that originate at the given state.
            </summary>
            <param name="stateID">a specific state</param>
            <returns>list of output transitions for the state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteTransition(Brierley.FrameWork.Data.DomainModel.SMTransition)">
            <summary>
            Delete a transition.
            </summary>
            <param name="transition">transition to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteTransition(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Delete a transition.
            </summary>
            <param name="srcStateID">the ID of the source state</param>
            <param name="srcConnectorIndex">the index of the output connector on the source state</param>
            <param name="dstStateID">the ID of the destination state</param>
            <param name="dstConnectorIndex">the index of the input connector on the source state</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateQuestion(Brierley.FrameWork.Data.DomainModel.SMQuestion)">
            <summary>
            Create a question.
            </summary>
            <param name="question">the question to create</param>
            <returns>the new question</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateQuestion(Brierley.FrameWork.Data.DomainModel.SMQuestion)">
            <summary>
            Update a question.
            </summary>
            <param name="question">the question to update</param>
            <returns>the updated question</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveQuestion(System.Int64)">
            <summary>
            Get a specific question.
            </summary>
            <param name="questionID">the ID of the question</param>
            <returns>the specified question, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveQuestionByStateID(System.Int64)">
            <summary>
            Get a specific question.
            </summary>
            <param name="stateID">the ID of the associated state</param>
            <returns>the specified question, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveQuestionByStateName(System.Int64,System.String)">
            <summary>
            Get a specific question.
            </summary>
            <param name="surveyID">the associated survey</param>
            <param name="stateName">the name of the question's state</param>
            <returns>the specified question, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveQuestions(System.Int64)">
            <summary>
            Get the questions for a survey.
            </summary>
            <param name="surveyID">unique identifier for the survey</param>
            <returns>list of questions for the associated survey</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteQuestion(Brierley.FrameWork.Data.DomainModel.SMQuestion)">
            <summary>
            Delete a question.
            </summary>
            <param name="question">question to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteQuestion(System.Int64)">
            <summary>
            Delete a question.
            </summary>
            <param name="questionID">the ID of the question</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateQuestionContent(Brierley.FrameWork.Data.DomainModel.SMQuestionContent)">
            <summary>
            Create a questionContent.
            </summary>
            <param name="question">the questionContent to create</param>
            <returns>the new questionContent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateQuestionContent(Brierley.FrameWork.Data.DomainModel.SMQuestionContent)">
            <summary>
            Update a questionContent.
            </summary>
            <param name="questionContent">the questionContent to update</param>
            <returns>the updated questionContent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveQuestionContent(System.Int64)">
            <summary>
            Get a specific questionContent.
            </summary>
            <param name="questionContentID">the ID of the questionContent</param>
            <returns>the specified questionContent, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveQuestionContents(System.Int64,System.Int64,Brierley.FrameWork.Common.QuestionContentType)">
            <summary>
            Get a list of questionContent
            </summary>
            <param name="questionID">associated question</param>
            <param name="languageID">associated language</param>
            <param name="contentType">content type</param>
            <returns>list of matching QuestionContent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteQuestionContent(Brierley.FrameWork.Data.DomainModel.SMQuestionContent)">
            <summary>
            Delete a questionContent.
            </summary>
            <param name="questionContent">questionContent to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteQuestionContent(System.Int64)">
            <summary>
            Delete a questionContent.
            </summary>
            <param name="questionContentID">the ID of the questionContent</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateAnswerContent(Brierley.FrameWork.Data.DomainModel.SMAnswerContent)">
            <summary>
            Create a answerContent.
            </summary>
            <param name="question">the answerContent to create</param>
            <returns>the new answerContent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateAnswerContent(Brierley.FrameWork.Data.DomainModel.SMAnswerContent)">
            <summary>
            Update a answerContent.
            </summary>
            <param name="answerContent">the answerContent to update</param>
            <returns>the updated answerContent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveAnswerContent(System.Int64)">
            <summary>
            Get a specific answerContent.
            </summary>
            <param name="answerContentID">the ID of the answerContent</param>
            <returns>the specified answerContent, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveAnswerContents(System.Int64,System.Int64)">
            <summary>
            Get a list of answerContent for a specific question and language.
            </summary>
            <param name="questionID">associated question</param>
            <param name="languageID">associated language</param>
            <returns>list of matching AnswerContent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteAnswerContent(Brierley.FrameWork.Data.DomainModel.SMAnswerContent)">
            <summary>
            Delete a answerContent.
            </summary>
            <param name="answerContent">answerContent to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteAnswerContent(System.Int64)">
            <summary>
            Delete a answerContent.
            </summary>
            <param name="answerContentID">the ID of the answerContent</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateMatrixAnswer(Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer)">
            <summary>
            Create a matrixAnswer.
            </summary>
            <param name="matrixAnswer">the matrixAnswer to create</param>
            <returns>the new matrixAnswer</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateMatrixAnswer(Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer)">
            <summary>
            Update a matrixAnswer.
            </summary>
            <param name="matrixAnswer">the matrixAnswer to update</param>
            <returns>the updated matrixAnswer</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveMatrixAnswerID(System.Int64)">
            <summary>
            Get a specific matrixAnswer.
            </summary>
            <param name="matrixAnswerID">the ID of the matrixAnswer</param>
            <returns>the specified matrixAnswer, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveMatrixAnswerByQuestionContentID(System.Int64)">
            <summary>
            Get a list of matrixAnswer for a questionContentID.
            </summary>
            <param name="questionContentID">the ID of the associated questionContent</param>
            <returns>the list of matrixAnswers</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveMatrixAnswerByQuestionID(System.Int64,System.Int64)">
            <summary>
            Get a list of the matrixAnswers for a specific question/language.
            </summary>
            <param name="questionID">unique ID for the question</param>
            <param name="languageID">unique ID for the language</param>
            <returns>list of matrixAnswers</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteMatrixAnswer(Brierley.FrameWork.Data.DomainModel.SMMatrixAnswer)">
            <summary>
            Delete a matrixAnswer.
            </summary>
            <param name="matrixAnswer">matrixAnswer to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteMatrixAnswer(System.Int64)">
            <summary>
            Delete a matrixAnswer.
            </summary>
            <param name="matrixAnswerID">the ID of the matrixAnswer</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.ResetRespondents(System.Int64,System.Int64,System.String,System.Int64)">
            <summary>
            Reset the start and completion dates for a set of respondents.
            </summary>
            <param name="surveyID">ID of the survey, or -1 for all</param>
            <param name="languageID">ID of the language, or -1 for all</param>
            <param name="mtouch">MTouch code, or null/string.Empty for unspecified</param>
            <param name="ipcode">IPCode, or -1 for unspecified</param>
            <returns>number of rows updated</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveRespondent(System.Int64)">
            <summary>
            Get a specific respondent.
            </summary>
            <param name="respondentID">the ID of the respondent</param>
            <returns>the specified respondent, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveRespondent(System.Int64,System.Int64,System.String,System.Int64)">
            <summary>
            Get a specific respondent.
            </summary>
            <param name="surveyID">unique identifier for the survey</param>
            <param name="languageID">unique identifier for the language</param>
            <param name="mtouch">unique mtouch code</param>
            <param name="ipcode">unique identifier for the member</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveRespondents(System.Int64,System.Int64)">
            <summary>
            Get a list of respondent for a specific survey and language.
            </summary>
            <param name="surveyID">associated survey</param>
            <param name="languageID">associated language</param>
            <returns>list of matching Respondent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveAllMTouches">
            <summary>
            Get a list of provisioned MTouch codes.
            </summary>
            <returns>list of MTouch codes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveAllMTouchesForSurveyID(System.Int64)">
            <summary>
            Get a list of provisioned MTouch codes for the specified survey.
            </summary>
            <param name="surveyID">unique ID for the survey</param>
            <returns>list of MTouch codes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveAllMTouchesForLanguageID(System.Int64)">
            <summary>
            Get a list of provisioned MTouch codes for the specified language.
            </summary>
            <param name="languageID">unique ID for the language</param>
            <returns>list of MTouch codes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveAllMTouches(System.Int64,System.Int64)">
            <summary>
            Get a list of provisioned MTouch codes for the specified survey and language.
            </summary>
            <param name="surveyID">unique ID for the survey</param>
            <param name="languageID">unique ID for the language</param>
            <returns>list of MTouch codes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveAllIPCodes">
            <summary>
            Get a list of provisioned IPCodes
            </summary>
            <returns>list of IPCodes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveAllIPCodesForSurveyID(System.Int64)">
            <summary>
            Get a list of provisioned IPCodes by survey ID
            </summary>
            <param name="surveyID">unique ID for the survey</param>
            <returns>list of IPCodes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveAllIPCodesForLanguageID(System.Int64)">
            <summary>
            Get a list of provisioned IPCodes by language ID
            </summary>
            <param name="languageID">unique ID for the language</param>
            <returns>list of IPCodes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveAllIPCodes(System.Int64,System.Int64)">
            <summary>
            Get a list of provisioned IPCodes by survey ID and language ID
            </summary>
            <param name="surveyID">unique ID for the survey</param>
            <param name="languageID">unique ID for the language</param>
            <returns>list of IPCodes</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveEligibleMTouches(System.Int64,System.Int64,System.Int32)">
            <summary>
            Get a list of eligible MTouch respondents
            </summary>
            <param name="surveyID">unique survey ID</param>
            <param name="languageID">unique language ID</param>
            <param name="maxResults">max results to return [1..100]</param>
            <returns>list of respondents</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveEligibleRespondents(System.Int64,System.Int64,System.String,System.Int64)">
            <summary>
            Get a list of eligible respondents for a specific survey/language, and for a specific mtouch and/or ipcode.
            </summary>
            <param name="surveyID">unique identifier for associated survey</param>
            <param name="languageID">unique identifier for associated language</param>
            <param name="mtouch">mtouch</param>
            <param name="ipcode">ipcode</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveEligibleRespondents(System.Int64,System.String,System.Int64)">
            <summary>
            Get a list of eligible respondents for a specific language, and for a specific mtouch and/or ipcode.
            </summary>
            <param name="languageID">unique identifier for associated language</param>
            <param name="mtouch">mtouch</param>
            <param name="ipcode">ipcode</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.EvictRespondentFromCache(Brierley.FrameWork.Data.DomainModel.SMRespondent)">
            <summary>
            Evict cached respondent from cache
            </summary>
            <param name="respondent">respondent</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.IsValidMTouch(System.String)">
            <summary>
            Is the provided mtouch valid?  That is, does it exist in the Respondent table?
            </summary>
            <param name="mtouch">mtouch code</param>
            <returns>true if valid, false otherwise</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.NumCompletesForSegment(System.Int64,System.String,System.String)">
            <summary>
            Number of completions by segment
            </summary>
            <param name="surveyID">unique ID of the survey</param>
            <param name="respondentPropName">segment property name</param>
            <param name="respondentPropValue">segment property value</param>
            <returns>count of completed surveys for specified segment</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteRespondent(Brierley.FrameWork.Data.DomainModel.SMRespondent)">
            <summary>
            Delete a respondent.
            </summary>
            <param name="respondent">respondent to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteRespondent(System.Int64)">
            <summary>
            Delete a respondent.
            </summary>
            <param name="respondentID">the ID of the respondent</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateResponse(Brierley.FrameWork.Data.DomainModel.SMResponse)">
            <summary>
            Create a response.
            </summary>
            <param name="question">the response to create</param>
            <returns>the new response</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateResponse(Brierley.FrameWork.Data.DomainModel.SMResponse)">
            <summary>
            Update a response.
            </summary>
            <param name="response">the response to update</param>
            <returns>the updated response</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveResponse(System.Int64)">
            <summary>
            Get a specific response.
            </summary>
            <param name="responseID">the ID of the response</param>
            <returns>the specified response, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveResponsesForState(System.Int64,System.Int64)">
            <summary>
            Get a list of response for a specific Respondent and State.
            </summary>
            <param name="respondentID">associated Respondent</param>
            <param name="stateID">associated State</param>
            <returns>list of matching Response</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveResponses(System.Int64,System.Int64)">
            <summary>
            Get a list of response for a specific Respondent and QuestionContent.
            </summary>
            <param name="respondentID">associated Respondent</param>
            <param name="questionContentID">associated QuestionContent</param>
            <returns>list of matching Response</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveResponsesAsCSV(System.Int64,System.Boolean)">
            <summary>
            Get responses as CSV
            </summary>
            <param name="surveyID">unique identifier for the desired survey</param>
            <returns>string containing CSV data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveResponsesAsXLS(System.Int64,System.String)">
            <summary>
            Get responses as XLS
            </summary>
            <param name="surveyID">unique identifier for the desired survey</param>
            <param name="worksheetName">the value to use for the worksheet name</param>
            <returns>byte[] containing XLS data</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveResponsesSPSSMetadata(System.Int64)">
            <summary>
            Get responses SPSS metadata.  The metadata provides a mapping between the answer values and
            the numeric values used in RetrieveResponsesAsCSV with forSPSS=true.
            </summary>
            <param name="surveyID">unique identifier for the desired survey</param>
            <returns>string with the SPSS metadata definitions</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveResponsesSPSSDatamap(System.Int64)">
            <summary>
            Get responses SPSS data map.  This is used to compare the numerical values in the SPSS data
            download with the textual values in the regular CSV data download.
            </summary>
            <param name="surveyID">unique identifier for the desired survey</param>
            <returns>string with SPSS data map</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.SimpleReport(System.Int64,System.String)">
            <summary>
            Get a simple report.
            </summary>
            <param name="surveyID">unique identifier for the desired survey</param>
            <returns>SurveyReportData</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.IsQuotaMet(System.Int64,System.Int64)">
            <summary>
            Has the specified quota been met for the specified survey?  Note, a negative quota value can
            never be met, and a zero value is always met.
            </summary>
            <param name="surveyID">unique identifier for the survey</param>
            <param name="quota">quota</param>
            <returns>true if quota exceeded, false otherwise</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.NumRespondents(System.Int64,System.Int64,System.Int64)">
            <summary>
            The number of respondents who answered the specified question in the specified survey.
            </summary>
            <param name="surveyID">unique identifier for the survey</param>
            <param name="questionID">unique identifier for the question</param>
            <param name="matrixIndex">optional index of the question in the matrix, use -1 to omit</param>
            <returns>number of respondents</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.NeedResponse(System.Int64,System.Int64,System.Int64)">
            <summary>
            Do we need a response from the specified respondent to the question associated with the 
            specified state in the specified language?  That is, is there no existing response?
            </summary>
            <param name="stateID">unique identifier for the state in the state model</param>
            <param name="languageID">unique identifier for the language</param>
            <param name="respondentID">unique identifier for the respondent</param>
            <returns>true if we need a response, false otherwise</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteResponse(Brierley.FrameWork.Data.DomainModel.SMResponse)">
            <summary>
            Delete a response.
            </summary>
            <param name="response">response to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteResponse(System.Int64)">
            <summary>
            Delete a response.
            </summary>
            <param name="responseID">the ID of the response</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteResponses(System.Int64,System.Int64,System.String,System.Int64)">
            <summary>
            Delete responses based on specified criteria.
            </summary>
            <param name="surveyID">ID of the survey, or -1 for all</param>
            <param name="languageID">ID of the language, or -1 for all</param>
            <param name="mtouch">MTouch code, or null/string.Empty for unspecified</param>
            <param name="ipcode">IPCode, or -1 for unspecified</param>
            <returns>number of rows updated</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteResponsesForSurvey(System.Int64,System.Int64)">
            <summary>
            Delete all of the responses for a survey/language
            </summary>
            <param name="surveyID">ID for the survey</param>
            <param name="languageID">ID for the language (optional)</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteResponsesForQuestionContent(System.Int64)">
            <summary>
            Delete responses for question content
            </summary>
            <param name="questionContentID">ID of the question content</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateDecision(Brierley.FrameWork.Data.DomainModel.SMDecision)">
            <summary>
            Create a decision.
            </summary>
            <param name="decision">the decision to create</param>
            <returns>the new decision</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateDecision(Brierley.FrameWork.Data.DomainModel.SMDecision)">
            <summary>
            Update a decision.
            </summary>
            <param name="decision">the decision to update</param>
            <returns>the updated decision</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveDecision(System.Int64)">
            <summary>
            Get a specific decision.
            </summary>
            <param name="decisionID">the ID of the decision</param>
            <returns>the specified decision, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveDecisionByStateID(System.Int64)">
            <summary>
            Get a specific decision.
            </summary>
            <param name="stateID">the ID of the associated state</param>
            <returns>the specified decision, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteDecision(Brierley.FrameWork.Data.DomainModel.SMDecision)">
            <summary>
            Delete a decision.
            </summary>
            <param name="decision">decision to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteDecision(System.Int64)">
            <summary>
            Delete a decision.
            </summary>
            <param name="decisionID">the ID of the decision</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateMessage(Brierley.FrameWork.Data.DomainModel.SMMessage)">
            <summary>
            Create a message.
            </summary>
            <param name="message">the message to create</param>
            <returns>the new message</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateMessage(Brierley.FrameWork.Data.DomainModel.SMMessage)">
            <summary>
            Update a message.
            </summary>
            <param name="message">the message to update</param>
            <returns>the updated message</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveMessage(System.Int64)">
            <summary>
            Get a specific message.
            </summary>
            <param name="messageID">the ID of the message</param>
            <returns>the specified message, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveMessageByStateID(System.Int64)">
            <summary>
            Get a specific message.
            </summary>
            <param name="stateID">the ID of the associated state</param>
            <returns>the specified message, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteMessage(Brierley.FrameWork.Data.DomainModel.SMMessage)">
            <summary>
            Delete a message.
            </summary>
            <param name="message">message to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteMessage(System.Int64)">
            <summary>
            Delete a message.
            </summary>
            <param name="messageID">the ID of the message</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateConcept(Brierley.FrameWork.Data.DomainModel.SMConcept)">
            <summary>
            Create a concept.
            </summary>
            <param name="concept">the concept to create</param>
            <returns>the new concept</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateConcept(Brierley.FrameWork.Data.DomainModel.SMConcept)">
            <summary>
            Update a concept.
            </summary>
            <param name="concept">the concept to update</param>
            <returns>the updated concept</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveConcept(System.Int64)">
            <summary>
            Get a specific concept.
            </summary>
            <param name="conceptID">the ID of the concept</param>
            <returns>the specified concept, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveConceptByName(System.Int64,System.Int64,System.String)">
            <summary>
            Get a specific concept by name.
            </summary>
            <param name="surveyID">the ID of the associated survey</param>
            <param name="languageID">the ID of the associated language</param>
            <param name="name">the name of the concept</param>
            <returns>the specified concept, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveConcepts(System.Int64,System.Int64)">
            <summary>
            Get list of concepts for a specific survey.
            </summary>
            <param name="surveyID">the ID of the associated survey</param>
            <param name="languageID">the ID of the associated language</param>
            <returns>the list of concepts for the specified survey</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteConcept(Brierley.FrameWork.Data.DomainModel.SMConcept)">
            <summary>
            Delete a concept.
            </summary>
            <param name="concept">concept to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteConcept(System.Int64)">
            <summary>
            Delete a concept.
            </summary>
            <param name="conceptID">the ID of the concept</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateConceptView(Brierley.FrameWork.Data.DomainModel.SMConceptView)">
            <summary>
            Create a conceptView.
            </summary>
            <param name="conceptView">the conceptView to create</param>
            <returns>the new conceptView</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateConceptView(Brierley.FrameWork.Data.DomainModel.SMConceptView)">
            <summary>
            Update a conceptView.
            </summary>
            <param name="conceptView">the conceptView to update</param>
            <returns>the updated conceptView</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveConceptView(System.Int64)">
            <summary>
            Get a specific conceptView.
            </summary>
            <param name="conceptViewID">the ID of the conceptView</param>
            <returns>the specified conceptView, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveConceptViews">
            <summary>
            Get list of all conceptViews.
            </summary>
            <returns>the list of conceptViews</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveConceptViewsByConcept(System.Int64)">
            <summary>
            Get list of all ConceptViews for a particular Concept.
            </summary>
            <param name="conceptID">the ID of the associated concept</param>
            <returns>the list of conceptViews for the specified concept</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveConceptViewsByRespondent(System.Int64)">
            <summary>
            Get list of all ConceptViews for a particular Respondent.
            </summary>
            <param name="respondentID">the ID of the associated respondent</param>
            <returns>the list of conceptViews for the specified respondent</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveConceptViewsByRespondentAndState(System.Int64,System.Int64)">
            <summary>
            Get list of all ConceptViews for a particular Respondent and State.
            </summary>
            <param name="respondentID">the ID of the associated respondent</param>
            <param name="stateID">the ID of the associated state</param>
            <returns>the list of conceptViews for the specified respondent and state</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteConceptView(Brierley.FrameWork.Data.DomainModel.SMConceptView)">
            <summary>
            Delete a conceptView.
            </summary>
            <param name="conceptView">conceptView to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteConceptView(System.Int64)">
            <summary>
            Delete a conceptView.
            </summary>
            <param name="conceptID">the ID of the conceptView</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteConceptViewsByConcept(System.Int64)">
            <summary>
            Delete the conceptViews for a particular concept.
            </summary>
            <param name="conceptID">the ID of the concept</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteConceptViewsByRespondent(System.Int64)">
            <summary>
            Delete the conceptViews for a particular respondent.
            </summary>
            <param name="conceptID">the ID of the concept</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteConceptViewsForSurvey(System.Int64,System.Int64)">
            <summary>
            Delete the conceptViews for a survey/language
            </summary>
            <param name="surveyID">ID of the survey</param>
            <param name="languageID">ID of the language (optional)</param>
            <returns>number of rows deleted</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateCultureMap(Brierley.FrameWork.Data.DomainModel.SMCultureMap)">
            <summary>
            Create a cultureMap.
            </summary>
            <param name="cultureMap">the cultureMap to create</param>
            <returns>the new cultureMap</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateCultureMap(Brierley.FrameWork.Data.DomainModel.SMCultureMap)">
            <summary>
            Update a cultureMap.
            </summary>
            <param name="cultureMap">the cultureMap to update</param>
            <returns>the updated cultureMap</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveCultureMap(System.Int64)">
            <summary>
            Get a specific cultureMap.
            </summary>
            <param name="cultureMapID">the ID of the cultureMap</param>
            <returns>the specified cultureMap, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveCultureMap(System.String)">
            <summary>
            Get a specific cultureMap.
            </summary>
            <param name="culture">culture (e.g., "en-US")</param>
            <returns>specified cultureMap, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveCultureMaps">
            <summary>
            Get all cultureMaps.
            </summary>
            <returns>list of CultureMap</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteCultureMap(Brierley.FrameWork.Data.DomainModel.SMCultureMap)">
            <summary>
            Delete a cultureMap.
            </summary>
            <param name="cultureMap">cultureMap to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteCultureMap(System.Int64)">
            <summary>
            Delete a cultureMap.
            </summary>
            <param name="cultureMapID">the ID of the cultureMap</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.CreateLanguage(Brierley.FrameWork.Data.DomainModel.SMLanguage)">
            <summary>
            Create a language.
            </summary>
            <param name="language">the language to create</param>
            <returns>the new language</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.UpdateLanguage(Brierley.FrameWork.Data.DomainModel.SMLanguage)">
            <summary>
            Update a language.
            </summary>
            <param name="language">the language to update</param>
            <returns>the updated language</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveLanguage(System.Int64)">
            <summary>
            Get a specific language.
            </summary>
            <param name="languageID">the ID of the language</param>
            <returns>the specified language, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveLanguage(System.String)">
            <summary>
            Get a specific language.
            </summary>
            <param name="description">description (e.g., "English")</param>
            <returns>the specified language, or null if it doesn't exist</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.RetrieveLanguages">
            <summary>
            Get all languages.
            </summary>
            <returns>list of SMLanguage</returns>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteLanguage(Brierley.FrameWork.Data.DomainModel.SMLanguage)">
            <summary>
            Delete a language.
            </summary>
            <param name="language">language to be deleted</param>
        </member>
        <member name="M:Brierley.FrameWork.Data.SurveyManager.DeleteLanguage(System.Int64)">
            <summary>
            Delete a language.
            </summary>
            <param name="languageID">the ID of the language</param>
        </member>
        <member name="T:Brierley.FrameWork.Data.LWCriterion">
            <summary>
            This class provides a way to define criteria for executing dynamic queries.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Data.LWDataServiceUtil.ServiceInstances">
            <summary>
            Retrieves a list of all current service configurations.
            </summary>
            <remarks>
            This method will not create a new instance. It only returns existing ones. Its intended use is for
            maintenance tasks in applications that may have a single data service (e.g., LW Portal) instance 
            or multiple instances (Loyalty Navigator).
            </remarks>
            <returns>List of ILWService</returns>
        </member>
        <member name="M:Brierley.FrameWork.Email.AwsTriggeredEmail.Init(System.String,Brierley.FrameWork.Common.Config.LWConfiguration)">
            <summary>
            
            </summary>
            <param name="config">LWConfiguration used to connect to framework database</param>
            <param name="server">wrapper for email API</param>
            <param name="emailName">name of the triggered email</param>
        </member>
        <member name="M:Brierley.FrameWork.Email.AwsTriggeredEmail.Init(System.Int64,Brierley.FrameWork.Common.Config.LWConfiguration)">
            <summary>
            
            </summary>
            <param name="config">LWConfiguration used to connect to framework database</param>
            <param name="server">wrapper for email API</param>
            <param name="mailingName">name of the triggered email</param>
        </member>
        <member name="M:Brierley.FrameWork.Email.AwsTriggeredEmail.SendAsync(Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            Sends a triggered email to a loyalty member.
            </summary>
            <param name="Member">The loyalty member the email will be sent to.</param>
        </member>
        <member name="M:Brierley.FrameWork.Email.AwsTriggeredEmail.SendAsync(Brierley.FrameWork.Data.DomainModel.Member,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a triggered email to a loyalty member.
            </summary>
            <param name="member">The loyalty member the email will be sent to.</param>
            <param name="additionalFields">Name/value pair of fields, which can be used to override the value of any field in the email.</param>
        </member>
        <member name="M:Brierley.FrameWork.Email.AwsTriggeredEmail.SendAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a triggered email.
            </summary>
            <remarks>
            This method can be used to send an email in the event that the email should not go to a loyalty 
            member (e.g., an alert which needs to be send to a customer service rep or administrator).
            </remarks>
            <param name="recipientEmail">The recipient's email address, if different from Member.PrimaryEmailAddress.</param>
            <param name="manualFields">Name/value pair of fields.</param>
            <param name="emailQueueID">The ID of the send record in the EmailQueue table.</param>
            <returns>Serial number of the mailing.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Email.AwsTriggeredEmail.LoadConfig">
            <summary>
            Helper method for constructors.  Loads framework config values for email API (username, password, url).
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Email.AwsTriggeredEmail.LoadEmail">
            <summary>
            Helper method for constructors.  Loads the email from the framework database and puts it into a listening state.
            </summary>
            <returns>True if the email is successfully loaded, else false</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Brierley.FrameWork.Email.DmcTriggeredEmail" -->
        <member name="M:Brierley.FrameWork.Email.DmcTriggeredEmail.Init(System.String,Brierley.FrameWork.Common.Config.LWConfiguration)">
            <summary>
            
            </summary>
            <param name="config">LWConfiguration used to connect to framework database</param>
            <param name="server">wrapper for email API</param>
            <param name="emailName">name of the triggered email</param>
        </member>
        <member name="M:Brierley.FrameWork.Email.DmcTriggeredEmail.Init(System.Int64,Brierley.FrameWork.Common.Config.LWConfiguration)">
            <summary>
            
            </summary>
            <param name="config">LWConfiguration used to connect to framework database</param>
            <param name="server">wrapper for email API</param>
            <param name="mailingName">name of the triggered email</param>
        </member>
        <member name="M:Brierley.FrameWork.Email.DmcTriggeredEmail.SendAsync(Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            Sends a triggered email to a loyalty member.
            </summary>
            <param name="Member">The loyalty member the email will be sent to.</param>
        </member>
        <member name="M:Brierley.FrameWork.Email.DmcTriggeredEmail.SendAsync(Brierley.FrameWork.Data.DomainModel.Member,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a triggered email to a loyalty member.
            </summary>
            <param name="member">The loyalty member the email will be sent to.</param>
            <param name="additionalFields">Name/value pair of fields, which can be used to override the value of any field in the email.</param>
        </member>
        <member name="M:Brierley.FrameWork.Email.DmcTriggeredEmail.SendAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a triggered email.
            </summary>
            <remarks>
            This method can be used to send an email in the event that the email should not go to a loyalty 
            member (e.g., an alert which needs to be send to a customer service rep or administrator).
            </remarks>
            <param name="recipientEmail">The recipient's email address, if different from Member.PrimaryEmailAddress.</param>
            <param name="manualFields">Name/value pair of fields.</param>
            <param name="emailQueueID">The ID of the send record in the EmailQueue table.</param>
            <returns>Serial number of the mailing.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Email.DmcTriggeredEmail.LoadConfig">
            <summary>
            Helper method for constructors.  Loads framework config values for email API (username, password, url).
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Email.DmcTriggeredEmail.LoadEmail">
            <summary>
            Helper method for constructors.  Loads the email from the framework database and puts it into a listening state.
            </summary>
            <returns>True if the email is successfully loaded, else false</returns>
        </member>
        <member name="M:Brierley.FrameWork.Email.ITriggeredEmail.SendAsync(Brierley.FrameWork.Data.DomainModel.Member,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a triggered email to a loyalty member.
            </summary>
            <param name="member">The loyalty member the email will be sent to.</param>
            <param name="additionalFields">Name/value pair of fields, which can be used to override the value of any field in the email.</param>
        </member>
        <member name="M:Brierley.FrameWork.Email.ITriggeredEmail.SendAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a triggered email.
            </summary>
            <remarks>
            This method can be used to send an email in the event that the email should not go to a loyalty 
            member (e.g., an alert which needs to be send to a customer service rep or administrator).
            </remarks>
            <param name="recipientEmail">The recipient's email address, if different from Member.PrimaryEmailAddress.</param>
            <param name="manualFields">Name/value pair of fields.</param>
            <param name="emailQueueID">The ID of the send record in the EmailQueue table.</param>
            <returns>Serial number of the mailing.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Brierley.FrameWork.Email.TriggeredEmail" -->
        <member name="M:Brierley.FrameWork.Email.TriggeredEmail.SendAsync(Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            Sends a triggered email to a loyalty member.
            </summary>
            <param name="Member">The loyalty member the email will be sent to.</param>
        </member>
        <member name="M:Brierley.FrameWork.Email.TriggeredEmail.SendAsync(Brierley.FrameWork.Data.DomainModel.Member,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a triggered email to a loyalty member.
            </summary>
            <param name="member">The loyalty member the email will be sent to.</param>
            <param name="additionalFields">Name/value pair of fields, which can be used to override the value of any field in the email.</param>
        </member>
        <member name="M:Brierley.FrameWork.Email.TriggeredEmail.SendAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a triggered email.
            </summary>
            <remarks>
            This method can be used to send an email in the event that the email should not go to a loyalty 
            member (e.g., an alert which needs to be send to a customer service rep or administrator).
            </remarks>
            <param name="recipientEmail">The recipient's email address, if different from Member.PrimaryEmailAddress.</param>
            <param name="manualFields">Name/value pair of fields.</param>
            <param name="emailQueueID">The ID of the send record in the EmailQueue table.</param>
            <returns>Serial number of the mailing.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Email.TriggeredEmail.LoadEmail">
            <summary>
            Helper method for constructors.  Loads the email from the framework database and puts it into a listening state.
            </summary>
            <returns>True if the email is successfully loaded, else false</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Brierley.FrameWork.Email.XsltDocument.UrlPreviewEval(System.Text.RegularExpressions.Match)" -->
        <member name="M:Brierley.FrameWork.Email.XsltDocument.FieldPlaceholderSet(System.Text.RegularExpressions.Match)">
            <summary>
            Convert a template field to a placeholder value so that it is not evaluated as a bScript expression
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Email.XsltDocument.FieldPlaceholderRestore(System.Text.RegularExpressions.Match)">
            <summary>
            Convert a template field from its placeholder value
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Email.XsltDocument.GetInvalidStructuredContent(Brierley.FrameWork.Email.ContentArea,Brierley.FrameWork.Data.ContentService,System.Int64)">
            <summary>
            Performs XSLT validation against structured content
            </summary>
            <remarks>
            This function extracts each block of content in use for the content area and checks to see if it is valid xml.
            </remarks>
            <param name="area"></param>
            <param name="cms"></param>
            <param name="documentId"></param>
            <param name="editable"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Email.XsltDocument.Validate(System.String,System.String@,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="emailHtml"></param>
            <param name="emailText"></param>
            <param name="xsltErrors"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.JobScheduler.Jobs.ExchangeRateJob.GetExchangeRates">
            <summary>
            This will try to create an instance of a class of type IRefreshExhangeRateJob and invoke the FetchExchangeRtes method,
            the method returns a list of exchange rate objects that will either be added or updated. 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.JobScheduler.IJob">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.JobScheduler.IJob.SetRunID(System.Int64)">
            <summary>
            Sets the run ID for this job
            </summary>
            <param name="runID">run ID</param>
        </member>
        <member name="M:Brierley.FrameWork.JobScheduler.IJob.Run(System.String)">
            <summary>
            Executes the job.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.JobScheduler.IJob.Resume(System.String)">
            <summary>
            Resumes an interrupted job.
            </summary>
            <param name="parms"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.JobScheduler.IJob.RequestAbort">
            <summary>
            Sends an abort request to the job.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.JobScheduler.IJob.GetReport">
            <summary>
            Retrieves the text of the report for the job.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.JobScheduler.IJob.FinalizeJob(Brierley.FrameWork.Common.ScheduleJobStatus)">
            <summary>
            Perform any final activities.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.JobScheduler.IJobFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.JobScheduler.IJobFactory.GetJob">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.JobScheduler.LWScheduleBase.IsActive(Brierley.FrameWork.Data.DomainModel.ScheduledJob)">
            <summary>
            This method ensures that the timer is active now, based on the start time that
            was specified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.JobScheduler.LWScheduleBase.IsExpired(Brierley.FrameWork.Data.DomainModel.ScheduledJob)">
            <summary>
            This method checks the end date and ensures that the timer is not expired
            yet.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Messaging.Messages.AmazonSesBounceNotification">
            <summary>Represents an Amazon SES bounce notification.</summary>
        </member>
        <member name="T:Brierley.FrameWork.Messaging.Messages.AmazonSesBounce">
            <summary>Represents meta data for the bounce notification from Amazon SES.</summary>
        </member>
        <member name="T:Brierley.FrameWork.Messaging.Messages.AmazonSesBouncedRecipient">
            <summary>Represents the email address of recipients that bounced
            when sending from Amazon SES.</summary>
        </member>
        <member name="M:Brierley.FrameWork.Messaging.Messages.SmsOptInMessage.#ctor(System.Int64,Brierley.FrameWork.Common.RuleInvocationType,Brierley.FrameWork.ContextObject,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="clientDataObject"></param>
            <param name="invocationType"></param>
            <param name="context"></param>
            <param name="doubleOptInRequired"></param>
            <param name="isOptingOut"></param>
            <param name="isOptingIn"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Brierley.FrameWork.Messaging.Contracts.IConsumer.Consume(System.Object)" -->
        <member name="M:Brierley.FrameWork.Messaging.Contracts.IConsumerFactory.Initialize(Brierley.FrameWork.Messaging.Config.ConsumerCfg)">
            <summary>
            
            </summary>
            <param name="cfg"></param>
        </member>
        <member name="M:Brierley.FrameWork.Messaging.Contracts.IConsumerFactory.ReserveInstance">
            <summary>
            This operation is invoked to get an instance of IConsumer to consume a message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Messaging.Contracts.IConsumerFactory.ReturnInstance(Brierley.FrameWork.Messaging.Contracts.IConsumer)">
            <summary>
            This is called after the message has been consumed.
            </summary>
            <param name="consumer"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Messaging.IMessagingMonitor">
            <summary>
            Used to monitor message bus processing
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Messaging.IMessagingMonitor.Success(System.String,Brierley.FrameWork.Messaging.Contracts.IMessage)">
            <summary>
            Logs the successful processing of a message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Brierley.FrameWork.Messaging.IMessagingMonitor.Failure(System.String,Brierley.FrameWork.Messaging.Contracts.IMessage,System.Exception,System.Boolean)">
            <summary>
            Logs the failed processing of a message
            </summary>
            <param name="message">The message that failed to process</param>
            <param name="ex">The exception that was thrown during processing</param>
            <param name="moved">Indicates whether or not the message was moved to the errors subqueue.</param>
        </member>
        <member name="M:Brierley.FrameWork.Messaging.ConsumerFactoryBase.ReserveInstance">
            <summary>
            This operation is invoked to get an instance of IConsumer to consume a message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Messaging.ConsumerFactoryBase.ReturnInstance(Brierley.FrameWork.Messaging.Contracts.IConsumer)">
            <summary>
            This is called after the message has been consumed.
            </summary>
            <param name="consumer"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Messaging.MessagingBus.CanSend(System.Type)">
            <summary>
            Returns a boolean indicating whether or not the bus is configured to accept and send messages of the specified type.
            </summary>
            <param name="messageType"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Messaging.MessageListener">
            <summary>
            This is called by the main listener thread to listen to incoming messages and consume them.
            It starts its own threadpool. Each thread in the pool listens on the queue and whichever
            thread gets the message processes it completely.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.UpdateAndroidPayLoyaltyCard.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.UpdateAndroidPayLoyaltyCard.Validate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.UpdateAndroidPayLoyaltyCard.Invoke(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="Context"></param>
            <returns></returns>
        </member>
        <member name="P:Brierley.FrameWork.Rules.AwardPoints.LocationIdExpression">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.AwardPoints.ChangedByExpression">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.AwardPoints.EvaluateTierRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.AwardPoints.RuleList">
            <summary>
            Returns a dictionary of all defined rules
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.AwardPoints.PointEventTypes">
            <summary>
            Returns a dictionary of all defined PointEvents
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.AwardPointsRuleResult.Description">
            <summary>
            Result of AwardPointsRule Description Expression evaluation
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Rules.ChangePassword">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.ChangePassword.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.ChangePassword.Validate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.ChangePassword.PasswordExpression">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.ChangePassword.PasswordChangeRequired">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.ChangePassword.TriggeredEmailName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.ChangePassword.AvailableTriggeredEmails">
            <summary>
            Returns list of all available triggered emails
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.CreateVirtualCardRule.LoyaltyIdGenerationSources">
            <summary>
            Returns list of available Loyalty ID Sources
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.CreateVirtualCardRule.Invoke(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Rules.IssueNotification">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.IssueNotification.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.IssueNotification.Validate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.IssueNotification.NotificationDefType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.IssueNotification.NotificationDefs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.IssueNotification.Invoke(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="Context"></param>
            <param name="PreviousResultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Brierley.FrameWork.Rules.TriggeredSmsRule.AvailableTriggeredSmsMessages">
            <summary>
            Returns list of all available triggered sms messages
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.TriggeredSmsRule.Invoke(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="PreviousResultCode"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Rules.UpdateLastActivityDate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.UpdateLastActivityDate.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.UpdateLastActivityDate.Validate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.UpdateLastActivityDate.ActivityDate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.UpdateLastActivityDate.Invoke(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="Context"></param>
            <param name="PreviousResultCode"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Rules.RealtimeCampaign">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RealtimeCampaign.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RealtimeCampaign.Validate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RealtimeCampaign.CampaignToRun">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RealtimeCampaign.RealtimeCampaigns">
            <summary>
            Returns a dictionary of all realtime campaigns
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RealtimeCampaign.Invoke(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="Context"></param>
            <param name="PreviousResultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Brierley.FrameWork.Rules.IssueCoupon.AvailableTriggeredEmails">
            <summary>
            Returns list of all available triggered emails
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.IssueCoupon.Invoke(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="Context"></param>
            <param name="PreviousResultCode"></param>
            <returns></returns>
        </member>
        <member name="P:Brierley.FrameWork.Rules.AwardDefaultContent.DefaultBonusCategories">
            <summary>
            Returns a dictionary of all defined top level categories
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.AwardDefaultContent.DefaultCouponCategories">
            <summary>
            Returns a dictionary of all defined top level categories
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Rules.RewardCatalogIssueReward">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RewardCatalogIssueReward.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RewardCatalogIssueReward.Validate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RewardCatalogIssueReward.FulfillmentOption">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RewardCatalogIssueReward.PointsConsumption">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RewardCatalogIssueReward.ExpiryDateExpression">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RewardCatalogIssueReward.ChangedByExpression">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RewardCatalogIssueReward.TriggeredEmailName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RewardCatalogIssueReward.AvailableTriggeredEmails">
            <summary>
            Returns list of all available triggered emails
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RewardCatalogIssueReward.AssignLWCertificate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RewardCatalogIssueReward.MarkAsRedeemed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RewardCatalogIssueReward.LowThresholdEmailName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RewardCatalogIssueReward.LowCertificatesEmailRecepient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RewardCatalogIssueReward.Invoke(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="Context"></param>
            <param name="PreviousResultCode"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Rules.EditorAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.EditorAttribute.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:Brierley.FrameWork.Rules.EditorAttribute.TypeName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Rules.EvaluateTier">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.EvaluateTier.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.EvaluateTier.Validate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.EvaluateTier.OverridePointsLogic">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.EvaluateTier.IncludeExpiredPoints">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.EvaluateTier.VirtualCardLocationLogic">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.EvaluateTier.VirtualCardNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.EvaluateTier.Tiers">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.EvaluateTier.TierNames">
            <summary>
            Returns a dictionary of all defined Tiers
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.EvaluateTier.ExpireDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.EvaluateTier.TierUpgradeEmailName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.EvaluateTier.TierDowngradeEmailName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.EvaluateTier.AvailableTriggeredEmails">
            <summary>
            Returns list of all available triggered emails
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.IssueReward.Invoke(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="PreviousResultCode">
                0 - The rule was successfull
                1 - The rule did not run because a promotion list was specified and the member was not part of it.
                2 - The rule did not run because the member did not have enough points.
                3 - The rule did not run because this was not a member.
            </param>
            <returns>
            If the ExhaustPoints option is set to false then the id of the reward awarded is returned.  If that
            option is set to true then 0 is returned.
            </returns>
        </member>
        <member name="T:Brierley.FrameWork.Rules.RuleBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RuleBase.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="RuleName"></param>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RuleBase.DeSerialize(System.String)">
            <summary>
            /Provides deserialization from a byte buffer.
            </summary>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RuleBase.Serialize(System.String)">
            <summary>
            Privides a byte[] array of survey data for mass storage.
            </summary>
            <returns>a byte[] array of binary survey data.</returns>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RuleBase.ResolveOwners(System.Object,Brierley.FrameWork.Data.DomainModel.Member@,Brierley.FrameWork.Data.DomainModel.VirtualCard@)">
            <summary>
            
            </summary>
            <param name="owner"></param>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RuleBase.RuleVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RuleBase.RuleId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RuleBase.RuleName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.RuleBase.RuleDescription">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RuleBase.Validate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RuleBase.Invoke(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="Context"></param>
            <param name="PreviousResultCode"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RuleBase.GetConfigurableMembers">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RuleBase.GetEnumerationValue(System.Type,System.String)">
            <summary>
            This method gets the integral value of the enumeration.
            </summary>
            <param name="t"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Rules.RuleBase.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Rules.TriggeredEmailRule">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.TriggeredEmailRule.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.TriggeredEmailRule.RecipientEmail">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.TriggeredEmailRule.TriggeredEmailName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.TriggeredEmailRule.AvailableTriggeredEmails">
            <summary>
            Returns list of all available triggered emails
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.TriggeredEmailRule.Invoke(Brierley.FrameWork.ContextObject)">
            <summary>
            
            </summary>
            <param name="Context"></param>
            <param name="PreviousResultCode"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Rules.UIDesign.RulePropertyOrderAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.UIDesign.RulePropertyOrderAttribute.Order">
            <summary>
            
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Rules.UIDesign.RulePropertyAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Rules.UIDesign.RulePropertyAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="isExpression"></param>
            <param name="isArrayProperty"></param>
            <param name="ArraySource"></param>
            <param name="Advanced"></param>
        </member>
        <member name="P:Brierley.FrameWork.Rules.UIDesign.RulePropertyAttribute.IsExpression">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.UIDesign.RulePropertyAttribute.IsArrayProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.UIDesign.RulePropertyAttribute.IsRequired">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.UIDesign.RulePropertyAttribute.IsMultiSelect">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.UIDesign.RulePropertyAttribute.ArraySource">
            <summary>
            
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Rules.UIDesign.RulePropertyAttribute.Advanced">
            <summary>
            Gets or sets whether the property should only be shown in the configuration screen's advanced view
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.WobCredentials.ServiceAccountId">
            <returns> the serviceAccountId </returns>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.WobCredentials.ServiceAccountPrivateKey">
            <returns> the serviceAccountPrivateKey </returns>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.WobCredentials.ApplicationName">
            <returns> the applicationName </returns>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.WobCredentials.IssuerId">
            <returns> the issuerId </returns>
        </member>
        <member name="T:Brierley.FrameWork.WalletPay.JsonWebToken">
            <summary>
            JSON Web Token (JWT) implementation as specified in 
            http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-08.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.WalletPay.JsonWebToken.Header">
            <summary>
            JWT Header as specified in http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-08#section-5.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.JsonWebToken.Header.Type">
            <summary>
            Gets or sets type header parameter used to declare the type of this object or <c>null</c>.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.JsonWebToken.Header.ContentType">
            <summary>
            Gets or sets content type header parameter used to declare structural information about the JWT or 
            <c>null</c>.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.WalletPay.JsonWebToken.Payload">
            <summary>
            JWT Payload as specified in http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-08#section-4.1.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.JsonWebToken.Payload.Issuer">
            <summary>
            Gets or sets issuer claim that identifies the principal that issued the JWT or <c>null</c>.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.JsonWebToken.Payload.Subject">
            <summary>
            Gets or sets subject claim identifying the principal that is the subject of the JWT or <c>null</c>.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.JsonWebToken.Payload.Audience">
            <summary>
            Gets or sets audience claim that identifies the audience that the JWT is intended for (should either be
            a string or list) or <c>null</c>.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.JsonWebToken.Payload.ExpirationTimeSeconds">
            <summary>
            Gets or sets expiration time claim that identifies the expiration time (in seconds) on or after which 
            the token MUST NOT be accepted for processing or <c>null</c>.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.JsonWebToken.Payload.NotBeforeTimeSeconds">
            <summary>
            Gets or sets not before claim that identifies the time (in seconds) before which the token MUST NOT be
            accepted for processing or <c>null</c>.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.JsonWebToken.Payload.IssuedAtTimeSeconds">
            <summary>
            Gets or sets issued at claim that identifies the time (in seconds) at which the JWT was issued or 
            <c>null</c>.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.JsonWebToken.Payload.JwtId">
            <summary>
            Gets or sets JWT ID claim that provides a unique identifier for the JWT or <c>null</c>.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.JsonWebToken.Payload.Type">
            <summary>
            Gets or sets type claim that is used to declare a type for the contents of this JWT Claims Set or 
            <c>null</c>.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.WalletPay.JsonWebToken.Payload.AudienceAsList">
            <summary>Gets the audience property as a list.</summary>
        </member>
        <member name="M:Brierley.FrameWork.WalletPay.WobUtils.UrlSafeBase64Encode(System.String)">
            <summary>Encodes the provided UTF8 string into an URL safe base64 string.</summary>
            <param name="value">Value to encode</param>
            <returns>The URL safe base64 string</returns>
        </member>
        <member name="M:Brierley.FrameWork.WalletPay.WobUtils.UrlSafeBase64Encode(System.Byte[])">
            <summary>Encodes the byte array into an URL safe base64 string.</summary>
            <param name="bytes">Byte array to encode</param>
            <returns>The URL safe base64 string</returns>
        </member>
        <member name="T:Brierley.FrameWork.Dmc.Attribute">
            <summary>
            Represents an attribute in the DMC system.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.Attribute.Name">
            <summary>
            Gets or sets the name of the attribute.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.Attribute.Value">
            <summary>
            Gets or sets the value of the attribute. 
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Dmc.ErrorCode">
            <summary>
            DMC's error code enumeration. 
            </summary>
            <remarks>
            One of these codes is returned with the known DMC exceptions found in 
            the <see cref="N:Brierley.FrameWork.Dmc.Exceptions"/> namespace.
            </remarks>
        </member>
        <member name="M:Brierley.FrameWork.Dmc.DmcService.GetPersonalizationsAsync(System.Int64)">
            <summary>
            Returns the names of all personalizations (fields) used by the specified message.
            </summary>
            <param name="messageId">The unique identifier of the message to retrieve personalizations for.</param>
            <returns></returns>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.NoSuchObjectException">Thrown when the message id is not found</exception>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.InvalidParameterException">Thrown when an input parameter is in an invalid format</exception>
            /// <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.UnexpectedErrorException">Can be thrown if DMC encounters an unexpected exception</exception>
        </member>
        <member name="M:Brierley.FrameWork.Dmc.DmcService.GetUserAsync(System.String)">
            <summary>
            Retrieves a user from the DMC system.
            </summary>
            <param name="email">Email address of the user to retrieve.</param>
            <returns></returns>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.NoSuchObjectException">Thrown when an the user does not exist.</exception>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.UnexpectedErrorException">Can be thrown if DMC encounters an unexpected exception</exception>
        </member>
        <member name="M:Brierley.FrameWork.Dmc.DmcService.GetUserByMobilePhoneAsync(System.String)">
            <summary>
            Retrieves a user from the DMC system.
            </summary>
            <param name="email">Email address of the user to retrieve.</param>
            <returns></returns>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.NoSuchObjectException">Thrown when an the user does not exist.</exception>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.UnexpectedErrorException">Can be thrown if DMC encounters an unexpected exception</exception>
        </member>
        <member name="M:Brierley.FrameWork.Dmc.DmcService.CreateUserAsync(System.String,System.String,System.Collections.Generic.List{Brierley.FrameWork.Dmc.Attribute})">
            <summary>
            Creates a new user in the DMC system.
            </summary>
            <param name="email">The user's email address. This is required.</param>
            <param name="mobileNumber">The user's mobile number</param>
            <param name="attributes">Additional attributes to set for the user.</param>
            <returns>The newly created user</returns>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.InvalidParameterException">Thrown when an input parameter is in an invalid format</exception>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.ObjectAlreadyExistsException">Thrown when a user already exists with the same email address or mobile number</exception>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.UnexpectedErrorException">Can be thrown if DMC encounters an unexpected exception</exception>
        </member>
        <member name="M:Brierley.FrameWork.Dmc.DmcService.UpdateProfileByMobileNumberAsync(System.String,System.Collections.Generic.List{Brierley.FrameWork.Dmc.Attribute})">
            <summary>
            Updates a user profile in the DMC system by mobile number.
            </summary>
            <param name="mobileNumber">The user's mobile number</param>
            <param name="attributes">Additional attributes to set for the user.</param>
            <returns>The newly created user</returns>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.InvalidParameterException">Thrown when an input parameter is in an invalid format</exception>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.ObjectAlreadyExistsException">Thrown when a user already exists with the same email address or mobile number</exception>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.UnexpectedErrorException">Can be thrown if DMC encounters an unexpected exception</exception>
        </member>
        <member name="M:Brierley.FrameWork.Dmc.DmcService.SendSingleAsync(System.Int64,Brierley.FrameWork.Dmc.User,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a message through the DMC API.
            </summary>
            <param name="messageId">The Id of the message in the DMC system.</param>
            <param name="userId">The Id of the recipient in the DMC system.</param>
            <param name="personalizations">A dictionary of email personalizations and their values.</param>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.InvalidParameterException">Thrown when an input parameter is in an invalid format</exception>
            <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.NoSuchObjectException">Thrown when the message id is not found</exception>
            /// <exception cref="T:Brierley.FrameWork.Dmc.Exceptions.UnexpectedErrorException">Can be thrown if DMC encounters an unexpected exception</exception>
        </member>
        <member name="T:Brierley.FrameWork.Dmc.Exceptions.DmcException">
            <summary>
            Represents an exception generated by Teradata's DMC system.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.Exceptions.DmcException.ErrorActor">
            <summary>
            Gets or sets the party which is responsible for the error, according to DMC
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.Exceptions.DmcException.ErrorCode">
            <summary>
            Gets or sets the error code for the DMC exception
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.Exceptions.InvalidParameterException.ParameterName">
            <summary>
            Gets or sets the name of the invalid parameter
            </summary>
            <remarks>
            From DMC documentation: For list parameters, the offset of the invalid element within the list is specified 
            as a suffix. The suffix is the list offset (starting with zero for the first element) in square brackets.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.Exceptions.InvalidParameterException.PropertyName">
            <summary>
            Gets or sets the name of the invalid property.
            </summary>
            <remarks>
            Per the documentation, this is only applies to complex types.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.Exceptions.InvalidParameterException.Value">
            <summary>
            Gets or sets the value of the property that is invalid.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Dmc.Exceptions.NoSuchObjectException">
            <summary>
            An exception thrown by DMC when an object is not found.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Dmc.Exceptions.ObjectAlreadyExistsException">
            <summary>
            An exception thrown when attempting to create an object that already exists.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Dmc.Exceptions.ObjectException">
            <summary>
            Base class for DMC object exceptions (currently ObjectAlreadyExistsException and NoSuchObjectException)
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.Exceptions.ObjectException.ObjectType">
            <summary>
            Gets or sets the object type.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.Exceptions.ObjectException.PropertyName">
            <summary>
            Gets or sets the name of the property that was used to look up the object.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.Exceptions.ObjectException.PropertyValue">
            <summary>
            Gets or sets the value of the property that was used to look up the object.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Dmc.Exceptions.UnexpectedErrorException">
            <summary>
            According to DMC, the "base type for all exceptions representing unexpected error conditions."
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.Exceptions.UnexpectedErrorException.ErrorId">
            <summary>
            Gets or sets the Id of the unexpected error.
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Dmc.MessageContent">
            <summary>
            Represents the message content structure in the Teradata DMC system.
            Used to serialize message content when sending triggered emails.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.MessageContent.Personalizations">
            <summary>
            Gets or sets the list of personalizations for the message. 
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.MessageContent.Attachments">
            <summary>
            Gets or sets the list of attachments for the message.
            </summary>
            <remarks>
            Attachments are not supported in this version. Therefore, the property is defined as an
            object and will be serialized to JSON with a null value. The actual structure for this 
            class is string name, string contentType, string content
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.Dmc.User">
            <summary>
            User represents a user in the Teradata DMC system. 
            It is used to deserialize a user retrieved by the /user/getByEmail API method.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.User.Id">
            <summary>
            Gets or sets DMC's unique identifier. 
            </summary>
            <remarks>
            This property is used to identify the user in DMC, and its value is passed as 
            the recipientId parameter in the /message/sendSingle API call.
            </remarks>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.User.Email">
            <summary>
            Gets or sets the user's name.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.User.MobileNumber">
            <summary>
            Gets or sets the user's mobile number.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Dmc.User.Identifier">
            <summary>
            Gets or sets the user's identifier.
            </summary>
            <remarks>
            This is an optional identifier that is set by B+P and is external to DMC.
            For example, this property could be used to store the member's IPCode.
            </remarks>
        </member>
        <member name="T:Brierley.FrameWork.Interfaces.IAddAttributeSetInterceptor">
            <summary>
            This is an interceptor interface for the AddAttributeSet API call.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IAddAttributeSetInterceptor.ProcessRawXmlElement(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.DomainModel.Member,System.Xml.Linq.XElement)">
            <summary>
            This intercept allows for each XML element that is parsed out of the arguments to be validated before attempting to add the container or if we need to update anything on the input.
            </summary>
            <param name="config">This is the configuration.</param>
            <param name="member">This is the member.</param>
            <param name="attributeNode">This is the attributeNode currently being worked on.</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IAddAttributeSetInterceptor.ProcessObjectBeforeAdd(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.DomainModel.Member,Brierley.FrameWork.Data.IClientDataObject,Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData)">
            <summary>
            Before we add the processed objects to the member, virtualcard, or parent, we may want to do some validation.
            </summary>
            <param name="config">This is the configuration.</param>
            <param name="member">This is the member.</param>
            <param name="attributeObject">This is the IClientDataObject that we are about to add to the member, virtualcard, or parent.</param>
            <param name="objectMetadata">This is the metadata about the IClientDataObject that we are about to add to the member, virtualcard, or parent.</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IAddAttributeSetInterceptor.ProcessMemberBeforeSave(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            Before saving the member and all attribute sets, we may want to manipulate something.
            </summary>
            <param name="config">This is the configuration.</param>
            <param name="member">This is the member.</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IAddAttributeSetInterceptor.ProcessMemberAfterSave(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.DomainModel.Member,System.Collections.Generic.List{Brierley.FrameWork.ContextObject.RuleResult})">
            <summary>
            After saving the member and all attribute sets, we may want to manipulate something.
            </summary>
            <param name="config">This is the configuration.</param>
            <param name="member">This is the member.</param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Interfaces.IInboundMobileInterceptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundMobileInterceptor.LoadMember(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            DAP configuration allows loading a member through an interceptor instead of builtin load
            methods.
            </summary>
            <param name="config">This is the configuration for the data acquisition processor.</param>
            <param name="memberNode">This is the member node that may have the information needed to load a member.</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundMobileInterceptor.HandleMemberNotFound(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            This method is invoked after all attempts to load a member based on the specified load directives
            have failed and the HandleMemberNotFoundInInterceptor attribute on the member load directive.
            Typically, this is used to log non-member transactions in the TxnHistory attribute set.
            </summary>
            <param name="config"></param>
            <param name="memberNode"></param>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundMobileInterceptor.ProcessMemberBeforePopulation(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,System.Object)">
            <summary>
            
            </summary>
            <param name="config"></param>
            <param name="member"></param>
            <param name="rawMember"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundMobileInterceptor.ProcessMemberBeforeSave(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            
            </summary>
            <param name="config"></param>
            <param name="repository"></param>
            <param name="member"></param>
            <param name="memberNode"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundMobileInterceptor.ProcessMemberAfterSave(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.DomainModel.Member,System.Collections.Generic.IList{Brierley.FrameWork.ContextObject.RuleResult})">
            <summary>
            
            </summary>
            <param name="config"></param>
            <param name="repository"></param>
            <param name="member"></param>
            <param name="memberNode"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IAuthenticateMemberInterceptor.BeforeAuthenticate(Brierley.FrameWork.Common.AuthenticationFields,System.String,System.String,System.String)">
            <summary>
            Called just before authenticating the member.  Interceptor can throw an exception
            to veto authentication of the user before the standard logic is called.
            </summary>
            <param name="identityType">type of identity, e.g., username</param>
            <param name="identity">identity provided by the user</param>
            <param name="password">cleartext password provided by the user</param>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IAuthenticateMemberInterceptor.AfterAuthenticateOK(Brierley.FrameWork.Data.DomainModel.Member,Brierley.FrameWork.Common.LoginStatusEnum)">
            <summary>
            Called when the user has authenticated successfully.  Interceptor can veto
            authentication by throwing an exception.
            </summary>
            <param name="member">resolved member</param>
            <param name="loginStatus">login status enum</param>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IAuthenticateMemberInterceptor.HandleAuthenticationException(Brierley.FrameWork.Data.DomainModel.Member,Brierley.FrameWork.Common.LoginStatusEnum,Brierley.FrameWork.Common.Exceptions.Authentication.AuthenticationException)">
            <summary>
            Called when an AuthenticationException has been caught during authentication process.  Interceptor
            can handle the error and return a boolean 'true' indicating that the member should be authenticated anyway 
            or 'false' to continue error processing or can throw a different exception type.
            
            By default, if the loginStatus indicates the member's password needs to be changed, the member will not
            authenticate.  This interceptor can override this behavior so that the member will authenticate in such case.
            </summary>
            <param name="member">resolved member (can be null)</param>
            <param name="loginStatus">login status enum</param>
            <param name="authenticationException">the AuthenticationException that was caught</param>
            <returns>boolean indicating whether the user should be authenticated anyway</returns>
        </member>
        <member name="T:Brierley.FrameWork.Interfaces.ILWInterceptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.ILWInterceptor.Initialize(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initialize with any parameters
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="T:Brierley.FrameWork.Interfaces.IEmailInterceptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IEmailInterceptor.GetSubject(Brierley.FrameWork.Data.DomainModel.AsyncJob)">
            <summary>
            This method is caleld to generate a subject line.  If it returns null and a subject line is specified
            in the xml configuration then that subject line is used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IEmailInterceptor.GetBody(Brierley.FrameWork.Data.DomainModel.AsyncJob)">
            <summary>
            This operation is used to override the default body of the email.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.Interfaces.MpaProperty">
            <summary>
            base class for both structure and attributes
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Interfaces.IMPAStepConfiguration.Name">
            <summary>
            Step's name
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Interfaces.IMPAStepConfiguration.DisplayText">
            <summary>
            Display Text
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Interfaces.IMPAStepConfiguration.IconPath">
            <summary>
            Name of the icon for step pallet
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Interfaces.IMPAStepConfiguration.Category">
            <summary>
            Step's category
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Interfaces.IMPAStepConfiguration.SupportedStepType">
            <summary>
            This determines what type of process does this adapter support.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IMPAStepConfiguration.GetToolTip">
            <summary>
            This method will be called by the loyalty navigator to display the tool tip for this adapter
            when the mouse is hovered over it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IMPAStepConfiguration.GetStepProperties">
            <summary>
            This method will be called by the loyalty navigator to get step's properties.  Step specific
            properties will then be displayed in a property grid so that the user can make the correct
            selection.  These properties might for example include the name of the campaign or
            email.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IMPAStepConfiguration.GetStepDataDefinition(System.Collections.Generic.List{Brierley.FrameWork.Interfaces.MpaProperty})">
            <summary>
            This method will be called by the loyalty navigator to populate the data sheet for the 
            step so that its data can be mapped to process's data for input and output during design time.
            The key in the emap is the name of the category and the value is the list of all properties
            in that category.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IMPAStepConfiguration.GetRunTimeInstance">
            <summary>
            Create a runtime instance for this step.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IRequestCreditInterceptor.AddClientSpecificSearchCriteria(Brierley.FrameWork.Data.LWCriterion,System.String)">
            <summary>
            Provides an opportunity for the client provider implementation to append additional criteria before searching. 
            </summary>
            <remarks>
            Default implementation is to exclude ProcessId 1 and 7. This method may be overridden to eliminate the default 
            filtering, or to add additional filtering, or both.
            </remarks>
            <example>
            //exclude ProcessId 1 and 7:
            criteria.Add(LWCriterion.OperatorType.AND, "ProcessId", 1, LWCriterion.Predicate.Ne);
            criteria.Add(LWCriterion.OperatorType.AND, "ProcessId", 7, LWCriterion.Predicate.Ne);
            </example>
            <param name="criteria"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Brierley.FrameWork.Interfaces.IRequestCreditInterceptor.ApplyFilterOnTransactionHeader(System.Collections.Generic.IList{Brierley.FrameWork.Data.IClientDataObject},Brierley.FrameWork.Common.TransactionType)" -->
        <member name="M:Brierley.FrameWork.Interfaces.IRequestCreditInterceptor.AddLoyaltyTransaction(Brierley.FrameWork.Data.DomainModel.Member,System.String,System.String)">
            <summary>
            This operation adds the the transaction identified by txn header from the history transaction detail table and
            properly adds the TxnHeader and TxnDetailItem attribute sets.
            </summary>
            <param name="member"></param>
            <param name="cardId"></param>
            <param name="txnHeaderId"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IRequestCreditInterceptor.SearchTransaction(Brierley.FrameWork.Common.TransactionType,System.Collections.Generic.Dictionary{System.String,System.String},System.String,Brierley.FrameWork.Data.LWQueryBatchInfo)">
            <summary>
            The operation searches for transactions based on the provided criteria.
            </summary>
            <param name="transactionType"></param>
            <param name="searchParms"></param>
            <param name="processIdSuppressionList"></param>
            <param name="batchInfo"></param>
            <returns></returns>
        </member>
        <member name="P:Brierley.FrameWork.Interfaces.XsltProcessorAttribute.Name">
            <summary>
            Processor's display name
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.Interfaces.XsltProcessorAttribute.Description">
            <summary>
            Description of the processor
            </summary>
        </member>
        <member name="T:Brierley.FrameWork.Interfaces.IXsltPostProcessor">
            <summary>
            Interface used for post-processing XSLT documents. Classes implementing this interface are able to make final 
            modifications to email documents before they are transferred to the email server.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IXsltPostProcessor.Process(System.String,System.Boolean)">
            <summary>
            Processes the XSLT body.
            </summary>
            <param name="xslt">the XSLT body</param>
            <returns>The modified XSLT body</returns>
        </member>
        <member name="T:Brierley.FrameWork.Interfaces.IInboundInterceptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundInterceptor.LoadMember(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,System.Xml.Linq.XElement)">
            <summary>
            DAP configuration allows loading a member through an interceptor instead of builtin load
            methods.
            </summary>
            <param name="config">This is the configuration for the data acquisition processor.</param>
            <param name="memberNode">This is the member node that may have the information needed to load a member.</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundInterceptor.HandleMemberNotFound(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,System.Xml.Linq.XElement)">
            <summary>
            This method is invoked after all attempts to load a member based on the specified load directives
            have failed and the HandleMemberNotFoundInInterceptor attribute on the member load directive.
            Typically, this is used to log non-member transactions in the TxnHistory attribute set.
            </summary>
            <param name="config"></param>
            <param name="memberNode"></param>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundInterceptor.ProcessRawXml(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="config"></param>
            <param name="repository"></param>
            <param name="memberNode"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundInterceptor.ProcessMemberBeforePopulation(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.DomainModel.Member,System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="config"></param>
            <param name="repository"></param>
            <param name="member"></param>
            <param name="memberNode"></param>
            <returns></returns>        
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundInterceptor.ProcessMemberBeforeSave(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.DomainModel.Member,System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="config"></param>
            <param name="repository"></param>
            <param name="member"></param>
            <param name="memberNode"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundInterceptor.ProcessMemberAfterSave(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.DomainModel.Member,System.Xml.Linq.XElement,System.Collections.Generic.IList{Brierley.FrameWork.ContextObject.RuleResult})">
            <summary>
            
            </summary>
            <param name="config"></param>
            <param name="repository"></param>
            <param name="member"></param>
            <param name="memberNode"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IInboundInterceptor.ValidateOperationParameter(System.String,System.String,System.String)">
            <summary>
            This operation is used by the Standard API to perform client specific validation of operation
            parameters.
            </summary>
            <param name="operationName"></param>
            <param name="source"></param>
            <param name="payload"></param>
        </member>
        <member name="T:Brierley.FrameWork.Interfaces.IMemberResponseHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IMemberResponseHelper.Initialize(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initialize with any parameters
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IMemberResponseHelper.ProcessMemberAfterAttributeSetLoad(System.String,Brierley.FrameWork.LWIntegration.LWIntegrationConfig.OperationResponseDirective,Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            This operation is invoked after attribuute sets are loaded into the member.
            </summary>
            <param name="directive"></param>
            <param name="member"></param>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IOrderFulfillmentProvider.Initialize(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initialize the provider with any parameters
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IOrderFulfillmentProvider.CreateProduct(Brierley.FrameWork.Data.DomainModel.Product)">
            <summary>
            This creates a product in the third part fulfillment system if real-time updates to the third party
            system are configured.
            </summary>
            <param name="p"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IOrderFulfillmentProvider.CreateProduct(Brierley.FrameWork.Data.DomainModel.ProductVariant)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IOrderFulfillmentProvider.CreateOrder(Brierley.FrameWork.Data.DomainModel.Member,System.String,System.String,System.String,Brierley.FrameWork.Data.DomainModel.Address,System.Collections.Generic.IList{Brierley.FrameWork.Interfaces.OrderItemInfo})">
            <summary>
            This method is invoked to cerate an order.
            </summary>
            <param name="member">Member for whom the order is being created</param>
            <param name="shippingAddress">Shipping address</param>
            <param name="partNumbers">An array of part numbers that need to be shipped</param>
            <param name="quantities">A corresponding array of quantities for the part numbers</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IOrderFulfillmentProvider.GetOrderStatus(System.String)">
            <summary>
            Returns the order status for the specified order number.
            </summary>
            <param name="orderNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IOrderFulfillmentProvider.GetOrderItemStatus(System.String)">
            <summary>
            Returns the order status items of the specified order number.
            </summary>
            <param name="orderNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IOrderFulfillmentProvider.UpdateOrder(Brierley.FrameWork.Data.DomainModel.Member,System.String,Brierley.FrameWork.Data.DomainModel.Address)">
            <summary>
            Updates the shipping address of the order
            </summary>
            <param name="orderNumber"></param>
            <param name="shippingAddress"></param>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IOrderFulfillmentProvider.CancelOrder(System.String)">
            <summary>
            Cancels an entire order.
            </summary>
            <param name="orderNumber"></param>
            <returns>Order cancellation number</returns>
        </member>
        <member name="M:Brierley.FrameWork.Interfaces.IOrderFulfillmentProvider.CancelOrder(System.String,System.String)">
            <summary>
            Cancels only the specified part number from the order.
            </summary>
            <param name="orderNumber"></param>
            <param name="partNumber"></param>
            <returns></returns>
        </member>
        <member name="T:Brierley.FrameWork.ContextObject">
            <summary>
            The Context object is used as a general container to pass data out of the framework to a rule object.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.ContextObject.Name">
            <summary>
            Name of the rule being executed.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.ContextObject.Mode">
            <summary>
            This is the mode of execution for the rule.  The default value is "Real".
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.ContextObject.Owner">
            <summary>
            The owner of the attribute set that is invoking the rule. Will either be an instance of <see cref="T:Brierley.FrameWork.Data.DomainModel.Member"/>
            or and instance of <see cref="T:Brierley.FrameWork.Data.DomainModel.VirtualCard"/>
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.ContextObject.InvokingRow">
            <summary>
            The <see cref="T:Brierley.FrameWork.Data.IClientDataObject"/> of data that has invoked the rule.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.ContextObject.Environment">
            <summary>
            This is a general purpose environment object that can be used for extensions.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.ContextObject.Template">
            <summary>
            This attribute can contain the document template that me be needed by some functions.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.ContextObject.StartIndex">
            <summary>
            Thsi is starting index for a looping function.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.ContextObject.EndIndex">
            <summary>
            This is the ending index for a looping function.
            </summary>
        </member>
        <member name="F:Brierley.FrameWork.ContextObject.CurrentIndex">
            <summary>
            This is the current index of a loop.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.ContextObject.PromotionContexts">
            <summary>
            Contains a list of promotion codes that have been determined to be valid under the current context.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.ContextObject.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.ContextObject.Location">
            <summary>
            List of store ids the member is known to be in.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.IPFiltering.INetUtil.GetStringIpAddress(System.Net.IPAddress)">
            <summary>
            This method converts an Ipv4 address to a string representation
            </summary>
            <param name="addr"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.IsMatch(System.Collections.Generic.IList{Brierley.FrameWork.LWIntegration.IPFiltering.IPRange},System.Net.IPAddress)">
            <summary>
            Determines whether the specified address is a match.
            </summary>
            <param name="ipRanges">The ip ranges.</param>
            <param name="address">The address.</param>
            <returns>
            	<c>true</c> if the specified ip ranges is match; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.IsMatch(System.Net.IPAddress)">
            <summary>
            Determines whether the specified address is a match.
            </summary>
            <param name="address">The address.</param>
            <returns>
            	<c>true</c> if the specified address is a match; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.IsMatch(System.UInt32)">
            <summary>
            Determines whether the specified address is a match.
            </summary>
            <param name="address">The address.</param>
            <returns>
            	<c>true</c> if the specified address is a match; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.GetAddressValues">
            <summary>
            Gets all the address values in the range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.GetAddresses">
            <summary>
            Gets all the ip addresses in the range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.Parse(System.String)">
            <summary>
            Parses a string in CIDR notation or a wildcard address like 192.168.1.*
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.Count">
            <summary>
            The number of addresses in the ip range.
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.AddressMask">
            <summary>
            The address mask
            </summary>
        </member>
        <member name="P:Brierley.FrameWork.LWIntegration.IPFiltering.IPRange.MaskData">
            <summary>
            The mask data.
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.RequestCreditHelper.AddClientSpecificSearchCriteria(Brierley.FrameWork.Data.LWCriterion,System.String)">
            <summary>
            Provides an opportunity for the client provider implementation to append additional criteria before searching. 
            </summary>
            <remarks>
            Default implementation is to exclude ProcessId 1 and 7. This method may be overridden to eliminate the default 
            filtering, or to add additional filtering, or both.
            </remarks>
            <example>
            //exclude ProcessId 1 and 7:
            criteria.Add(LWCriterion.OperatorType.AND, "ProcessId", 1, LWCriterion.Predicate.Ne);
            criteria.Add(LWCriterion.OperatorType.AND, "ProcessId", 7, LWCriterion.Predicate.Ne);
            </example>
            <param name="criteria"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Brierley.FrameWork.LWIntegration.RequestCreditHelper.ApplyFilterOnTransactionHeader(System.Collections.Generic.IList{Brierley.FrameWork.Data.IClientDataObject},Brierley.FrameWork.Common.TransactionType)" -->
        <member name="M:Brierley.FrameWork.LWIntegration.Util.LWIntegrationUtilities.GetStoreLocationsIds(System.Collections.Generic.IList{System.String})">
            <summary>
            Read the api aruguments and returns a list of store locations if it is found, it will also convert from store numbers to store ids
            </summary>
            <param name="storeLocationNode"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.LWIntegrationUtilities.SerializeMemberToXml(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,System.Xml.Linq.XElement,Brierley.FrameWork.Data.DomainModel.Member,System.String)">
            <summary>
            This method is used by the ourbound adapter to serialize members
            </summary>
            <param name="config"></param>
            <param name="rootNode"></param>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.LWIntegrationUtilities.GetGlobalAttributeSet(System.String,Brierley.FrameWork.Data.LWCriterion)">
            <summary>
            
            </summary>
            <param name="repository"></param>
            <param name="attSetName"></param>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.LWIntegrationUtilities.ProcessAttribute(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.IClientDataObject,System.String,Brierley.FrameWork.Common.DataType,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData,Brierley.FrameWork.Data.DomainModel.AttributeMetaData)">
            <summary>
            
            </summary>
            <param name="rowToModify"></param>
            <param name="attrNode"></param>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.LWIntegrationUtilities.ProcessAttributeFromXml(Brierley.FrameWork.LWIntegration.LWIntegrationConfig,Brierley.FrameWork.Data.IClientDataObject,System.Xml.Linq.XAttribute,System.String,System.Boolean,System.Boolean,System.Boolean,Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData,Brierley.FrameWork.Data.DomainModel.AttributeMetaData)">
            <summary>
            
            </summary>
            <param name="rowToModify"></param>
            <param name="attrNode"></param>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.LWIntegrationUtilities.GetMemberAttributeSetToModify(Brierley.FrameWork.LWIntegration.LWIntegrationConfig.AttributeSetDirective,Brierley.FrameWork.Data.IAttributeSetContainer,Brierley.FrameWork.Data.DomainModel.AttributeSetMetaData,System.Xml.Linq.XElement)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <param name="directive"></param>
            <param name="owner"></param>
            <param name="def"></param>
            <param name="containingRow"></param>
            <param name="aNode"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.MemberRewardsUtil.GetFulfillmentProviderMap(System.String)">
            <summary>
            This operation gets a map of all fulfillemnt providers for this order, indexed by the
            FP order number
            </summary>
            <param name="lwOrderNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.MemberRewardsUtil.GetOrderStatusMap(Brierley.FrameWork.Data.DomainModel.MemberOrder)">
            <summary>
            This method gets all status maps from all rewards for a given order.
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.MemberRewardsUtil.EnsureSufficientPoints(Brierley.FrameWork.Data.DomainModel.Member,System.Collections.Generic.IList{Brierley.FrameWork.Data.DomainModel.RewardOrderItem},System.Decimal)">
            <summary>
            This method is only usefule when there are multiple rewards in the order.
            </summary>
            <param name="member"></param>
            <param name="rewards"></param>
            <param name="totalPointsNeeded"></param>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.MemberRewardsUtil.GetMemberRewardsStatus(System.Collections.Generic.IList{Brierley.FrameWork.Data.DomainModel.MemberReward},System.Collections.Generic.Dictionary{System.Int64,Brierley.FrameWork.Data.DomainModel.MemberReward}@,System.Collections.Generic.Dictionary{System.String,Brierley.FrameWork.Data.DomainModel.MemberOrder}@)">
            <summary>
            This method retrieves the details for the given list of member rewards
            </summary>
            <param name="rewardsList"></param>
            <param name="rewardMap"></param>
            <param name="orderMap"></param>
            <param name="batchInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.MemberRewardsUtil.GetMemberRewards(System.String,Brierley.FrameWork.Data.DomainModel.MemberOrder@,System.Collections.Generic.Dictionary{System.Int64,Brierley.FrameWork.Data.DomainModel.MemberReward}@)">
            <summary>
            Get the member rewards by order number
            </summary>
            <param name="orderNumber"></param>
            <param name="order"></param>
            <param name="rewardMap"></param>
            <returns></returns>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.MemberRewardsUtil.CancelOrReturnMemberOrder(Brierley.FrameWork.Data.DomainModel.MemberOrder,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="order"></param>
            <param name="cancellation"></param>
            <param name="notes"></param>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.MemberRewardsUtil.CancelOrReturnMemberReward(Brierley.FrameWork.Data.DomainModel.MemberReward,System.Boolean,System.String)">
            <summary>
            This method cancels a single reward.
            </summary>
            <param name="reward"></param>
            <param name="cancellation"></param>
            <param name="notes"></param>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.RfeUtil.ProcessBonusAction(System.Int64,System.Nullable{Brierley.FrameWork.Common.MemberBonusStatus},System.String,System.String,System.String,Brierley.FrameWork.Data.DomainModel.RuleTrigger,System.Boolean)">
            <summary>
            
            </summary>
            <param name="bonusId"></param>
        </member>
        <member name="M:Brierley.FrameWork.LWIntegration.Util.TriggerUserEventUtil.DeserializeResult(System.String,System.Int64[]@,System.Int64[]@,System.Int64[]@,System.Int64[]@)">
            <summary>
            This method deserializes the result contents of a trigger user event.
            </summary>
            <param name="xmlMessage"></param>
        </member>
        <member name="M:Brierley.FrameWork.Push.PushService.SendAsync(System.Int64,Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            Sends a notification with PushSharp via APNS or GCM.
            </summary>
            <param name="notificationId">The Id of the notification definition.</param>
            <param name="member">The member recieving the notification.</param>
        </member>
        <member name="T:Brierley.FrameWork.IntelligentSearch.LWCAAddress">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.city">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.country">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.county">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.dpv">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.errorCode">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.latitude">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.latitudeSpecified">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.lineOne">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.longitude">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.longitudeSpecified">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.returnCode">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.returnCodeSpecified">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.stateOrProvince">
            <remarks/>
        </member>
        <member name="P:Brierley.FrameWork.IntelligentSearch.LWCAAddress.zipOrPostalCode">
            <remarks/>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Brierley.FrameWork.Sms.TriggeredSms" -->
        <member name="M:Brierley.FrameWork.Sms.TriggeredSms.#ctor(Brierley.FrameWork.Common.Config.LWConfiguration,System.String)">
            <summary>
            Constructs a TriggeredEmail
            </summary>
            <param name="config">LWConfiguration used to connect to framework database</param>
            <param name="server">wrapper for SMS API</param>
            <param name="smsName">name of the triggered sms message</param>
        </member>
        <member name="M:Brierley.FrameWork.Sms.TriggeredSms.#ctor(Brierley.FrameWork.Common.Config.LWConfiguration,System.Int64)">
            <summary>
            Constructs a TriggeredSms
            </summary>
            <param name="config">LWConfiguration used to connect to framework database</param>
            <param name="server">wrapper for SMS API</param>
            <param name="smsId">ID of the triggered sms message</param>
        </member>
        <member name="M:Brierley.FrameWork.Sms.TriggeredSms.SendAsync(Brierley.FrameWork.Data.DomainModel.Member)">
            <summary>
            Sends a triggered sms message to a loyalty member.
            </summary>
            <param name="member">The loyalty member the sms message will be sent to.</param>
        </member>
        <member name="M:Brierley.FrameWork.Sms.TriggeredSms.SendAsync(Brierley.FrameWork.Data.DomainModel.Member,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a triggered sms message to a loyalty member.
            </summary>
            <param name="member">The loyalty member the sms message will be sent to.</param>
            <param name="additionalFields">Name/value pair of fields, which can be used to override the value of any field in the sms message.</param>
        </member>
        <member name="M:Brierley.FrameWork.Sms.TriggeredSms.SendAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sends a triggered sms message.
            </summary>
            <remarks>
            This method can be used to send an sms message in the event that the sms message should not go to a loyalty 
            member (e.g., an alert which needs to be send to a customer service rep or administrator).
            </remarks>
            <param name="recipientPhone">The recipient's selecte mobile phone, if different from MemberDetails.MobilePhone.</param>
            <param name="manualFields">Name/value pair of fields.</param>
        </member>
        <member name="M:Brierley.FrameWork.Sms.TriggeredSms.LoadConfig">
            <summary>
            Helper method for constructors.  Loads framework config values for SMS's API (username, password, url).
            </summary>
        </member>
        <member name="M:Brierley.FrameWork.Sms.TriggeredSms.LoadSmsMessage">
            <summary>
            Helper method for constructors.  Loads the sms message from the framework database and puts it into a listening state in DMC.
            </summary>
            <returns>True if the sms message is successfully loaded, else false</returns>
        </member>
        <member name="T:PetaPoco.Mappers">
            <summary>
            This static manages registation of IMapper instances with PetaPoco
            </summary>
        </member>
        <member name="M:PetaPoco.Mappers.RevokeAssembly(System.Reflection.Assembly)">
            <summary>
            revokes an assembly by its full name
            </summary>
            <remarks>
            Loaded data model assemblies do not always match on reference. This method revokes mappers based on the full name, 
            rather than relying on the reference to the assembly.
            </remarks>
            <param name="a"></param>
        </member>
        <member name="M:PetaPoco.Mappers.Register(System.Reflection.Assembly,PetaPoco.IMapper)">
            <summary>
            Registers a mapper for all types in a specific assembly
            </summary>
            <param name="assembly">The assembly whose types are to be managed by this mapper</param>
            <param name="mapper">The IMapper implementation</param>
        </member>
        <member name="M:PetaPoco.Mappers.Register(System.Type,PetaPoco.IMapper)">
            <summary>
            Registers a mapper for a single POCO type
            </summary>
            <param name="type">The type to be managed by this mapper</param>
            <param name="mapper">The IMapper implementation</param>
        </member>
        <member name="M:PetaPoco.Mappers.Revoke(System.Reflection.Assembly)">
            <summary>
            Remove all mappers for all types in a specific assembly
            </summary>
            <param name="assembly">The assembly whose mappers are to be revoked</param>
        </member>
        <member name="M:PetaPoco.Mappers.Revoke(System.Type)">
            <summary>
            Remove the mapper for a specific type
            </summary>
            <param name="type">The type whose mapper is to be removed</param>
        </member>
        <member name="M:PetaPoco.Mappers.Revoke(PetaPoco.IMapper)">
            <summary>
            Revoke an instance of a mapper
            </summary>
            <param name="mapper">The IMapper to be revkoed</param>
        </member>
        <member name="M:PetaPoco.Mappers.GetMapper(System.Type)">
            <summary>
            Retrieve the IMapper implementation to be used for a specified POCO type
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="T:PetaPoco.Database">
            <summary>
            The main PetaPoco Database class.  You can either use this class directly, or derive from it.
            </summary>
        </member>
        <member name="M:PetaPoco.Database.#ctor(System.Data.IDbConnection)">
            <summary>
            Construct a database using a supplied IDbConnection
            </summary>
            <param name="connection">The IDbConnection to use</param>
            <remarks>
            The supplied IDbConnection will not be closed/disposed by PetaPoco - that remains
            the responsibility of the caller.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.#ctor(System.String,System.String)">
            <summary>
            Construct a database using a supplied connections string and optionally a provider name
            </summary>
            <param name="connectionString">The DB connection string</param>
            <param name="providerName">The name of the DB provider to use</param>
            <remarks>
            PetaPoco will automatically close and dispose any connections it creates.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            Construct a Database using a supplied connection string and a DbProviderFactory
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="provider">The DbProviderFactory to use for instantiating IDbConnection's</param>
        </member>
        <member name="M:PetaPoco.Database.#ctor(System.String)">
            <summary>
            Construct a Database using a supplied connectionString Name.  The actual connection string and provider will be 
            read from app/web.config.
            </summary>
            <param name="connectionStringName">The name of the connection</param>
        </member>
        <member name="M:PetaPoco.Database.CommonConstruct">
            <summary>
            Provides common initialization for the various constructors
            </summary>
        </member>
        <member name="M:PetaPoco.Database.Dispose">
            <summary>
            Automatically close one open shared connection 
            </summary>
        </member>
        <member name="P:PetaPoco.Database.KeepConnectionAlive">
            <summary>
            When set to true the first opened connection is kept alive until this object is disposed
            </summary>
        </member>
        <member name="M:PetaPoco.Database.OpenSharedConnection">
            <summary>
            Open a connection that will be used for all subsequent queries.
            </summary>
            <remarks>
            Calls to Open/CloseSharedConnection are reference counted and should be balanced
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.CloseSharedConnection">
            <summary>
            Releases the shared connection
            </summary>
        </member>
        <member name="P:PetaPoco.Database.Connection">
            <summary>
            Provides access to the currently open shared connection (or null if none)
            </summary>
        </member>
        <member name="M:PetaPoco.Database.GetTransaction">
            <summary>
            Starts or continues a transaction.
            </summary>
            <returns>An ITransaction reference that must be Completed or disposed</returns>
            <remarks>
            This method makes management of calls to Begin/End/CompleteTransaction easier.  
            
            The usage pattern for this should be:
            
            using (var tx = db.GetTransaction())
            {
            	// Do stuff
            	db.Update(...);
            	
                // Mark the transaction as complete
                tx.Complete();
            }
            
            Transactions can be nested but they must all be completed otherwise the entire
            transaction is aborted.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.OnBeginTransaction">
            <summary>
            Called when a transaction starts.  Overridden by the T4 template generated database
            classes to ensure the same DB instance is used throughout the transaction.
            </summary>
        </member>
        <member name="M:PetaPoco.Database.OnEndTransaction">
            <summary>
            Called when a transaction ends.
            </summary>
        </member>
        <member name="M:PetaPoco.Database.BeginTransaction">
            <summary>
            Starts a transaction scope, see GetTransaction() for recommended usage
            </summary>
        </member>
        <member name="M:PetaPoco.Database.CleanupTransaction">
            <summary>
            Internal helper to cleanup transaction
            </summary>
        </member>
        <member name="M:PetaPoco.Database.AbortTransaction">
            <summary>
            Aborts the entire outer most transaction scope 
            </summary>
            <remarks>
            Called automatically by Transaction.Dispose()
            if the transaction wasn't completed.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.CompleteTransaction">
            <summary>
            Marks the current transaction scope as complete.
            </summary>
        </member>
        <member name="M:PetaPoco.Database.AddParam(System.Data.IDbCommand,System.Object,System.Reflection.PropertyInfo)">
            <summary>
            Add a parameter to a DB command
            </summary>
            <param name="cmd">A reference to the IDbCommand to which the parameter is to be added</param>
            <param name="value">The value to assign to the parameter</param>
            <param name="pi">Optional, a reference to the property info of the POCO property from which the value is coming.</param>
        </member>
        <member name="M:PetaPoco.Database.OnException(System.Exception)">
            <summary>
            Called if an exception occurs during processing of a DB operation.  Override to provide custom logging/handling.
            </summary>
            <param name="x">The exception instance</param>
            <returns>True to re-throw the exception, false to suppress it</returns>
        </member>
        <member name="M:PetaPoco.Database.OnConnectionOpened(System.Data.IDbConnection)">
            <summary>
            Called when DB connection opened
            </summary>
            <param name="conn">The newly opened IDbConnection</param>
            <returns>The same or a replacement IDbConnection</returns>
            <remarks>
            Override this method to provide custom logging of opening connection, or
            to provide a proxy IDbConnection.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.OnConnectionClosing(System.Data.IDbConnection)">
            <summary>
            Called when DB connection closed
            </summary>
            <param name="conn">The soon to be closed IDBConnection</param>
        </member>
        <member name="M:PetaPoco.Database.OnExecutingCommand(System.Data.IDbCommand)">
            <summary>
            Called just before an DB command is executed
            </summary>
            <param name="cmd">The command to be executed</param>
            <remarks>
            Override this method to provide custom logging of commands and/or
            modification of the IDbCommand before it's executed
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.OnExecutedCommand(System.Data.IDbCommand)">
            <summary>
            Called on completion of command execution
            </summary>
            <param name="cmd">The IDbCommand that finished executing</param>
        </member>
        <member name="M:PetaPoco.Database.Execute(System.String,System.Object[])">
            <summary>
            Executes a non-query command
            </summary>
            <param name="sql">The SQL statement to execute</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.Database.Execute(PetaPoco.Sql)">
            <summary>
            Executes a non-query command
            </summary>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.Database.ExecuteScalar``1(System.String,System.Object[])">
            <summary>
            Executes a query and return the first column of the first row in the result set.
            </summary>
            <typeparam name="T">The type that the result value should be cast to</typeparam>
            <param name="sql">The SQL query to execute</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The scalar value cast to T</returns>
        </member>
        <member name="M:PetaPoco.Database.ExecuteScalar``1(PetaPoco.Sql)">
            <summary>
            Executes a query and return the first column of the first row in the result set.
            </summary>
            <typeparam name="T">The type that the result value should be cast to</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The scalar value cast to T</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``1(System.String,System.Object[])">
            <summary>
            Runs a query and returns the result set as a typed list
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query to execute</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A List holding the results of the query</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``1(PetaPoco.Sql)">
            <summary>
            Runs a query and returns the result set as a typed list
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A List holding the results of the query</returns>
        </member>
        <member name="M:PetaPoco.Database.BuildPageQueries``1(System.Int64,System.Int64,System.String,System.Object[]@,System.String@,System.String@)">
            <summary>
            Starting with a regular SELECT statement, derives the SQL statements required to query a 
            DB for a page of records and the total number of records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="skip">The number of rows to skip before the start of the page</param>
            <param name="take">The number of rows in the page</param>
            <param name="sql">The original SQL select statement</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <param name="sqlCount">Outputs the SQL statement to query for the total number of matching rows</param>
            <param name="sqlPage">Outputs the SQL statement to retrieve a single page of matching rows</param>
        </member>
        <member name="M:PetaPoco.Database.Page``1(System.Int64,System.Int64,System.String,System.Object[],System.String,System.Object[])">
            <summary>
            Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sqlCount">The SQL to retrieve the total number of records</param>
            <param name="countArgs">Arguments to any embedded parameters in the sqlCount statement</param>
            <param name="sqlPage">The SQL To retrieve a single page of results</param>
            <param name="pageArgs">Arguments to any embedded parameters in the sqlPage statement</param>
            <returns>A Page of results</returns>
            <remarks>
            This method allows separate SQL statements to be explicitly provided for the two parts of the page query.
            The page and itemsPerPage parameters are not used directly and are used simply to populate the returned Page object.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Page``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
            Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">The base SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>A Page of results</returns>
            <remarks>
            PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified page.  It will also execute a second query to retrieve the
            total number of records in the result set.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Page``1(System.Int64,System.Int64,PetaPoco.Sql)">
            <summary>
            Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>A Page of results</returns>
            <remarks>
            PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified page.  It will also execute a second query to retrieve the
            total number of records in the result set.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Page``1(System.Int64,System.Int64,PetaPoco.Sql,PetaPoco.Sql)">
            <summary>
            Retrieves a page of records	and the total number of available records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sqlCount">An SQL builder object representing the SQL to retrieve the total number of records</param>
            <param name="sqlPage">An SQL builder object representing the SQL to retrieve a single page of results</param>
            <returns>A Page of results</returns>
            <remarks>
            This method allows separate SQL statements to be explicitly provided for the two parts of the page query.
            The page and itemsPerPage parameters are not used directly and are used simply to populate the returned Page object.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Fetch``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
            Retrieves a page of records (without the total count)
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">The base SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>A List of results</returns>
            <remarks>
            PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified page.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Fetch``1(System.Int64,System.Int64,PetaPoco.Sql)">
            <summary>
            Retrieves a page of records (without the total count)
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="page">The 1 based page number to retrieve</param>
            <param name="itemsPerPage">The number of records per page</param>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>A List of results</returns>
            <remarks>
            PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified page.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.SkipTake``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
            Retrieves a range of records from result set
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="skip">The number of rows at the start of the result set to skip over</param>
            <param name="take">The number of rows to retrieve</param>
            <param name="sql">The base SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>A List of results</returns>
            <remarks>
            PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified range.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.SkipTake``1(System.Int64,System.Int64,PetaPoco.Sql)">
            <summary>
            Retrieves a range of records from result set
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="skip">The number of rows at the start of the result set to skip over</param>
            <param name="take">The number of rows to retrieve</param>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>A List of results</returns>
            <remarks>
            PetaPoco will automatically modify the supplied SELECT statement to only retrieve the
            records for the specified range.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Query``1(System.String,System.Object[])">
            <summary>
            Runs an SQL query, returning the results as an IEnumerable collection
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>An enumerable collection of result records</returns>
            <remarks>
            For some DB providers, care should be taken to not start a new Query before finishing with
            and disposing the previous one. In cases where this is an issue, consider using Fetch which
            returns the results as a List rather than an IEnumerable.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Query``1(PetaPoco.Sql)">
            <summary>
            Runs an SQL query, returning the results as an IEnumerable collection
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the base SQL query and it's arguments</param>
            <returns>An enumerable collection of result records</returns>
            <remarks>
            For some DB providers, care should be taken to not start a new Query before finishing with
            and disposing the previous one. In cases where this is an issue, consider using Fetch which
            returns the results as a List rather than an IEnumerable.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Exists``1(System.String,System.Object[])">
            <summary>
            Checks for the existance of a row matching the specified condition
            </summary>
            <typeparam name="T">The Type representing the table being queried</typeparam>
            <param name="sqlCondition">The SQL expression to be tested for (ie: the WHERE expression)</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>True if a record matching the condition is found.</returns>
        </member>
        <member name="M:PetaPoco.Database.Exists``1(System.Object)">
            <summary>
            Checks for the existance of a row with the specified primary key value.
            </summary>
            <typeparam name="T">The Type representing the table being queried</typeparam>
            <param name="primaryKey">The primary key value to look for</param>
            <returns>True if a record with the specified primary key value exists.</returns>
        </member>
        <member name="M:PetaPoco.Database.Single``1(System.Object)">
            <summary>
            Returns the record with the specified primary key value
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="primaryKey">The primary key value of the record to fetch</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
            Throws an exception if there are zero or more than one record with the specified primary key value.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.SingleOrDefault``1(System.Object)">
            <summary>
            Returns the record with the specified primary key value, or the default value if not found
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="primaryKey">The primary key value of the record to fetch</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
            If there are no records with the specified primary key value, default(T) (typically null) is returned.
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.Single``1(System.String,System.Object[])">
            <summary>
            Runs a query that should always return a single row.
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
            Throws an exception if there are zero or more than one matching record
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.SingleOrDefault``1(System.String,System.Object[])">
            <summary>
            Runs a query that should always return either a single row, or no rows
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The single record matching the specified primary key value, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.Database.First``1(System.String,System.Object[])">
            <summary>
            Runs a query that should always return at least one return
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The first record in the result set</returns>
        </member>
        <member name="M:PetaPoco.Database.FirstOrDefault``1(System.String,System.Object[])">
            <summary>
            Runs a query and returns the first record, or the default value if no matching records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">The SQL query</param>
            <param name="args">Arguments to any embedded parameters in the SQL statement</param>
            <returns>The first record in the result set, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Single``1(PetaPoco.Sql)">
            <summary>
            Runs a query that should always return a single row.
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The single record matching the specified primary key value</returns>
            <remarks>
            Throws an exception if there are zero or more than one matching record
            </remarks>
        </member>
        <member name="M:PetaPoco.Database.SingleOrDefault``1(PetaPoco.Sql)">
            <summary>
            Runs a query that should always return either a single row, or no rows
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The single record matching the specified primary key value, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.Database.First``1(PetaPoco.Sql)">
            <summary>
            Runs a query that should always return at least one return
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The first record in the result set</returns>
        </member>
        <member name="M:PetaPoco.Database.FirstOrDefault``1(PetaPoco.Sql)">
            <summary>
            Runs a query and returns the first record, or the default value if no matching records
            </summary>
            <typeparam name="T">The Type representing a row in the result set</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>The first record in the result set, or default(T) if no matching rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Insert(System.String,System.String,System.Object)">
            <summary>
            Performs an SQL Insert
            </summary>
            <param name="tableName">The name of the table to insert into</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be inserted</param>
            <returns>The auto allocated primary key of the new record</returns>
        </member>
        <member name="M:PetaPoco.Database.Insert(System.String,System.String,System.Boolean,System.Object)">
            <summary>
            Performs an SQL Insert
            </summary>
            <param name="tableName">The name of the table to insert into</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="autoIncrement">True if the primary key is automatically allocated by the DB</param>
            <param name="poco">The POCO object that specifies the column values to be inserted</param>
            <returns>The auto allocated primary key of the new record, or null for non-auto-increment tables</returns>
            <remarks>Inserts a poco into a table.  If the poco has a property with the same name 
            as the primary key the id of the new record is assigned to it.  Either way,
            the new id is returned.</remarks>
        </member>
        <member name="M:PetaPoco.Database.Insert(System.Object)">
            <summary>
            Performs an SQL Insert
            </summary>
            <param name="poco">The POCO object that specifies the column values to be inserted</param>
            <returns>The auto allocated primary key of the new record, or null for non-auto-increment tables</returns>
            <remarks>The name of the table, it's primary key and whether it's an auto-allocated primary key are retrieved
            from the POCO's attributes</remarks>
        </member>
        <member name="M:PetaPoco.Database.Update(System.String,System.String,System.Object,System.Object)">
            <summary>
            Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <returns>The number of affected records</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.String,System.String,System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.String,System.String,System.Object)">
            <summary>
            Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.String,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Performs an SQL update
            </summary>
            <param name="tableName">The name of the table to update</param>
            <param name="primaryKeyName">The name of the primary key column of the table</param>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.Object)">
            <summary>
            Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.Object,System.Object)">
            <summary>
            Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update(System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Performs an SQL update
            </summary>
            <param name="poco">The POCO object that specifies the column values to be updated</param>
            <param name="primaryKeyValue">The primary key of the record to be updated</param>
            <param name="columns">The column names of the columns to be updated, or null for all</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update``1(System.String,System.Object[])">
            <summary>
            Performs an SQL update
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to update</typeparam>
            <param name="sql">The SQL update and condition clause (ie: everything after "UPDATE tablename"</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Update``1(PetaPoco.Sql)">
            <summary>
            Performs an SQL update
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to update</typeparam>
            <param name="sql">An SQL builder object representing the SQL update and condition clause (ie: everything after "UPDATE tablename"</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Delete(System.String,System.String,System.Object)">
            <summary>
            Performs and SQL Delete
            </summary>
            <param name="tableName">The name of the table to delete from</param>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">The POCO object whose primary key value will be used to delete the row</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.Database.Delete(System.String,System.String,System.Object,System.Object)">
            <summary>
            Performs and SQL Delete
            </summary>
            <param name="tableName">The name of the table to delete from</param>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">The POCO object whose primary key value will be used to delete the row (or null to use the supplied primary key value)</param>
            <param name="primaryKeyValue">The value of the primary key identifing the record to be deleted (or null, or get this value from the POCO instance)</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.Database.Delete(System.Object)">
            <summary>
            Performs an SQL Delete
            </summary>
            <param name="poco">The POCO object specifying the table name and primary key value of the row to be deleted</param>
            <returns>The number of rows affected</returns>
        </member>
        <member name="M:PetaPoco.Database.Delete``1(System.Object)">
            <summary>
            Performs an SQL Delete
            </summary>
            <typeparam name="T">The POCO class whose attributes identify the table and primary key to be used in the delete</typeparam>
            <param name="pocoOrPrimaryKey">The value of the primary key of the row to delete</param>
            <returns></returns>
        </member>
        <member name="M:PetaPoco.Database.Delete``1(System.String,System.Object[])">
            <summary>
            Performs an SQL Delete
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to delete from</typeparam>
            <param name="sql">The SQL condition clause identifying the row to delete (ie: everything after "DELETE FROM tablename"</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.Delete``1(PetaPoco.Sql)">
            <summary>
            Performs an SQL Delete
            </summary>
            <typeparam name="T">The POCO class who's attributes specify the name of the table to delete from</typeparam>
            <param name="sql">An SQL builder object representing the SQL condition clause identifying the row to delete (ie: everything after "UPDATE tablename"</param>
            <returns>The number of affected rows</returns>
        </member>
        <member name="M:PetaPoco.Database.IsNew(System.String,System.Object)">
            <summary>
            Check if a poco represents a new row
            </summary>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">The object instance whose "newness" is to be tested</param>
            <returns>True if the POCO represents a record already in the database</returns>
            <remarks>This method simply tests if the POCO's primary key column property has been set to something non-zero.</remarks>
        </member>
        <member name="M:PetaPoco.Database.IsNew(System.Object)">
            <summary>
            Check if a poco represents a new row
            </summary>
            <param name="poco">The object instance whose "newness" is to be tested</param>
            <returns>True if the POCO represents a record already in the database</returns>
            <remarks>This method simply tests if the POCO's primary key column property has been set to something non-zero.</remarks>
        </member>
        <member name="M:PetaPoco.Database.Save(System.String,System.String,System.Object)">
            <summary>
            Saves a POCO by either performing either an SQL Insert or SQL Update
            </summary>
            <param name="tableName">The name of the table to be updated</param>
            <param name="primaryKeyName">The name of the primary key column</param>
            <param name="poco">The POCO object to be saved</param>
        </member>
        <member name="M:PetaPoco.Database.Save(System.Object)">
            <summary>
            Saves a POCO by either performing either an SQL Insert or SQL Update
            </summary>
            <param name="poco">The POCO object to be saved</param>
        </member>
        <member name="M:PetaPoco.Database.Fetch``3(System.Func{``0,``1,``2},System.String,System.Object[])">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``4(System.Func{``0,``1,``2,``3},System.String,System.Object[])">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``5(System.Func{``0,``1,``2,``3,``4},System.String,System.Object[])">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``3(System.Func{``0,``1,``2},System.String,System.Object[])">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``4(System.Func{``0,``1,``2,``3},System.String,System.Object[])">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``5(System.Func{``0,``1,``2,``3,``4},System.String,System.Object[])">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``3(System.Func{``0,``1,``2},PetaPoco.Sql)">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``4(System.Func{``0,``1,``2,``3},PetaPoco.Sql)">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``5(System.Func{``0,``1,``2,``3,``4},PetaPoco.Sql)">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The returned list POCO type</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``3(System.Func{``0,``1,``2},PetaPoco.Sql)">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``4(System.Func{``0,``1,``2,``3},PetaPoco.Sql)">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``5(System.Func{``0,``1,``2,``3,``4},PetaPoco.Sql)">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``2(System.String,System.Object[])">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``3(System.String,System.Object[])">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``4(System.String,System.Object[])">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``2(System.String,System.Object[])">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``3(System.String,System.Object[])">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``4(System.String,System.Object[])">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``2(PetaPoco.Sql)">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``3(PetaPoco.Sql)">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Fetch``4(PetaPoco.Sql)">
            <summary>
            Perform a multi-poco fetch
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as a List</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``2(PetaPoco.Sql)">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``3(PetaPoco.Sql)">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``4(PetaPoco.Sql)">
            <summary>
            Perform a multi-poco query
            </summary>
            <typeparam name="T1">The first POCO type</typeparam>
            <typeparam name="T2">The second POCO type</typeparam>
            <typeparam name="T3">The third POCO type</typeparam>
            <typeparam name="T4">The fourth POCO type</typeparam>
            <param name="sql">An SQL builder object representing the query and it's arguments</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="M:PetaPoco.Database.Query``1(System.Type[],System.Object,System.String,System.Object[])">
            <summary>
            Performs a multi-poco query
            </summary>
            <typeparam name="TRet">The type of objects in the returned IEnumerable</typeparam>
            <param name="types">An array of Types representing the POCO types of the returned result set.</param>
            <param name="cb">A callback function to connect the POCO instances, or null to automatically guess the relationships</param>
            <param name="sql">The SQL query to be executed</param>
            <param name="args">Arguments to any embedded parameters in the SQL</param>
            <returns>A collection of POCO's as an IEnumerable</returns>
        </member>
        <member name="P:PetaPoco.Database.LastSQL">
            <summary>
            Retrieves the SQL of the last executed statement
            </summary>
        </member>
        <member name="P:PetaPoco.Database.LastArgs">
            <summary>
            Retrieves the arguments to the last execute statement
            </summary>
        </member>
        <member name="P:PetaPoco.Database.LastCommand">
            <summary>
            Returns a formatted string describing the last executed SQL statement and it's argument values
            </summary>
        </member>
        <member name="M:PetaPoco.Database.FormatCommand(System.Data.IDbCommand)">
            <summary>
            Formats the contents of a DB command for display
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:PetaPoco.Database.FormatCommand(System.String,System.Object[])">
            <summary>
            Formats an SQL query and it's arguments for display
            </summary>
            <param name="sql"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="P:PetaPoco.Database.EnableAutoSelect">
            <summary>
            When set to true, PetaPoco will automatically create the "SELECT columns" part of any query that looks like it needs it
            </summary>
        </member>
        <member name="P:PetaPoco.Database.EnableNamedParams">
            <summary>
            When set to true, parameters can be named ?myparam and populated from properties of the passed in argument values.
            </summary>
        </member>
        <member name="P:PetaPoco.Database.CommandTimeout">
            <summary>
            Sets the timeout value for all SQL statements.
            </summary>
        </member>
        <member name="P:PetaPoco.Database.OneTimeCommandTimeout">
            <summary>
            Sets the timeout value for the next (and only next) SQL statement
            </summary>
        </member>
        <member name="T:PetaPoco.ColumnAttribute">
            <summary>
            For explicit poco properties, marks the property as a column and optionally 
            supplies the DB column name.
            </summary>
        </member>
        <member name="T:PetaPoco.ExplicitColumnsAttribute">
            <summary>
            Poco classes marked with the Explicit attribute require all column properties to 
            be marked with the Column attribute
            </summary>
        </member>
        <member name="T:PetaPoco.IgnoreAttribute">
            <summary>
            Use the Ignore attribute on POCO class properties that shouldn't be mapped
            by PetaPoco.
            </summary>
        </member>
        <member name="T:PetaPoco.PrimaryKeyAttribute">
            <summary>
            Specifies the primary key column of a poco class, whether the column is auto incrementing
            and the sequence name for Oracle sequence columns.
            </summary>
        </member>
        <member name="T:PetaPoco.ResultColumnAttribute">
            <summary>
            Marks a poco property as a result only column that is populated in queries
            but not used for updates or inserts.
            </summary>
        </member>
        <member name="T:PetaPoco.TableNameAttribute">
            <summary>
            Sets the DB table name to be used for a Poco class.
            </summary>
        </member>
        <member name="T:PetaPoco.AnsiString">
            <summary>
            Wrap strings in an instance of this class to force use of DBType.AnsiString
            </summary>
        </member>
        <member name="M:PetaPoco.AnsiString.#ctor(System.String)">
            <summary>
            Constructs an AnsiString
            </summary>
            <param name="str">The C# string to be converted to ANSI before being passed to the DB</param>
        </member>
        <member name="P:PetaPoco.AnsiString.Value">
            <summary>
            The string value
            </summary>
        </member>
        <member name="T:PetaPoco.ColumnInfo">
            <summary>
            Hold information about a column in the database.
            </summary>
            <remarks>
            Typically ColumnInfo is automatically populated from the attributes on a POCO object and it's properties. It can
            however also be returned from the IMapper interface to provide your owning bindings between the DB and your POCOs.
            </remarks>
        </member>
        <member name="P:PetaPoco.ColumnInfo.ColumnName">
            <summary>
            The SQL name of the column
            </summary>
        </member>
        <member name="P:PetaPoco.ColumnInfo.ResultColumn">
            <summary>
            True if this column returns a calculated value from the database and shouldn't be used in Insert and Update operations.
            </summary>
        </member>
        <member name="P:PetaPoco.ColumnInfo.ForceToUtc">
            <summary>
            True if time and date values returned through this column should be forced to UTC DateTimeKind. (no conversion is applied - the Kind of the DateTime property
            is simply set to DateTimeKind.Utc instead of DateTimeKind.Unknown.
            </summary>
        </member>
        <member name="M:PetaPoco.ColumnInfo.FromProperty(System.Reflection.PropertyInfo)">
            <summary>
            Creates and populates a ColumnInfo from the attributes of a POCO property.
            </summary>
            <param name="pi">The property whose column info is required</param>
            <returns>A ColumnInfo instance</returns>
        </member>
        <member name="T:PetaPoco.IMapper">
            <summary>
            IMapper provides a way to hook into PetaPoco's Database to POCO mapping mechanism to either
            customize or completely replace it.
            </summary>
            <remarks>
            To use this functionality, instantiate a class that implements IMapper and then pass it to
            PetaPoco through the static method Mappers.Register()
            </remarks>
        </member>
        <member name="M:PetaPoco.IMapper.GetTableInfo(System.Type)">
            <summary>
            Get information about the table associated with a POCO class
            </summary>
            <param name="pocoType"></param>
            <returns>A TableInfo instance</returns>
            <remarks>
            This method must return a valid TableInfo.  
            To create a TableInfo from a POCO's attributes, use TableInfo.FromPoco
            </remarks>
        </member>
        <member name="M:PetaPoco.IMapper.GetColumnInfo(System.Reflection.PropertyInfo)">
            <summary>
            Get information about the column associated with a property of a POCO
            </summary>
            <param name="pocoProperty">The PropertyInfo of the property being queried</param>
            <returns>A reference to a ColumnInfo instance, or null to ignore this property</returns>
            <remarks>
            To create a ColumnInfo from a property's attributes, use PropertyInfo.FromProperty
            </remarks>
        </member>
        <member name="M:PetaPoco.IMapper.GetFromDbConverter(System.Reflection.PropertyInfo,System.Type)">
            <summary>
            Supply a function to convert a database value to the correct property value
            </summary>
            <param name="TargetProperty">The target property</param>
            <param name="SourceType">The type of data returned by the DB</param>
            <returns>A Func that can do the conversion, or null for no conversion</returns>
        </member>
        <member name="M:PetaPoco.IMapper.GetToDbConverter(System.Reflection.PropertyInfo)">
            <summary>
            Supply a function to convert a property value into a database value
            </summary>
            <param name="SourceProperty">The property to be converted</param>
            <returns>A Func that can do the conversion</returns>
            <remarks>
            This conversion is only used for converting values from POCO's that are 
            being Inserted or Updated.  
            Conversion is not available for parameter values passed directly to queries.
            </remarks>
        </member>
        <member name="T:PetaPoco.Page`1">
            <summary>
            Holds the results of a paged request.
            </summary>
            <typeparam name="T">The type of Poco in the returned result set</typeparam>
        </member>
        <member name="P:PetaPoco.Page`1.CurrentPage">
            <summary>
            The current page number contained in this page of result set 
            </summary>
        </member>
        <member name="P:PetaPoco.Page`1.TotalPages">
            <summary>
            The total number of pages in the full result set
            </summary>
        </member>
        <member name="P:PetaPoco.Page`1.TotalItems">
            <summary>
            The total number of records in the full result set
            </summary>
        </member>
        <member name="P:PetaPoco.Page`1.ItemsPerPage">
            <summary>
            The number of items per page
            </summary>
        </member>
        <member name="P:PetaPoco.Page`1.Items">
            <summary>
            The actual records on this page
            </summary>
        </member>
        <member name="P:PetaPoco.Page`1.Context">
            <summary>
            User property to hold anything.
            </summary>
        </member>
        <member name="T:PetaPoco.Sql">
            <summary>
            A simple helper class for build SQL statements
            </summary>
        </member>
        <member name="M:PetaPoco.Sql.#ctor">
            <summary>
            Default, empty constructor
            </summary>
        </member>
        <member name="M:PetaPoco.Sql.#ctor(System.String,System.Object[])">
            <summary>
            Construct an SQL statement with the supplied SQL and arguments
            </summary>
            <param name="sql">The SQL statement or fragment</param>
            <param name="args">Arguments to any parameters embedded in the SQL</param>
        </member>
        <member name="P:PetaPoco.Sql.Builder">
            <summary>
            Instantiate a new SQL Builder object.  Weirdly implemented as a property but makes
            for more elegantly readble fluent style construction of SQL Statements
            eg: db.Query(Sql.Builder.Append(....))
            </summary>
        </member>
        <member name="P:PetaPoco.Sql.SQL">
            <summary>
            Returns the final SQL statement represented by this builder
            </summary>
        </member>
        <member name="P:PetaPoco.Sql.Arguments">
            <summary>
            Gets the complete, final set of arguments collected by this builder.
            </summary>
        </member>
        <member name="M:PetaPoco.Sql.Append(PetaPoco.Sql)">
            <summary>
            Append another SQL builder instance to the right-hand-side of this SQL builder
            </summary>
            <param name="sql">A reference to another SQL builder instance</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.Append(System.String,System.Object[])">
            <summary>
            Append an SQL fragement to the right-hand-side of this SQL builder
            </summary>
            <param name="sql">The SQL statement or fragment</param>
            <param name="args">Arguments to any parameters embedded in the SQL</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.Where(System.String,System.Object[])">
            <summary>
            Appends an SQL WHERE clause to this SQL builder
            </summary>
            <param name="sql">The condition of the WHERE clause</param>
            <param name="args">Arguments to any parameters embedded in the supplied SQL</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.OrderBy(System.Object[])">
            <summary>
            Appends an SQL ORDER BY clause to this SQL builder
            </summary>
            <param name="columns">A collection of SQL column names to order by</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:PetaPoco.Sql.Select(System.Object[])" -->
        <member name="M:PetaPoco.Sql.From(System.Object[])">
            <summary>
            Appends an SQL FROM clause to this SQL builder
            </summary>
            <param name="tables">A collection of table names to be used in the FROM clause</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.GroupBy(System.Object[])">
            <summary>
            Appends an SQL GROUP BY clause to this SQL builder
            </summary>
            <param name="columns">A collection of column names to be grouped by</param>
            <returns>A reference to this builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="M:PetaPoco.Sql.InnerJoin(System.String)">
            <summary>
            Appends an SQL INNER JOIN clause to this SQL builder
            </summary>
            <param name="table">The name of the table to join</param>
            <returns>A reference an SqlJoinClause through which the join condition can be specified</returns>
        </member>
        <member name="M:PetaPoco.Sql.LeftJoin(System.String)">
            <summary>
            Appends an SQL LEFT JOIN clause to this SQL builder
            </summary>
            <param name="table">The name of the table to join</param>
            <returns>A reference an SqlJoinClause through which the join condition can be specified</returns>
        </member>
        <member name="T:PetaPoco.Sql.SqlJoinClause">
            <summary>
            The SqlJoinClause is a simple helper class used in the construction of SQL JOIN statements with the SQL builder
            </summary>
        </member>
        <member name="M:PetaPoco.Sql.SqlJoinClause.On(System.String,System.Object[])">
            <summary>
            Appends a SQL ON clause after a JOIN statement
            </summary>
            <param name="onClause">The ON clause to be appended</param>
            <param name="args">Arguments to any parameters embedded in the supplied SQL</param>
            <returns>A reference to the parent SQL builder, allowing for fluent style concatenation</returns>
        </member>
        <member name="T:PetaPoco.StandardMapper">
            <summary>
            StandardMapper is the default implementation of IMapper used by PetaPoco
            </summary>
        </member>
        <member name="M:PetaPoco.StandardMapper.GetTableInfo(System.Type)">
            <summary>
            Constructs a TableInfo for a POCO by reading its attribute data
            </summary>
            <param name="pocoType">The POCO Type</param>
            <returns></returns>
        </member>
        <member name="M:PetaPoco.StandardMapper.GetColumnInfo(System.Reflection.PropertyInfo)">
            <summary>
            Constructs a ColumnInfo for a POCO property by reading its attribute data
            </summary>
            <param name="pocoProperty"></param>
            <returns></returns>
        </member>
        <member name="T:PetaPoco.TableInfo">
            <summary>
            Use by IMapper to override table bindings for an object
            </summary>
        </member>
        <member name="P:PetaPoco.TableInfo.TableName">
            <summary>
            The database table name
            </summary>
        </member>
        <member name="P:PetaPoco.TableInfo.PrimaryKey">
            <summary>
            The name of the primary key column of the table
            </summary>
        </member>
        <member name="P:PetaPoco.TableInfo.AutoIncrement">
            <summary>
            True if the primary key column is an auto-incrementing
            </summary>
        </member>
        <member name="P:PetaPoco.TableInfo.SequenceName">
            <summary>
            The name of the sequence used for auto-incrementing Oracle primary key fields
            </summary>
        </member>
        <member name="M:PetaPoco.TableInfo.FromPoco(System.Type)">
            <summary>
            Creates and populates a TableInfo from the attributes of a POCO
            </summary>
            <param name="t">The POCO type</param>
            <returns>A TableInfo instance</returns>
        </member>
        <member name="T:PetaPoco.Transaction">
            <summary>
            Transaction object helps maintain transaction depth counts
            </summary>
        </member>
        <member name="T:PetaPoco.Internal.DatabaseType">
            <summary>
            Base class for DatabaseType handlers - provides default/common handling for different database engines
            </summary>
        </member>
        <member name="M:PetaPoco.Internal.DatabaseType.GetParameterPrefix(System.String)">
            <summary>
            Returns the prefix used to delimit parameters in SQL query strings.
            </summary>
            <param name="ConnectionString"></param>
            <returns></returns>
        </member>
        <member name="M:PetaPoco.Internal.DatabaseType.MapParameterValue(System.Object)">
            <summary>
            Converts a supplied C# object value into a value suitable for passing to the database
            </summary>
            <param name="value">The value to convert</param>
            <returns>The converted value</returns>
        </member>
        <member name="M:PetaPoco.Internal.DatabaseType.PreExecute(System.Data.IDbCommand)">
            <summary>
            Called immediately before a command is executed, allowing for modification of the IDbCommand before it's passed to the database provider
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:PetaPoco.Internal.DatabaseType.BuildPageQuery(System.Int64,System.Int64,PetaPoco.Internal.PagingHelper.SQLParts,System.Object[]@)">
            <summary>
            Builds an SQL query suitable for performing page based queries to the database
            </summary>
            <param name="skip">The number of rows that should be skipped by the query</param>
            <param name="take">The number of rows that should be retruend by the query</param>
            <param name="parts">The original SQL query after being parsed into it's component parts</param>
            <param name="args">Arguments to any embedded parameters in the SQL query</param>
            <returns>The final SQL query that should be executed.</returns>
        </member>
        <member name="M:PetaPoco.Internal.DatabaseType.GetExistsSql">
            <summary>
            Returns an SQL Statement that can check for the existance of a row in the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PetaPoco.Internal.DatabaseType.EscapeTableName(System.String)">
            <summary>
            Escape a tablename into a suitable format for the associated database provider.
            </summary>
            <param name="tableName">The name of the table (as specified by the client program, or as attributes on the associated POCO class.</param>
            <returns>The escaped table name</returns>
        </member>
        <member name="M:PetaPoco.Internal.DatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>
            Escape and arbitary SQL identifier into a format suitable for the associated database provider
            </summary>
            <param name="str">The SQL identifier to be escaped</param>
            <returns>The escaped identifier</returns>
        </member>
        <member name="M:PetaPoco.Internal.DatabaseType.GetAutoIncrementExpression(PetaPoco.TableInfo)">
            <summary>
            Return an SQL expression that can be used to populate the primary key column of an auto-increment column.
            </summary>
            <param name="ti">Table info describing the table</param>
            <returns>An SQL expressions</returns>
            <remarks>See the Oracle database type for an example of how this method is used.</remarks>
        </member>
        <member name="M:PetaPoco.Internal.DatabaseType.GetInsertOutputClause(System.String)">
            <summary>
            Returns an SQL expression that can be used to specify the return value of auto incremented columns.
            </summary>
            <param name="primaryKeyName">The primary key of the row being inserted.</param>
            <returns>An expression describing how to return the new primary key value</returns>
            <remarks>See the SQLServer database provider for an example of how this method is used.</remarks>
        </member>
        <member name="M:PetaPoco.Internal.DatabaseType.ExecuteInsert(PetaPoco.Database,System.Data.IDbCommand,System.String)">
            <summary>
            Performs an Insert operation
            </summary>
            <param name="db">The calling Database object</param>
            <param name="cmd">The insert command to be executed</param>
            <param name="PrimaryKeyName">The primary key of the table being inserted into</param>
            <returns>The ID of the newly inserted record</returns>
        </member>
        <member name="M:PetaPoco.Internal.DatabaseType.Resolve(System.String,System.String)">
            <summary>
            Look at the type and provider name being used and instantiate a suitable DatabaseType instance.
            </summary>
            <param name="TypeName"></param>
            <param name="ProviderName"></param>
            <returns></returns>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Barcode.AlternateText">
            <summary>A human readable equivalent of the barcode value, used when the barcode cannot be
            scanned.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Barcode.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#barcode".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Barcode.Type">
            <summary>The type of barcode.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Barcode.Value">
            <summary>The value encoded in the barcode.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Barcode.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.AircraftType">
            <summary>The aircraft type, such as "Boeing 757-300".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.AllowMultipleUsersPerObject">
            <summary>Identifies whether multiple users will save the same object referencing this class. If true, each
            object saved will have the same ID. If false, each object saved will have a different ID. The default is
            false.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.ArrivalAirportCode">
            <summary>The arrival IATA airport code, such as "SFO" for San Francisco International Airpot.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.ArrivalCityName">
            <summary>The arrival city's name, such as "San Francisco".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.ArrivalDateTimeActual">
            <summary>The currently known arrival date and time (relative to arrival airport's time zone).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.ArrivalDateTimeScheduled">
            <summary>The originally scheduled arrival date and time (relative to arrival airport's time zone).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.ArrivalGate">
            <summary>The arrival gate, such as "57".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.ArrivalTerminal">
            <summary>The arrival terminal code, such as "2".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.ArrivalTimeZone">
            <summary>The Olson ID for the arrival airport's time zone.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.BoardingDateTime">
            <summary>The date and time when boarding begins (relative to departure airport's time zone).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.CarrierCode">
            <summary>The IATA airline code.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.CarrierLogoImage">
            <summary>The carrier's logo.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.CarrierName">
            <summary>The carrier name, such as "Sky Airways".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.DepartureAirportCode">
            <summary>The departure IATA airport code, such as "BOS" for Logan International Airport.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.DepartureCityName">
            <summary>The departure city's name, such as "Boston".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.DepartureDateTimeActual">
            <summary>The currently known departure date and time (relative to departure airport's time zone).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.DepartureDateTimeScheduled">
            <summary>The originally scheduled departure date and time (relative to the departure airport's time
            zone).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.DepartureGate">
            <summary>The departure gate, such as "B15".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.DepartureTerminal">
            <summary>The departure terminal code, such as "B".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.DepartureTimeZone">
            <summary>The Olson ID for the departure airport's time zone.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.FlightNumber">
            <summary>The flight number, such as "758".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.HomepageUri">
            <summary>The URI of your application's home page. Populating the URI in this field results in the exact same
            behavior as populating an URI in linksModuleData (when a Wallet Object is rendered, a link to the homepage
            is shown in what would usually be thought of as the linksModuleData section of the Wallet Object).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.Id">
            <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
            value should follow the format issuer ID.identifier where the former is issued by Google and latter is
            chosen by you. Your unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.ImageModulesData">
            <summary>Image module data. If image modules data is also defined on the object, those will be displayed
            first, followed by image modules data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.InfoModuleData">
            <summary>Info module data. If info module data is also defined on the object, that will be displayed first,
            followed by info module data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.IssuerName">
            <summary>The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on
            smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.LinksModuleData">
            <summary>Links module data. If links module data is also defined on the object, that will be displayed
            first, followed by links module data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.Locations">
            <summary>The list of locations where the Wallet Object can be used. The Wallet Objects platform uses this
            information to trigger geolocated notifications to users. Note that locations in the object override
            locations in the class which override locations in the Google Places ID.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.Messages">
            <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
            receive its associated messages.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.OnboardServices">
            <summary>The in-flight services, such as "Wi-Fi".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.OperatingCarrierCode">
            <summary>The IATA airline code of carrier actually flying the plane (if codeshare).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.OperatingCarrierName">
            <summary>The name of carrier actually flying the plane (if codeshare).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.OperatingFlightNumber">
            <summary>The flight number of carrier actually flying the plane</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.RenderSpecs">
            <summary>Identifies the templates used for rendering fields in the Google Wallet app. Refer to the Using
            Templates section for more details.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.Review">
            <summary>The review comments set by the Wallet Objects Platform when a class is marked approved or
            rejected.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.ReviewStatus">
             <summary>The status of the class. This field can be set to draft or underReview using the insert or update
             API calls.
            
             You should set this field to draft when the class is under development. A draft class can only be seen by
             trusted testers who have access to your issuer account.
            
             You should set this field to underReview when you believe the class is ready for review. An underReview
             class has the same visibility as a draft class, but is automatically sent to Google for approval.
            
             The Wallet Objects Platform sets this field to approved when the class meets certain criteria. An approved
             class is visible to the public.
            
             The Wallet Objects Platform sets this field to rejected when the class does not meet certain criteria. A
             rejected class can only be seen by trusted testers who have access to your issuer account.
            
             The Wallet Objects Platform automatically increments the version of the class when the review status is
             changed to approved or rejected.
            
             Refer to the Class Approval Process section for further information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.StatusCode">
            <summary>The flight's status code, such as "delayed".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.TextModulesData">
            <summary>Text module data. If text modules data is also defined on the object, those will be displayed
            first, followed by text modules data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClass.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClassAddMessageRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClassAddMessageResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClassGetRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClassListRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClassListResponse.Pagination">
            <summary>Nested object containing pagination information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClassListResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassClassMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.Barcode">
            <summary>The barcode type and value.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.BoardingZone">
            <summary>The boarding zone, such as "2".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.ClassId">
            <summary>The class associated with this object.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.ClassReference">
            <summary>A copy of the inherited fields of the parent class. These fields are retrieved during a
            GET.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.ElectronicTicket">
            <summary>Indicates if the ticket is an e-ticket. If true, the ticket is an e-ticket. If false, the ticket is
            a paper ticket.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.FreqFlierAccountId">
            <summary>The frequent flier number.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.FreqFlierProgramName">
            <summary>The frequent flyer program name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.FreqFlierTierLevel">
            <summary>The frequent flier tier, such as "Platinum".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.HasUsers">
            <summary>Indicates if the Wallet Object has users. This field is set by the Wallet Objects
            Platform.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.Id">
            <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
            value should follow the format issuer ID.identifier where the former is issued by Google and latter is
            chosen by you. The unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.ImageModulesData">
            <summary>Image module data. If image modules data is also defined on the class, the ones defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.InfoModuleData">
            <summary>Info module data. If info module data is also defined on the class, the one defined here on the
            object will be displayed first, followed by the one defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.LinksModuleData">
            <summary>Links module data. If links module data is also defined on the class, the one defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.Locations">
            <summary>The list of locations where the Wallet Object can be used. The Wallet Object platform uses this
            information to trigger geolocated notifications to users. Note that locations in the object override
            locations in the class which override locations in the Google Places ID.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.Messages">
            <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
            receive its associated messages.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.PassengerName">
            <summary>Passenger name</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.PassengerStatus">
            <summary>The passenger status codes, such as "STBY" for "standby."</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.PrecheckLogo">
            <summary>The TSA Precheck logo.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.RecordLocator">
            <summary>The 6 character PNR (reservation) record id, such as "RXT53L".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.Seat">
            <summary>The seat number, such as "14C".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.SeatClass">
            <summary>The seat class, such as "Economy".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.SeatDescriptions">
            <summary>The seat description strings, such as "Aisle, Extra leg room".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.SecuritySelecteeStatus">
            <summary>The TSA security code, such as "SSSS" for "flagged for screening."</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.SequenceNumber">
            <summary>The boarding sequence number, such as "003".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.SpecialServiceCodes">
            <summary>The special service codes, such as "UMNR" for "unaccompanied minor."</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.State">
            <summary>The state of the Wallet Object. This field is used to determine how a Wallet Object is displayed in
            the Google Wallet app. For example, an inactive object is no longer displayed in the Google Wallet app.
            Valid values are: - active: Object is active and displayed to with other active objects. - completed: Object
            has been used and is displayed with other used and expired objects. - expired: Object is no longer valid
            (validTimeInterval passed). - inactive: Object is inactive and hidden from view.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.TextModulesData">
            <summary>Text module data. If text module data is also defined on the class, the ones defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.TicketNumber">
            <summary>The ticket number containing the coupon for the corresponding segment.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.ValidTimeInterval">
            <summary>The time period this object will be active and object can be used. An object's state will be
            changed to expired when this time period has passed.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObject.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObjectAddMessageRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObjectAddMessageResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObjectGetRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObjectListRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObjectListResponse.Pagination">
            <summary>Nested object containing pagination information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObjectListResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.BoardingPassObjectMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.CommonWalletObjectClassReview.Comments">
            <summary>The explanation of why the class was marked approved or rejected.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.CommonWalletObjectClassReview.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.DateTime.DateRaw">
            <summary>RFC 3339 formatted date-time. For example "1985-04-12T23:20:50.52Z" would be 20 minutes and 50.52
            seconds after the 23rd hour of April 12th, 1985 in UTC.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.DateTime.Date">
            <summary><seealso cref="T:System.DateTime"/> representation of <see cref="P:Google.Apis.Walletobjects.v1.Data.DateTime.DateRaw"/>.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.DateTime.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.FieldMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.AllowMultipleUsersPerObject">
            <summary>Identifies whether multiple users will save the same object referencing this class. If true, each
            object saved will have the same ID. If false, each object saved will have a different ID. The default is
            false.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.Description">
            <summary>The user-facing description. After 20 characters the remainder of the description will be displayed
            with ellipsis.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.HomepageUri">
            <summary>The URI of your application's home page. Populating the URI in this field results in the exact same
            behavior as populating an URI in linksModuleData (when a Wallet Object is rendered, a link to the homepage
            is shown in what would usually be thought of as the linksModuleData section of the Wallet Object).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.Id">
            <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
            value should follow the format issuer ID.identifier where the former is issued by Google and latter is
            chosen by you. Your unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.ImageModulesData">
            <summary>Image module data. If image modules data is also defined on the object, those will be displayed
            first, followed by image modules data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.InfoModuleData">
            <summary>Info module data. If info module data is also defined on the object, that will be displayed first,
            followed by info module data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.IssuerName">
            <summary>The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on
            smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#genericClass".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.LinksModuleData">
            <summary>Links module data. If links module data is also defined on the object, that will be displayed
            first, followed by links module data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.Locations">
            <summary>The list of locations where the Wallet Object can be used. The Wallet Objects platform uses this
            information to trigger geolocated notifications to users. Note that locations in the object override
            locations in the class which override locations in the Google Places ID.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.Messages">
            <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
            receive its associated messages.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.RenderSpecs">
            <summary>Identifies the templates used for rendering fields in the Google Wallet app. Refer to the Using
            Templates section for more details.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.Review">
            <summary>The review comments set by the Wallet Objects Platform when a class is marked approved or
            rejected.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.ReviewStatus">
             <summary>The status of the class. This field can be set to draft or underReview using the insert or update
             API calls.
            
             You should set this field to draft when the class is under development. A draft class can only be seen by
             trusted testers who have access to your issuer account.
            
             You should set this field to underReview when you believe the class is ready for review. An underReview
             class has the same visibility as a draft class, but is automatically sent to Google for approval.
            
             The Wallet Objects Platform sets this field to approved when the class meets certain criteria. An approved
             class is visible to the public.
            
             The Wallet Objects Platform sets this field to rejected when the class does not meet certain criteria. A
             rejected class can only be seen by trusted testers who have access to your issuer account.
            
             The Wallet Objects Platform automatically increments the version of the class when the review status is
             changed to approved or rejected.
            
             Refer to the Class Approval Process section for further information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.TextModulesData">
            <summary>Text module data. If text modules data is also defined on the object, those will be displayed
            first, followed by text modules data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.Title">
            <summary>The user-facing title. After 20 characters the remainder of the title will be displayed with
            ellipsis.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.TitleImage">
            <summary>The user-facing image displayed in the title section.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClass.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClassAddMessageRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClassAddMessageResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClassGetRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClassListRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClassListResponse.Pagination">
            <summary>Nested object containing pagination information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClassListResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericClassMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.Barcode">
            <summary>The barcode type and value.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.ClassId">
            <summary>The class associated with this object.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.ClassReference">
            <summary>A copy of the inherited fields of the parent class. These fields are retrieved during a
            GET.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.HasUsers">
            <summary>Indicates if the Wallet Object has users. This field is set by the Wallet Objects
            Platform.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.Id">
            <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
            value should follow the format issuer ID.identifier where the former is issued by Google and latter is
            chosen by you. The unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.ImageModulesData">
            <summary>Image module data. If image modules data is also defined on the class, the ones defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.InfoModuleData">
            <summary>Info module data. If info module data is also defined on the class, the one defined here on the
            object will be displayed first, followed by the one defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#genericObject".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.LinksModuleData">
            <summary>Links module data. If links module data is also defined on the class, the one defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.Locations">
            <summary>The list of locations where the Wallet Object can be used. The Wallet Object platform uses this
            information to trigger geolocated notifications to users. Note that locations in the object override
            locations in the class which override locations in the Google Places ID.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.Messages">
            <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
            receive its associated messages.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.State">
            <summary>The state of the Wallet Object. This field is used to determine how a Wallet Object is displayed in
            the Google Wallet app. For example, an inactive object is no longer displayed in the Google Wallet app.
            Valid values are: - active: Object is active and displayed to with other active objects. - completed: Object
            has been used and is displayed with other used and expired objects. - expired: Object is no longer valid
            (validTimeInterval passed). - inactive: Object is inactive and hidden from view.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.TextModulesData">
            <summary>Text module data. If text module data is also defined on the class, the ones defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.ValidTimeInterval">
            <summary>The time period this object will be active and object can be used. An object's state will be
            changed to expired when this time period has passed.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObject.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObjectAddMessageRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObjectAddMessageResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObjectGetRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObjectListRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObjectListResponse.Pagination">
            <summary>Nested object containing pagination information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObjectListResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GenericObjectMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.AllowBarcodeRedemption">
            <summary>Determines whether the merchant supports gift card redemption using barcode. If true, Google Wallet
            app displays a barcode for the gift card on the Gift card details screen. If false, a barcode is not
            displayed.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.AllowMultipleUsersPerObject">
            <summary>Identifies whether multiple users will save the same object referencing this class. If true, each
            object saved will have the same ID. If false, each object saved will have a different ID. The default is
            false.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.EventNumberLabel">
            <summary>The label to display for event number, such as "Target Event #".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.HomepageUri">
            <summary>The URI of your application's home page. Populating the URI in this field results in the exact same
            behavior as populating an URI in linksModuleData (when a Wallet Object is rendered, a link to the homepage
            is shown in what would usually be thought of as the linksModuleData section of the Wallet Object).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.Id">
            <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
            value should follow the format issuer ID.identifier where the former is issued by Google and latter is
            chosen by you. Your unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.ImageModulesData">
            <summary>Image module data. If image modules data is also defined on the object, those will be displayed
            first, followed by image modules data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.InfoModuleData">
            <summary>Info module data. If info module data is also defined on the object, that will be displayed first,
            followed by info module data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.IssuerName">
            <summary>The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on
            smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#giftCardClass".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.LinksModuleData">
            <summary>Links module data. If links module data is also defined on the object, that will be displayed
            first, followed by links module data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.Locations">
            <summary>The list of locations where the Wallet Object can be used. The Wallet Objects platform uses this
            information to trigger geolocated notifications to users. Note that locations in the object override
            locations in the class which override locations in the Google Places ID.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.MerchantName">
            <summary>Merchant name, such as "Adam's Apparel". The Google Wallet app will display an ellipsis after the
            first 20 characters to ensure full string is displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.Messages">
            <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
            receive its associated messages.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.PinLabel">
            <summary>The label to display for the PIN, such as ""4-digit PIN".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.ProgramLogo">
            <summary>The logo of the gift card program or company. This logo is displayed in both the expanded and list
            views of the Google Wallet app.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.RenderSpecs">
            <summary>Identifies the templates used for rendering fields in the Google Wallet app. Refer to the Using
            Templates section for more details.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.Review">
            <summary>The review comments set by the Wallet Objects Platform when a class is marked approved or
            rejected.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.ReviewStatus">
             <summary>The status of the class. This field can be set to draft or underReview using the insert or update
             API calls.
            
             You should set this field to draft when the class is under development. A draft class can only be seen by
             trusted testers who have access to your issuer account.
            
             You should set this field to underReview when you believe the class is ready for review. An underReview
             class has the same visibility as a draft class, but is automatically sent to Google for approval.
            
             The Wallet Objects Platform sets this field to approved when the class meets certain criteria. An approved
             class is visible to the public.
            
             The Wallet Objects Platform sets this field to rejected when the class does not meet certain criteria. A
             rejected class can only be seen by trusted testers who have access to your issuer account.
            
             The Wallet Objects Platform automatically increments the version of the class when the review status is
             changed to approved or rejected.
            
             Refer to the Class Approval Process section for further information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.TextModulesData">
            <summary>Text module data. If text modules data is also defined on the object, those will be displayed
            first, followed by text modules data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClass.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClassAddMessageRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClassAddMessageResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClassGetRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClassListRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClassListResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardClassMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.Balance">
            <summary>The card's monetary balance.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.BalanceUpdateTime">
            <summary>The date and time when the balance was last updated.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.Barcode">
            <summary>The barcode type and value.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.CardNumber">
            <summary>The card's number.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.ClassId">
            <summary>The class associated with this object.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.ClassReference">
            <summary>A copy of the inherited fields of the parent class. These fields are retrieved during a
            GET.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.EventNumber">
            <summary>The card's event number, an optional field used by some gift cards.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.HasUsers">
            <summary>Indicates if the Wallet Object has users. This field is set by the Wallet Objects
            Platform.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.Id">
            <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
            value should follow the format issuer ID.identifier where the former is issued by Google and latter is
            chosen by you. The unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.ImageModulesData">
            <summary>Image module data. If image modules data is also defined on the class, the ones defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.InfoModuleData">
            <summary>Info module data. If info module data is also defined on the class, the one defined here on the
            object will be displayed first, followed by the one defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#giftCardObject".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.LinksModuleData">
            <summary>Links module data. If links module data is also defined on the class, the one defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.Locations">
            <summary>The list of locations where the Wallet Object can be used. The Wallet Object platform uses this
            information to trigger geolocated notifications to users. Note that locations in the object override
            locations in the class which override locations in the Google Places ID.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.Messages">
            <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
            receive its associated messages.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.Pin">
            <summary>The card's PIN.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.State">
            <summary>The state of the Wallet Object. This field is used to determine how a Wallet Object is displayed in
            the Google Wallet app. For example, an inactive object is no longer displayed in the Google Wallet app.
            Valid values are: - active: Object is active and displayed to with other active objects. - completed: Object
            has been used and is displayed with other used and expired objects. - expired: Object is no longer valid
            (validTimeInterval passed). - inactive: Object is inactive and hidden from view.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.TextModulesData">
            <summary>Text module data. If text module data is also defined on the class, the ones defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.ValidTimeInterval">
            <summary>The time period this object will be active and object can be used. An object's state will be
            changed to expired when this time period has passed.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObject.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObjectAddMessageRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObjectAddMessageResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObjectGetRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObjectListRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObjectListResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.GiftCardObjectMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.IconBody.Bodies">
            <summary>A list of strings describing the body of the of the text module. The list of string is displayed
            with vertical spacing between them.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.IconBody.Icon">
            <summary>The icon that summarizes what the icon should look like.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.IconBody.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Image.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string "walletobjects#image".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Image.SourceUri">
            <summary>The URI for an image.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Image.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.ImageModuleData.MainImage">
            <summary>A 100% width image.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.ImageModuleData.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.InfoModuleData.LabelValueRows">
            <summary>A list of rows. Refer to the  Using Templates section for information on how to specify rows and
            columns in the infoModuleData.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.InfoModuleData.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.Data.LabelValue">
            <summary>A pair of text strings to be displayed in a table.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LabelValue.Label">
            <summary>The label for a specific row and column. Recommended maximum is 15 characters for a two-column
            layout and 30 characters for a one-column layout.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LabelValue.Value">
            <summary>The value for a specific row and column. Recommended maximum is 15 characters for a two-column
            layout and 30 characters for a one-column layout.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LabelValue.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LabelValueRow.Columns">
            <summary>A list of columns. Refer to the  Using Templates section for information on how to specify rows and
            columns in the Info Module.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LabelValueRow.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LatLongPoint.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#latLongPoint".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LatLongPoint.Latitude">
            <summary>The latitude specified as any value in the range of -90.0 through +90.0, both inclusive. Values
            outside these bounds will be rejected.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LatLongPoint.Longitude">
            <summary>The longitude specified in the range -180.0 through +180.0, both inclusive. Values outside these
            bounds will be rejected.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LatLongPoint.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LinksModuleData.Uris">
            <summary>The list of URIs.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LinksModuleData.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LocalizedString.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LocationMetadata.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#locationMetadata".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LocationMetadata.LocationName">
            <summary>The name of this location. Please note that it can vary from the name of e.g. an entire
            chain.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LocationMetadata.PhoneNumber">
            <summary>The phone number specific to this location.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LocationMetadata.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.AccountIdLabel">
            <summary>The account ID label, such as "Member ID." Recommended maximum length is 15 characters to ensure
            full string is displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.AccountNameLabel">
            <summary>The account name label, such as "Member Name." Recommended maximum length is 15 characters to
            ensure full string is displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.AllowMultipleUsersPerObject">
            <summary>Identifies whether multiple users will save the same object referencing this class. If true, each
            object saved will have the same ID. If false, each object saved will have a different ID. The default is
            false.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.HomepageUri">
            <summary>The URI of your application's home page. Populating the URI in this field results in the exact same
            behavior as populating an URI in linksModuleData (when a Wallet Object is rendered, a link to the homepage
            is shown in what would usually be thought of as the linksModuleData section of the Wallet Object).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.Id">
            <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
            value should follow the format issuer ID.identifier where the former is issued by Google and latter is
            chosen by you. Your unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.ImageModulesData">
            <summary>Image module data. If image modules data is also defined on the object, those will be displayed
            first, followed by image modules data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.InfoModuleData">
            <summary>Info module data. If info module data is also defined on the object, that will be displayed first,
            followed by info module data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.IssuerName">
            <summary>The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on
            smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#loyaltyClass".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.LinksModuleData">
            <summary>Links module data. If links module data is also defined on the object, that will be displayed
            first, followed by links module data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.Locations">
            <summary>The list of locations where the Wallet Object can be used. The Wallet Objects platform uses this
            information to trigger geolocated notifications to users. Note that locations in the object override
            locations in the class which override locations in the Google Places ID.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.Messages">
            <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
            receive its associated messages.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.ProgramLogo">
            <summary>The logo of the loyalty program or company. This logo is displayed in both the expanded and list
            views of the Google Wallet app.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.ProgramName">
            <summary>The program name, such as "Adam's Apparel". The Google Wallet app will display an ellipsis after
            the first 20 characters to ensure full string is displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.Review">
            <summary>The review comments set by the Wallet Objects Platform when a class is marked approved or
            rejected.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.ReviewStatus">
             <summary>The status of the class. This field can be set to draft or underReview using the insert or update
             API calls.
            
             You should set this field to draft when the class is under development. A draft class can only be seen by
             trusted testers who have access to your issuer account.
            
             You should set this field to underReview when you believe the class is ready for review. An underReview
             class has the same visibility as a draft class, but is automatically sent to Google for approval.
            
             The Wallet Objects Platform sets this field to approved when the class meets certain criteria. An approved
             class is visible to the public.
            
             The Wallet Objects Platform sets this field to rejected when the class does not meet certain criteria. A
             rejected class can only be seen by trusted testers who have access to your issuer account.
            
             The Wallet Objects Platform automatically increments the version of the class when the review status is
             changed to approved or rejected.
            
             Refer to the Class Approval Process section for further information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.RewardsTier">
            <summary>The rewards tier, such as "Gold" or "Platinum." Recommended maximum length is 7 characters to
            ensure full string is displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.RewardsTierLabel">
            <summary>The rewards tier label, such as "Rewards Tier." Recommended maximum length is 9 characters to
            ensure full string is displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.TextModulesData">
            <summary>Text module data. If text modules data is also defined on the object, those will be displayed
            first, followed by text modules data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClass.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClassAddMessageRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClassAddMessageResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClassGetRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClassListRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClassListResponse.Pagination">
            <summary>Nested object containing pagination information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClassListResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyClassMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.AccountId">
            <summary>The loyalty account identifier. Recommended maximum length is 20 characters.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.AccountName">
            <summary>The loyalty account holder name, such as "John Smith." Recommended maximum length is 20 characters
            to ensure full string is displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.Barcode">
            <summary>The barcode type and value.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.ClassId">
            <summary>The class associated with this object.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.ClassReference">
            <summary>A copy of the inherited fields of the parent class. These fields are retrieved during a
            GET.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.HasUsers">
            <summary>Indicates if the Wallet Object has users. This field is set by the Wallet Objects
            Platform.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.Id">
            <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
            value should follow the format issuer ID.identifier where the former is issued by Google and latter is
            chosen by you. The unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.ImageModulesData">
            <summary>Image module data. If image modules data is also defined on the class, the ones defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.InfoModuleData">
            <summary>Info module data. If info module data is also defined on the class, the one defined here on the
            object will be displayed first, followed by the one defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#loyaltyObject".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.LinksModuleData">
            <summary>Links module data. If links module data is also defined on the class, the one defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.Locations">
            <summary>The list of locations where the Wallet Object can be used. The Wallet Object platform uses this
            information to trigger geolocated notifications to users. Note that locations in the object override
            locations in the class which override locations in the Google Places ID.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.LoyaltyPoints">
            <summary>The loyalty reward points label, balance, and type.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.Messages">
            <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
            receive its associated messages.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.State">
            <summary>The state of the Wallet Object. This field is used to determine how a Wallet Object is displayed in
            the Google Wallet app. For example, an inactive object is no longer displayed in the Google Wallet app.
            Valid values are: - active: Object is active and displayed to with other active objects. - completed: Object
            has been used and is displayed with other used and expired objects. - expired: Object is no longer valid
            (validTimeInterval passed). - inactive: Object is inactive and hidden from view.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.TextModulesData">
            <summary>Text module data. If text module data is also defined on the class, the ones defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.ValidTimeInterval">
            <summary>The time period this object will be active and object can be used. An object's state will be
            changed to expired when this time period has passed.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObject.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObjectAddMessageRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObjectAddMessageResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObjectGetRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObjectListRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObjectListResponse.Pagination">
            <summary>Nested object containing pagination information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObjectListResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyObjectMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyPoints.Balance">
            <summary>The account holder's loyalty point balance, such as "500" or "$10.00". Recommended maximum length
            is 7 characters.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyPoints.Label">
            <summary>The loyalty points label, such as "Points". Recommended maximum length is 9 characters.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyPoints.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyPointsBalance.Double">
            <summary>The double form of a balance. Only one of these subtypes (string, int, double, money) should be
            populated.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyPointsBalance.Int">
            <summary>The integer form of a balance. Only one of these subtypes (string, int, double, money) should be
            populated.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyPointsBalance.Money">
            <summary>The money form of a balance. Only one of these subtypes (string, int, double, money) should be
            populated.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyPointsBalance.String">
            <summary>The string form of a balance. Only one of these subtypes (string, int, double, money) should be
            populated.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.LoyaltyPointsBalance.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Money.CurrencyCode">
            <summary>The currency code, such as "USD" or "EUR."</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Money.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string "walletobjects#money".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Money.Micros">
            <summary>The unit of money amount in micros. For example, $1 USD would be represented as 1000000
            micros.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Money.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.AllowMultipleUsersPerObject">
            <summary>Identifies whether multiple users will save the same object referencing this class. If true, each
            object saved will have the same ID. If false, each object saved will have a different ID. The default is
            false.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.Details">
            <summary>The details of the offer. Recommended maximum length is 500 characters to ensure full string is
            displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.FinePrint">
            <summary>The fine print or terms of the offer, such as "20% off any t-shirt at Adam's Apparel." Recommended
            maximum length is 500 characters to ensure full string is displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.HelpUri">
            <summary>The help link for the offer, such as http://myownpersonaldomain.com/help</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.HomepageUri">
            <summary>The URI of your application's home page. Populating the URI in this field results in the exact same
            behavior as populating an URI in linksModuleData (when a Wallet Object is rendered, a link to the homepage
            is shown in what would usually be thought of as the linksModuleData section of the Wallet Object).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.Id">
            <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
            value should follow the format issuer ID.identifier where the former is issued by Google and latter is
            chosen by you. Your unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.ImageModulesData">
            <summary>Image module data. If image modules data is also defined on the object, those will be displayed
            first, followed by image modules data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.InfoModuleData">
            <summary>Info module data. If info module data is also defined on the object, that will be displayed first,
            followed by info module data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.IssuerName">
            <summary>The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on
            smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#offerClass".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.LinksModuleData">
            <summary>Links module data. If links module data is also defined on the object, that will be displayed
            first, followed by links module data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.Locations">
            <summary>The list of locations where the Wallet Object can be used. The Wallet Objects platform uses this
            information to trigger geolocated notifications to users. Note that locations in the object override
            locations in the class which override locations in the Google Places ID.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.Messages">
            <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
            receive its associated messages.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.Provider">
            <summary>The offer provider (either the aggregator name or merchant name). Recommended maximum length is 12
            characters to ensure full string is displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.RedemptionChannel">
            <summary>The redemption channels applicable to this offer.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.RenderSpecs">
            <summary>Identifies the templates used for rendering fields in the Google Wallet app. Refer to the Using
            Templates section for more details.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.Review">
            <summary>The review comments set by the Wallet Objects Platform when a class is marked approved or
            rejected.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.ReviewStatus">
             <summary>The status of the class. This field can be set to draft or underReview using the insert or update
             API calls.
            
             You should set this field to draft when the class is under development. A draft class can only be seen by
             trusted testers who have access to your issuer account.
            
             You should set this field to underReview when you believe the class is ready for review. An underReview
             class has the same visibility as a draft class, but is automatically sent to Google for approval.
            
             The Wallet Objects Platform sets this field to approved when the class meets certain criteria. An approved
             class is visible to the public.
            
             The Wallet Objects Platform sets this field to rejected when the class does not meet certain criteria. A
             rejected class can only be seen by trusted testers who have access to your issuer account.
            
             The Wallet Objects Platform automatically increments the version of the class when the review status is
             changed to approved or rejected.
            
             Refer to the Class Approval Process section for further information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.TextModulesData">
            <summary>Text module data. If text modules data is also defined on the object, those will be displayed
            first, followed by text modules data defined here on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.Title">
            <summary>The title of the offer, such as "20% off any t-shirt." Recommended maximum length is 60 characters
            to ensure full string is displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.TitleImage">
            <summary>The title image of the offer. This image is displayed in both the expanded and list views of the
            Google Wallet app.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClass.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClassAddMessageRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClassAddMessageResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClassGetRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClassListRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClassListResponse.Pagination">
            <summary>Nested object containing pagination information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClassListResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferClassMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.Barcode">
            <summary>The barcode type and value.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.ClassId">
            <summary>The class associated with this object.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.ClassReference">
            <summary>A copy of the inherited fields of the parent class. These fields are retrieved during a
            GET.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.HasUsers">
            <summary>Indicates if the Wallet Object has users. This field is set by the Wallet Objects
            Platform.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.Id">
            <summary>The unique identifier for a class. This ID must be unique across all classes from an issuer. This
            value should follow the format issuer ID.identifier where the former is issued by Google and latter is
            chosen by you. The unique identifier should only include alphanumeric characters, '_', or '-'.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.ImageModulesData">
            <summary>Image module data. If image modules data is also defined on the class, the ones defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.InfoModuleData">
            <summary>Info module data. If info module data is also defined on the class, the one defined here on the
            object will be displayed first, followed by the one defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#offerObject".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.LinksModuleData">
            <summary>Links module data. If links module data is also defined on the class, the one defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.Locations">
            <summary>The list of locations where the Wallet Object can be used. The Wallet Object platform uses this
            information to trigger geolocated notifications to users. Note that locations in the object override
            locations in the class which override locations in the Google Places ID.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.Messages">
            <summary>An array of messages displayed in the Google Wallet app. All users of this Wallet Object will
            receive its associated messages.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.State">
            <summary>The state of the Wallet Object. This field is used to determine how a Wallet Object is displayed in
            the Google Wallet app. For example, an inactive object is no longer displayed in the Google Wallet app.
            Valid values are: - active: Object is active and displayed to with other active objects. - completed: Object
            has been used and is displayed with other used and expired objects. - expired: Object is no longer valid
            (validTimeInterval passed). - inactive: Object is inactive and hidden from view.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.TextModulesData">
            <summary>Text module data. If text module data is also defined on the class, the ones defined here on the
            object will be displayed first, followed by those defined on the class.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.ValidTimeInterval">
            <summary>The time period this object will be active and object can be used. An object's state will be
            changed to expired when this time period has passed.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObject.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObjectAddMessageRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObjectAddMessageResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObjectGetRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObjectListRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObjectListResponse.Pagination">
            <summary>Nested object containing pagination information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObjectListResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.OfferObjectMask.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Pagination.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#pagination".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Pagination.NextPageToken">
            <summary>Page token to send to fetch the next page.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Pagination.ResultsPerPage">
            <summary>Number of results returned in this page.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Pagination.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.PassengerName.First">
            <summary>The passenger's first name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.PassengerName.Last">
            <summary>The passenger's last name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.PassengerName.Middle">
            <summary>The passenger's middle name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.PassengerName.Prefix">
            <summary>The prefix for the passenger's name, such as "Mr."</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.PassengerName.Suffix">
            <summary>The suffix for the passenger's name, such as "Jr."</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.PassengerName.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.RenderSpec.TemplateFamily">
            <summary>The template family used to render the Wallet Object. Valid values are: - 1.loyalty_expanded -
            1.loyalty_list - 1.offer_expanded - 1.offer_list</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.RenderSpec.ViewName">
            <summary>The view name (either g_list or g_expanded). This determines the template family to use to display
            a Wallet Object. For example, g_expanded would map to a template_family name with the word "expanded" in it
            (such as 1. loyalty_expanded), while g_list would map to a template_family name with the word "list" in it
            (such as 1.loyalty_list).</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.RenderSpec.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.Data.TextModuleData">
            <summary>Data for Text module. All fields are optional. Header will be displayed if available, different types
            of bodies will be concatenated if they are defined.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TextModuleData.Body">
            <summary>The body of the Text Module, which is defined as an uninterrupted string. Recommended maximum
            length is 500 characters to ensure full string is displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TextModuleData.Header">
            <summary>The header of the Text Module. Recommended maximum length is 35 characters to ensure full string is
            displayed on smaller screens.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TextModuleData.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TimeInterval.End">
            <summary>End time of the interval.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TimeInterval.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#timeInterval".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TimeInterval.Start">
            <summary>Start time of the interval.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TimeInterval.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TranslatedString.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TypedValue.Bool">
            <summary>The bool value.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TypedValue.Double">
            <summary>The double value.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TypedValue.Image">
            <summary>The image value.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TypedValue.Int">
            <summary>The int value.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TypedValue.Kind">
            <summary>The kind, fixed to "walletobjects#typedValue".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TypedValue.List">
            <summary>The list of typed values.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TypedValue.String">
            <summary>The string value.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TypedValue.Uri">
            <summary>The uri value.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.TypedValue.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Uri.Description">
             <summary>The URI's title appearing in the Google Wallet app as text. Recommended maximum is 20 characters to
             ensure full string is displayed on smaller screens.
            
             Note that in some contexts this text is not used, such as when description is part of an image.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Uri.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string "walletobjects#uri".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Uri.UriValue">
            <summary>The location of a web page, image, or other resource. URIs in the LinksModuleData module can have
            different prefixes indicating the type of URI (a link to a web page, a link to a map, a telephone number, or
            an email address). Refer to the  LinksModuleData section of the User Interface Guidelines for further
            information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.Uri.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.WalletObjectMessage.Body">
            <summary>The message body. The maximum length is 200 characters if you do not specify an image or 150
            characters if you specify an image. Refer to the Using Templates section for more details.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.WalletObjectMessage.DisplayInterval">
            <summary>The period of time that the message will be displayed to users. You can define both a startTime and
            endTime for each message. A message is displayed immediately after a Wallet Object is inserted unless a
            startTime is set. The message will appear in a list of messages indefinitely if endTime is not
            provided.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.WalletObjectMessage.Header">
            <summary>The message header. The maximum length is 30 characters if you do not specify an image or 20
            characters if you specify an image (depending on device resolution). Refer to the Using Templates section
            for more information.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.WalletObjectMessage.Id">
            <summary>The ID associated with a message. This field is here to enable ease of management of messages.
            Notice ID values could possibly duplicate across multiple messages in the same class/instance, and care must
            be taken to select a reasonable ID for each message.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.WalletObjectMessage.Kind">
            <summary>Identifies what kind of resource this is. Value: the fixed string
            "walletobjects#walletObjectMessage".</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.Data.WalletObjectMessage.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.WalletobjectsService">
            <summary>The Walletobjects Service.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.WalletobjectsService.Version">
            <summary>The API version.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.WalletobjectsService.DiscoveryVersionUsed">
            <summary>The discovery version used to generate this service.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.WalletobjectsService.#ctor">
            <summary>Constructs a new service.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.WalletobjectsService.#ctor(Google.Apis.Services.BaseClientService.Initializer)">
            <summary>Constructs a new service.</summary>
            <param name="initializer">The service initializer.</param>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Features">
            <summary>Gets the service supported features.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Name">
            <summary>Gets the service name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.BaseUri">
            <summary>Gets the service base URI.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.BasePath">
            <summary>Gets the service base path.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.WalletobjectsService.Scope">
            <summary>Available OAuth 2.0 scopes for use with the walletobjects.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.WalletobjectsService.Scope.WalletObjectIssuer">
            <summary>You should never encounter this message. Please do not approve the access request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Boardingpassclass">
            <summary>Gets the Boardingpassclass resource.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Boardingpassobject">
            <summary>Gets the Boardingpassobject resource.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Genericclass">
            <summary>Gets the Genericclass resource.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Genericobject">
            <summary>Gets the Genericobject resource.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Giftcardclass">
            <summary>Gets the Giftcardclass resource.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Giftcardobject">
            <summary>Gets the Giftcardobject resource.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Loyaltyclass">
            <summary>Gets the Loyaltyclass resource.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Loyaltyobject">
            <summary>Gets the Loyaltyobject resource.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Offerclass">
            <summary>Gets the Offerclass resource.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsService.Offerobject">
            <summary>Gets the Offerobject resource.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1">
            <summary>A base abstract class for Walletobjects requests.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new WalletobjectsBaseServiceRequest instance.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1.Alt">
            <summary>Data format for the response.</summary>
            [default: json]
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1.AltEnum">
            <summary>Data format for the response.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1.AltEnum.Json">
            <summary>Responses with Content-Type of application/json</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1.Fields">
            <summary>Selector specifying which fields to include in a partial response.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1.Key">
            <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
            Required unless you provide an OAuth 2.0 token.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1.OauthToken">
            <summary>OAuth 2.0 token for the current user.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1.PrettyPrint">
            <summary>Returns response with indentations and line breaks.</summary>
            [default: true]
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1.QuotaUser">
            <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
            assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1.UserIp">
            <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
            limits.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.WalletobjectsBaseServiceRequest`1.InitParameters">
            <summary>Initializes Walletobjects parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassclassResource">
            <summary>The "boardingpassclass" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.BoardingpassclassResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.Addmessage(Google.Apis.Walletobjects.v1.Data.BoardingPassClassAddMessageRequest,System.String)">
            <summary>Adds a message to the boarding pass class referenced by the given class ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassclassResource.AddmessageRequest">
            <summary>Adds a message to the boarding pass class referenced by the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.AddmessageRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.BoardingPassClassAddMessageRequest,System.String)">
            <summary>Constructs a new Addmessage request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.AddmessageRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.AddmessageRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.AddmessageRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.AddmessageRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.AddmessageRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.AddmessageRequest.InitParameters">
            <summary>Initializes Addmessage parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.Get(System.String)">
            <summary>Returns the boarding pass class with the given class ID.</summary>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassclassResource.GetRequest">
            <summary>Returns the boarding pass class with the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.GetRequest.ApprovedOnly">
            <summary>Specifies latest class version with a reviewStatus of approved be returned. The approved_only
            and version parameters cannot both be set.</summary>
            [default: false]
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.Insert(Google.Apis.Walletobjects.v1.Data.BoardingPassClass)">
            <summary>Inserts a boarding pass class with the given ID and properties.</summary>
            <param name="body">The body of the request.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassclassResource.InsertRequest">
            <summary>Inserts a boarding pass class with the given ID and properties.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.InsertRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.BoardingPassClass)">
            <summary>Constructs a new Insert request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.InsertRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.InsertRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.InsertRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.InsertRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.InsertRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.InsertRequest.InitParameters">
            <summary>Initializes Insert parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.List(System.Int64)">
            <summary>Returns a list of all boarding pass classes for a given issuer ID.</summary>
            <param name="issuerId">The ID of the issuer authorized to list classes. No type field, as that is implicate in the
            type part of the Uri.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassclassResource.ListRequest">
            <summary>Returns a list of all boarding pass classes for a given issuer ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.Int64)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.ListRequest.IssuerId">
            <summary>The ID of the issuer authorized to list classes. No type field, as that is implicate in the
            type part of the Uri.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.ListRequest.MaxResults">
            <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            isn't defined.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.ListRequest.Token">
            <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            classes are available in a list. For example, if you have a list of 200 classes and you call list with
            maxResults set to 20, list will return the first 20 classes and a token. Call list again with maxResults
            set to 20 and the token to get the next 20 classes.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.Patch(Google.Apis.Walletobjects.v1.Data.BoardingPassClass,System.String)">
            <summary>Updates the boarding pass class referenced by the given class ID. This method supports patch
            semantics.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassclassResource.PatchRequest">
            <summary>Updates the boarding pass class referenced by the given class ID. This method supports patch
            semantics.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.BoardingPassClass,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.Update(Google.Apis.Walletobjects.v1.Data.BoardingPassClass,System.String)">
            <summary>Updates the boarding pass class referenced by the given class ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassclassResource.UpdateRequest">
            <summary>Updates the boarding pass class referenced by the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.UpdateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.BoardingPassClass,System.String)">
            <summary>Constructs a new Update request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.UpdateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.UpdateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.UpdateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.UpdateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassclassResource.UpdateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassclassResource.UpdateRequest.InitParameters">
            <summary>Initializes Update parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassobjectResource">
            <summary>The "boardingpassobject" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.Addmessage(Google.Apis.Walletobjects.v1.Data.BoardingPassObjectAddMessageRequest,System.String)">
            <summary>Adds a message to the boarding pass object referenced by the given object ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.AddmessageRequest">
            <summary>Adds a message to the boarding pass object referenced by the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.AddmessageRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.BoardingPassObjectAddMessageRequest,System.String)">
            <summary>Constructs a new Addmessage request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.AddmessageRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.AddmessageRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.AddmessageRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.AddmessageRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.AddmessageRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.AddmessageRequest.InitParameters">
            <summary>Initializes Addmessage parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.Get(System.String)">
            <summary>Returns the boarding pass object with the given object ID.</summary>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.GetRequest">
            <summary>Returns the boarding pass object with the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.Insert(Google.Apis.Walletobjects.v1.Data.BoardingPassObject)">
            <summary>Inserts a boarding pass object with the given ID and properties.</summary>
            <param name="body">The body of the request.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.InsertRequest">
            <summary>Inserts a boarding pass object with the given ID and properties.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.InsertRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.BoardingPassObject)">
            <summary>Constructs a new Insert request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.InsertRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.InsertRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.InsertRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.InsertRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.InsertRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.InsertRequest.InitParameters">
            <summary>Initializes Insert parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.List(System.String)">
            <summary>Returns a list of all boarding pass objects for a given class ID.</summary>
            <param name="classId">The ID of the class whose objects will be listed.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.ListRequest">
            <summary>Returns a list of all boarding pass objects for a given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.ListRequest.ClassId">
            <summary>The ID of the class whose objects will be listed.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.ListRequest.MaxResults">
            <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            isn't defined.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.ListRequest.Token">
            <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            objects are available in a list. For example, if you have a list of 200 objects and you call list with
            maxResults set to 20, list will return the first 20 objects and a token. Call list again with maxResults
            set to 20 and the token to get the next 20 objects.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.Patch(Google.Apis.Walletobjects.v1.Data.BoardingPassObject,System.String)">
            <summary>Updates the boarding pass object referenced by the given object ID. This method supports patch
            semantics.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.PatchRequest">
            <summary>Updates the boarding pass object referenced by the given object ID. This method supports patch
            semantics.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.BoardingPassObject,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.Update(Google.Apis.Walletobjects.v1.Data.BoardingPassObject,System.String)">
            <summary>Updates the boarding pass object referenced by the given object ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.UpdateRequest">
            <summary>Updates the boarding pass object referenced by the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.UpdateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.BoardingPassObject,System.String)">
            <summary>Constructs a new Update request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.UpdateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.UpdateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.UpdateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.UpdateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.UpdateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.BoardingpassobjectResource.UpdateRequest.InitParameters">
            <summary>Initializes Update parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericclassResource">
            <summary>The "genericclass" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.GenericclassResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.Addmessage(Google.Apis.Walletobjects.v1.Data.GenericClassAddMessageRequest,System.String)">
            <summary>Adds a message to the generic class referenced by the given class ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericclassResource.AddmessageRequest">
            <summary>Adds a message to the generic class referenced by the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.AddmessageRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GenericClassAddMessageRequest,System.String)">
            <summary>Constructs a new Addmessage request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.AddmessageRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.AddmessageRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.AddmessageRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.AddmessageRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.AddmessageRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.AddmessageRequest.InitParameters">
            <summary>Initializes Addmessage parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.Get(System.String)">
            <summary>Returns the generic class with the given class ID.</summary>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericclassResource.GetRequest">
            <summary>Returns the generic class with the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.GetRequest.ApprovedOnly">
            <summary>Specifies latest class version with a reviewStatus of approved be returned. The approved_only
            and version parameters cannot both be set.</summary>
            [default: false]
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.Insert(Google.Apis.Walletobjects.v1.Data.GenericClass)">
            <summary>Inserts a generic class with the given ID and properties.</summary>
            <param name="body">The body of the request.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericclassResource.InsertRequest">
            <summary>Inserts a generic class with the given ID and properties.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.InsertRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GenericClass)">
            <summary>Constructs a new Insert request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.InsertRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.InsertRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.InsertRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.InsertRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.InsertRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.InsertRequest.InitParameters">
            <summary>Initializes Insert parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.List(System.Int64)">
            <summary>Returns a list of all generic classes for a given issuer ID.</summary>
            <param name="issuerId">The ID of the issuer authorized to list classes. No type field, as that is implicate in the
            type part of the Uri.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericclassResource.ListRequest">
            <summary>Returns a list of all generic classes for a given issuer ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.Int64)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.ListRequest.IssuerId">
            <summary>The ID of the issuer authorized to list classes. No type field, as that is implicate in the
            type part of the Uri.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.ListRequest.MaxResults">
            <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            isn't defined.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.ListRequest.Token">
            <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            classes are available in a list. For example, if you have a list of 200 classes and you call list with
            maxResults set to 20, list will return the first 20 classes and a token. Call list again with maxResults
            set to 20 and the token to get the next 20 classes.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.Patch(Google.Apis.Walletobjects.v1.Data.GenericClass,System.String)">
            <summary>Updates the generic class referenced by the given class ID. This method supports patch
            semantics.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericclassResource.PatchRequest">
            <summary>Updates the generic class referenced by the given class ID. This method supports patch
            semantics.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GenericClass,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.Update(Google.Apis.Walletobjects.v1.Data.GenericClass,System.String)">
            <summary>Updates the generic class referenced by the given class ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericclassResource.UpdateRequest">
            <summary>Updates the generic class referenced by the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.UpdateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GenericClass,System.String)">
            <summary>Constructs a new Update request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.UpdateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.UpdateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.UpdateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.UpdateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericclassResource.UpdateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericclassResource.UpdateRequest.InitParameters">
            <summary>Initializes Update parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericobjectResource">
            <summary>The "genericobject" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.GenericobjectResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.Addmessage(Google.Apis.Walletobjects.v1.Data.GenericObjectAddMessageRequest,System.String)">
            <summary>Adds a message to the generic object referenced by the given object ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericobjectResource.AddmessageRequest">
            <summary>Adds a message to the generic object referenced by the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.AddmessageRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GenericObjectAddMessageRequest,System.String)">
            <summary>Constructs a new Addmessage request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.AddmessageRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.AddmessageRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.AddmessageRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.AddmessageRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.AddmessageRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.AddmessageRequest.InitParameters">
            <summary>Initializes Addmessage parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.Get(System.String)">
            <summary>Returns the generic object with the given object ID.</summary>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericobjectResource.GetRequest">
            <summary>Returns the generic object with the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.Insert(Google.Apis.Walletobjects.v1.Data.GenericObject)">
            <summary>Inserts a generic object with the given ID and properties.</summary>
            <param name="body">The body of the request.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericobjectResource.InsertRequest">
            <summary>Inserts a generic object with the given ID and properties.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.InsertRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GenericObject)">
            <summary>Constructs a new Insert request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.InsertRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.InsertRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.InsertRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.InsertRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.InsertRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.InsertRequest.InitParameters">
            <summary>Initializes Insert parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.List(System.String)">
            <summary>Returns a list of all generic objects for a given class ID.</summary>
            <param name="classId">The ID of the class whose objects will be listed.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericobjectResource.ListRequest">
            <summary>Returns a list of all generic objects for a given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.ListRequest.ClassId">
            <summary>The ID of the class whose objects will be listed.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.ListRequest.MaxResults">
            <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            isn't defined.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.ListRequest.Token">
            <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            objects are available in a list. For example, if you have a list of 200 objects and you call list with
            maxResults set to 20, list will return the first 20 objects and a token. Call list again with maxResults
            set to 20 and the token to get the next 20 objects.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.Patch(Google.Apis.Walletobjects.v1.Data.GenericObject,System.String)">
            <summary>Updates the generic object referenced by the given object ID. This method supports patch
            semantics.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericobjectResource.PatchRequest">
            <summary>Updates the generic object referenced by the given object ID. This method supports patch
            semantics.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GenericObject,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.Update(Google.Apis.Walletobjects.v1.Data.GenericObject,System.String)">
            <summary>Updates the generic object referenced by the given object ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GenericobjectResource.UpdateRequest">
            <summary>Updates the generic object referenced by the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.UpdateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GenericObject,System.String)">
            <summary>Constructs a new Update request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.UpdateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.UpdateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.UpdateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.UpdateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GenericobjectResource.UpdateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GenericobjectResource.UpdateRequest.InitParameters">
            <summary>Initializes Update parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardclassResource">
            <summary>The "giftcardclass" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.GiftcardclassResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.Addmessage(Google.Apis.Walletobjects.v1.Data.GiftCardClassAddMessageRequest,System.String)">
            <summary>Adds a message to the gift card class referenced by the given class ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardclassResource.AddmessageRequest">
            <summary>Adds a message to the gift card class referenced by the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.AddmessageRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GiftCardClassAddMessageRequest,System.String)">
            <summary>Constructs a new Addmessage request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.AddmessageRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.AddmessageRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.AddmessageRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.AddmessageRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.AddmessageRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.AddmessageRequest.InitParameters">
            <summary>Initializes Addmessage parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.Get(System.String)">
            <summary>Returns the gift card class with the given class ID.</summary>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardclassResource.GetRequest">
            <summary>Returns the gift card class with the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.GetRequest.ApprovedOnly">
            [default: false]
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.Insert(Google.Apis.Walletobjects.v1.Data.GiftCardClass)">
            <summary>Inserts a gift card class with the given ID and properties.</summary>
            <param name="body">The body of the request.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardclassResource.InsertRequest">
            <summary>Inserts a gift card class with the given ID and properties.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.InsertRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GiftCardClass)">
            <summary>Constructs a new Insert request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.InsertRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.InsertRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.InsertRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.InsertRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.InsertRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.InsertRequest.InitParameters">
            <summary>Initializes Insert parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.List(System.Int64)">
            <summary>Returns a list of all gift card classes for a given issuer ID.</summary>
            <param name="issuerId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardclassResource.ListRequest">
            <summary>Returns a list of all gift card classes for a given issuer ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.Int64)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.Patch(Google.Apis.Walletobjects.v1.Data.GiftCardClass,System.String)">
            <summary>Updates the gift card class referenced by the given class ID. This method supports patch
            semantics.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardclassResource.PatchRequest">
            <summary>Updates the gift card class referenced by the given class ID. This method supports patch
            semantics.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GiftCardClass,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.Update(Google.Apis.Walletobjects.v1.Data.GiftCardClass,System.String)">
            <summary>Updates the gift card class referenced by the given class ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardclassResource.UpdateRequest">
            <summary>Updates the gift card class referenced by the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.UpdateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GiftCardClass,System.String)">
            <summary>Constructs a new Update request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.UpdateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.UpdateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.UpdateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.UpdateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardclassResource.UpdateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardclassResource.UpdateRequest.InitParameters">
            <summary>Initializes Update parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardobjectResource">
            <summary>The "giftcardobject" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.GiftcardobjectResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.Addmessage(Google.Apis.Walletobjects.v1.Data.GiftCardObjectAddMessageRequest,System.String)">
            <summary>Adds a message to the gift card object referenced by the given object ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardobjectResource.AddmessageRequest">
            <summary>Adds a message to the gift card object referenced by the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.AddmessageRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GiftCardObjectAddMessageRequest,System.String)">
            <summary>Constructs a new Addmessage request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.AddmessageRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.AddmessageRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.AddmessageRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.AddmessageRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.AddmessageRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.AddmessageRequest.InitParameters">
            <summary>Initializes Addmessage parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.Get(System.String)">
            <summary>Returns the gift card object with the given object ID.</summary>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardobjectResource.GetRequest">
            <summary>Returns the gift card object with the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.Insert(Google.Apis.Walletobjects.v1.Data.GiftCardObject)">
            <summary>Inserts a gift card object with the given ID and properties.</summary>
            <param name="body">The body of the request.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardobjectResource.InsertRequest">
            <summary>Inserts a gift card object with the given ID and properties.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.InsertRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GiftCardObject)">
            <summary>Constructs a new Insert request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.InsertRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.InsertRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.InsertRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.InsertRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.InsertRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.InsertRequest.InitParameters">
            <summary>Initializes Insert parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.List(System.String)">
            <summary>Returns a list of all gift card objects for a given class ID.</summary>
            <param name="classId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardobjectResource.ListRequest">
            <summary>Returns a list of all gift card objects for a given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.Patch(Google.Apis.Walletobjects.v1.Data.GiftCardObject,System.String)">
            <summary>Updates the gift card object referenced by the given object ID. This method supports patch
            semantics.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardobjectResource.PatchRequest">
            <summary>Updates the gift card object referenced by the given object ID. This method supports patch
            semantics.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GiftCardObject,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.Update(Google.Apis.Walletobjects.v1.Data.GiftCardObject,System.String)">
            <summary>Updates the gift card object referenced by the given object ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.GiftcardobjectResource.UpdateRequest">
            <summary>Updates the gift card object referenced by the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.UpdateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.GiftCardObject,System.String)">
            <summary>Constructs a new Update request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.UpdateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.UpdateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.UpdateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.UpdateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.GiftcardobjectResource.UpdateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.GiftcardobjectResource.UpdateRequest.InitParameters">
            <summary>Initializes Update parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyclassResource">
            <summary>The "loyaltyclass" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.LoyaltyclassResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.Addmessage(Google.Apis.Walletobjects.v1.Data.LoyaltyClassAddMessageRequest,System.String)">
            <summary>Adds a message to the loyalty class referenced by the given class ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyclassResource.AddmessageRequest">
            <summary>Adds a message to the loyalty class referenced by the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.AddmessageRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.LoyaltyClassAddMessageRequest,System.String)">
            <summary>Constructs a new Addmessage request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.AddmessageRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.AddmessageRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.AddmessageRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.AddmessageRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.AddmessageRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.AddmessageRequest.InitParameters">
            <summary>Initializes Addmessage parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.Get(System.String)">
            <summary>Returns the loyalty class with the given class ID.</summary>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyclassResource.GetRequest">
            <summary>Returns the loyalty class with the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.GetRequest.ApprovedOnly">
            <summary>Returns the latest class version with a reviewStatus of approved. The approved_only and version
            parameters cannot both be set.</summary>
            [default: false]
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.Insert(Google.Apis.Walletobjects.v1.Data.LoyaltyClass)">
            <summary>Inserts a loyalty class with the given ID and properties.</summary>
            <param name="body">The body of the request.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyclassResource.InsertRequest">
            <summary>Inserts a loyalty class with the given ID and properties.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.InsertRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.LoyaltyClass)">
            <summary>Constructs a new Insert request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.InsertRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.InsertRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.InsertRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.InsertRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.InsertRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.InsertRequest.InitParameters">
            <summary>Initializes Insert parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.List(System.Int64)">
            <summary>Returns a list of all loyalty classes for a given issuer ID.</summary>
            <param name="issuerId">The ID of the issuer authorized to list classes.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyclassResource.ListRequest">
            <summary>Returns a list of all loyalty classes for a given issuer ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.Int64)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.ListRequest.IssuerId">
            <summary>The ID of the issuer authorized to list classes.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.ListRequest.MaxResults">
            <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            isn't defined.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.ListRequest.Token">
            <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            classes are available in a list. For example, if you have a list of 200 classes and you call list with
            maxResults set to 20, list will return the first 20 classes and a token. Call list again with maxResults
            set to 20 and the token to get the next 20 classes.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.Patch(Google.Apis.Walletobjects.v1.Data.LoyaltyClass,System.String)">
            <summary>Updates the loyalty class referenced by the given class ID. This method supports patch
            semantics.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyclassResource.PatchRequest">
            <summary>Updates the loyalty class referenced by the given class ID. This method supports patch
            semantics.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.LoyaltyClass,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.Update(Google.Apis.Walletobjects.v1.Data.LoyaltyClass,System.String)">
            <summary>Updates the loyalty class referenced by the given class ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyclassResource.UpdateRequest">
            <summary>Updates the loyalty class referenced by the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.UpdateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.LoyaltyClass,System.String)">
            <summary>Constructs a new Update request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.UpdateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.UpdateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.UpdateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.UpdateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyclassResource.UpdateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyclassResource.UpdateRequest.InitParameters">
            <summary>Initializes Update parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyobjectResource">
            <summary>The "loyaltyobject" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.Addmessage(Google.Apis.Walletobjects.v1.Data.LoyaltyObjectAddMessageRequest,System.String)" -->
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.AddmessageRequest">
            <summary>Adds a message to the loyalty object referenced by the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.AddmessageRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.LoyaltyObjectAddMessageRequest,System.String)">
            <summary>Constructs a new Addmessage request.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.AddmessageRequest.ResourceId" -->
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.AddmessageRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.AddmessageRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.AddmessageRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.AddmessageRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.AddmessageRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.AddmessageRequest.InitParameters">
            <summary>Initializes Addmessage parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.Get(System.String)">
            <summary>Returns the loyalty object with the given object ID.</summary>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.GetRequest">
            <summary>Returns the loyalty object with the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.Insert(Google.Apis.Walletobjects.v1.Data.LoyaltyObject)">
            <summary>Inserts a loyalty object with the given ID and properties.</summary>
            <param name="body">The body of the request.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.InsertRequest">
            <summary>Inserts a loyalty object with the given ID and properties.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.InsertRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.LoyaltyObject)">
            <summary>Constructs a new Insert request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.InsertRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.InsertRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.InsertRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.InsertRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.InsertRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.InsertRequest.InitParameters">
            <summary>Initializes Insert parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.List(System.String)">
            <summary>Returns a list of all loyalty objects for a given class ID.</summary>
            <param name="classId">The ID of the class whose objects will be listed.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.ListRequest">
            <summary>Returns a list of all loyalty objects for a given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.ListRequest.ClassId">
            <summary>The ID of the class whose objects will be listed.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.ListRequest.MaxResults">
            <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            isn't defined.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.ListRequest.Token">
            <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            objects are available in a list. For example, if you have a list of 200 objects and you call list with
            maxResults set to 20, list will return the first 20 objects and a token. Call list again with maxResults
            set to 20 and the token to get the next 20 objects.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.Patch(Google.Apis.Walletobjects.v1.Data.LoyaltyObject,System.String)">
            <summary>Updates the loyalty object referenced by the given object ID. This method supports patch
            semantics.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.PatchRequest">
            <summary>Updates the loyalty object referenced by the given object ID. This method supports patch
            semantics.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.LoyaltyObject,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.Update(Google.Apis.Walletobjects.v1.Data.LoyaltyObject,System.String)">
            <summary>Updates the loyalty object referenced by the given object ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.UpdateRequest">
            <summary>Updates the loyalty object referenced by the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.UpdateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.LoyaltyObject,System.String)">
            <summary>Constructs a new Update request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.UpdateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.UpdateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.UpdateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.UpdateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.UpdateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.LoyaltyobjectResource.UpdateRequest.InitParameters">
            <summary>Initializes Update parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferclassResource">
            <summary>The "offerclass" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.OfferclassResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.Addmessage(Google.Apis.Walletobjects.v1.Data.OfferClassAddMessageRequest,System.String)">
            <summary>Adds a message to the offer class referenced by the given class ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferclassResource.AddmessageRequest">
            <summary>Adds a message to the offer class referenced by the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.AddmessageRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.OfferClassAddMessageRequest,System.String)">
            <summary>Constructs a new Addmessage request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.AddmessageRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.AddmessageRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.AddmessageRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.AddmessageRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.AddmessageRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.AddmessageRequest.InitParameters">
            <summary>Initializes Addmessage parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.Get(System.String)">
            <summary>Returns the offer class with the given class ID.</summary>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferclassResource.GetRequest">
            <summary>Returns the offer class with the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.GetRequest.ApprovedOnly">
            <summary>Specifies latest class version with a reviewStatus of approved be returned. The approved_only
            and version parameters cannot both be set.</summary>
            [default: false]
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.Insert(Google.Apis.Walletobjects.v1.Data.OfferClass)">
            <summary>Inserts an offer class with the given ID and properties.</summary>
            <param name="body">The body of the request.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferclassResource.InsertRequest">
            <summary>Inserts an offer class with the given ID and properties.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.InsertRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.OfferClass)">
            <summary>Constructs a new Insert request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.InsertRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.InsertRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.InsertRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.InsertRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.InsertRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.InsertRequest.InitParameters">
            <summary>Initializes Insert parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.List(System.Int64)">
            <summary>Returns a list of all offer classes for a given issuer ID.</summary>
            <param name="issuerId">The ID of the issuer authorized to list classes. No type field, as that is implicate in the
            type part of the Uri.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferclassResource.ListRequest">
            <summary>Returns a list of all offer classes for a given issuer ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.Int64)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.ListRequest.IssuerId">
            <summary>The ID of the issuer authorized to list classes. No type field, as that is implicate in the
            type part of the Uri.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.ListRequest.MaxResults">
            <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            isn't defined.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.ListRequest.Token">
            <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            classes are available in a list. For example, if you have a list of 200 classes and you call list with
            maxResults set to 20, list will return the first 20 classes and a token. Call list again with maxResults
            set to 20 and the token to get the next 20 classes.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.Patch(Google.Apis.Walletobjects.v1.Data.OfferClass,System.String)">
            <summary>Updates the offer class referenced by the given class ID. This method supports patch
            semantics.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferclassResource.PatchRequest">
            <summary>Updates the offer class referenced by the given class ID. This method supports patch
            semantics.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.OfferClass,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.Update(Google.Apis.Walletobjects.v1.Data.OfferClass,System.String)">
            <summary>Updates the offer class referenced by the given class ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferclassResource.UpdateRequest">
            <summary>Updates the offer class referenced by the given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.UpdateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.OfferClass,System.String)">
            <summary>Constructs a new Update request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.UpdateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.UpdateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.UpdateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.UpdateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferclassResource.UpdateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferclassResource.UpdateRequest.InitParameters">
            <summary>Initializes Update parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferobjectResource">
            <summary>The "offerobject" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Walletobjects.v1.OfferobjectResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.Addmessage(Google.Apis.Walletobjects.v1.Data.OfferObjectAddMessageRequest,System.String)">
            <summary>Adds a message to the offer object referenced by the given object ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferobjectResource.AddmessageRequest">
            <summary>Adds a message to the offer object referenced by the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.AddmessageRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.OfferObjectAddMessageRequest,System.String)">
            <summary>Constructs a new Addmessage request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.AddmessageRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.AddmessageRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.AddmessageRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.AddmessageRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.AddmessageRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.AddmessageRequest.InitParameters">
            <summary>Initializes Addmessage parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.Get(System.String)">
            <summary>Returns the offer object with the given object ID.</summary>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferobjectResource.GetRequest">
            <summary>Returns the offer object with the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.Insert(Google.Apis.Walletobjects.v1.Data.OfferObject)">
            <summary>Inserts an offer object with the given ID and properties.</summary>
            <param name="body">The body of the request.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferobjectResource.InsertRequest">
            <summary>Inserts an offer object with the given ID and properties.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.InsertRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.OfferObject)">
            <summary>Constructs a new Insert request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.InsertRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.InsertRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.InsertRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.InsertRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.InsertRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.InsertRequest.InitParameters">
            <summary>Initializes Insert parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.List(System.String)">
            <summary>Returns a list of all offer objects for a given class ID.</summary>
            <param name="classId">The ID of the class whose objects will be listed.</param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferobjectResource.ListRequest">
            <summary>Returns a list of all offer objects for a given class ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.ListRequest.ClassId">
            <summary>The ID of the class whose objects will be listed.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.ListRequest.MaxResults">
            <summary>Identifies the max number of results returned by a list. All results are returned if maxResults
            isn't defined.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.ListRequest.Token">
            <summary>Used to get the next set of results if maxResults is specified, but more than maxResults
            objects are available in a list. For example, if you have a list of 200 objects and you call list with
            maxResults set to 20, list will return the first 20 objects and a token. Call list again with maxResults
            set to 20 and the token to get the next 20 objects.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.Patch(Google.Apis.Walletobjects.v1.Data.OfferObject,System.String)">
            <summary>Updates the offer object referenced by the given object ID. This method supports patch
            semantics.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferobjectResource.PatchRequest">
            <summary>Updates the offer object referenced by the given object ID. This method supports patch
            semantics.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.OfferObject,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.Update(Google.Apis.Walletobjects.v1.Data.OfferObject,System.String)">
            <summary>Updates the offer object referenced by the given object ID.</summary>
            <param name="body">The body of the request.</param>
            <param name="resourceId"></param>
        </member>
        <member name="T:Google.Apis.Walletobjects.v1.OfferobjectResource.UpdateRequest">
            <summary>Updates the offer object referenced by the given object ID.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.UpdateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Walletobjects.v1.Data.OfferObject,System.String)">
            <summary>Constructs a new Update request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.UpdateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.UpdateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.UpdateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.UpdateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Walletobjects.v1.OfferobjectResource.UpdateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Walletobjects.v1.OfferobjectResource.UpdateRequest.InitParameters">
            <summary>Initializes Update parameter list.</summary>
        </member>
    </members>
</doc>
